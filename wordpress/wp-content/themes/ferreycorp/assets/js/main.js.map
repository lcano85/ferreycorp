{"version":3,"sources":["main.js","../../node_modules/swiper/swiper-bundle.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","Swiper","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","isObject$1","obj","constructor","extend$1","src","keys","forEach","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","document","ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","getWindow","win","window","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_construct","Parent","args","Class","Reflect","construct","sham","Proxy","toString","e","_isNativeReflectConstruct","a","push","instance","Function","bind","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","create","value","Dom7","_Array","subClass","superClass","items","proto","_this","concat","ReferenceError","_assertThisInitialized","Array","arrayFlat","arr","res","el","isArray","arrayFilter","filter","$","selector","context","html","trim","toCreate","tempParent","innerHTML","qsa","nodeType","uniqueArray","arrayUnique","support","device","browser","Methods","addClass","_len","classes","_key","classNames","map","c","split","_el$classList","classList","add","removeClass","_len2","_key2","_el$classList2","remove","hasClass","_len4","_key4","className","contains","toggleClass","_len3","_key3","toggle","attr","attrs","getAttribute","attrName","removeAttr","removeAttribute","transform","transition","duration","transitionDuration","on","_len5","_key5","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","is","_parents","parents","k","handleEvent","j","events","_event","dom7LiveListeners","proxyListener","event","dom7Listeners","off","_len6","_key6","handlers","handler","dom7proxy","splice","trigger","_len9","_key9","evt","detail","bubbles","cancelable","data","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","_styles","styles","offsetWidth","parseFloat","outerHeight","_styles2","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","_prop","each","index","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","_next","prev","previousElementSibling","prevAll","prevEls","_prev","parent","parentNode","_parent","closest","find","foundElements","found","err","console","log","removeChild","nextTick","delay","now","getTranslate","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","WebKitCSSMatrix","webkitTransform","replace","join","MozTransform","OTransform","MsTransform","msTransform","m41","m42","isObject","slice","extend","to","noExtend","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","__swiper__","bindModuleMethods","subKey","classesToSelector","getSupport","touch","DocumentTouch","pointerEvents","PointerEvent","maxTouchPoints","observer","passiveListener","supportsPassive","opts","gestures","getDevice","overrides","_temp","platform","ua","screenWidth","screenHeight","android","windows","ios","width","height","match","ipad","ipod","iphone","macos","os","getBrowser","isEdge","isSafari","toLowerCase","isWebView","test","methodName","Resize","name","swiper","resize","createObserver","destroyed","initialized","ResizeObserver","entries","newWidth","newHeight","_ref","contentBoxSize","contentRect","inlineSize","blockSize","resizeHandler","observe","removeObserver","unobserve","emit","orientationChangeHandler","init","params","resizeObserver","destroy","Observer","attach","options","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observers","observeParents","containerParents","$el","observeSlideChildren","$wrapperEl","disconnect","Observer$1","onResize","allowSlideNext","allowSlidePrev","breakpoints","setBreakpoint","snapGrid","updateSize","updateSlides","updateSlidesClasses","slidesPerView","isEnd","isBeginning","centeredSlides","slideTo","slides","activeIndex","autoplay","running","paused","run","watchOverflow","checkOverflow","dummyEventAttached","dummyEventListener","defaults","direction","touchEventsTarget","initialSlide","speed","cssMode","updateOnWindowResize","nested","preventInteractionOnTransition","url","edgeSwipeDetection","edgeSwipeThreshold","freeMode","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","autoHeight","setWrapperSize","virtualTranslate","effect","breakpointsBase","spaceBetween","slidesPerColumn","slidesPerColumnFill","slidesPerGroup","slidesPerGroupSkip","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","roundLengths","touchRatio","touchAngle","simulateTouch","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","watchSlidesProgress","watchSlidesVisibility","grabCursor","preventClicks","preventClicksPropagation","slideToClickedSlide","preloadImages","updateOnImagesReady","loop","loopAdditionalSlides","loopedSlides","loopFillGroupWithBlank","loopPreventsSlide","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","slideClass","slideBlankClass","slideActiveClass","slideDuplicateActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slideDuplicateNextClass","slidePrevClass","slideDuplicatePrevClass","wrapperClass","runCallbacksOnInit","_emitClasses","prototypes","modular","useParams","instanceParams","modules","moduleName","useModules","modulesParams","moduleParams","moduleEventName","eventsEmitter","priority","method","eventsListeners","once","onceHandler","__emitterProxy","onAny","eventsAnyListeners","offAny","eventHandler","update","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","Number","isNaN","size","getDirectionLabel","property","margin-top","margin-bottom ","margin-left","margin-right","padding-left","padding-right","marginRight","getDirectionPropertyValue","node","label","swiperSize","rtl","rtlTranslate","wrongRTL","previousSlidesLength","isVirtual","virtual","enabled","slidesLength","slidesGrid","slidesSizesGrid","offsetBefore","offsetAfter","slidesNumberEvenToRows","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginBottom","Math","floor","ceil","max","allSlidesSize","maxSnap","_allSlidesSize","allSlidesOffset","slidesPerRow","numFullColumns","slideSize","currentTransform","currentWebKitTransform","paddingLeft","paddingRight","_slide$","slide","row","column","newSlideOrderIndex","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","boxSizing","swiperSlideSize","abs","_$wrapperEl$css","_$wrapperEl$css2","newSlidesGrid","_i","slidesGridItem","_i2","_slidesGridItem","slideEl","slideIndex","_slides$filter$css","slideSizeValue","snap","snapIndex","updateSlidesOffset","updateAutoHeight","activeSlides","setTransition","visibleSlides","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","visibleSlidesIndexes","slideBefore","slideAfter","slideProgress","minTranslate","progress","updateProgress","multiplier","translatesDiff","maxTranslate","wasBeginning","wasEnd","realIndex","activeSlide","nextSlide","prevSlide","emitSlidesClasses","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","skip","updateClickedSlide","slideFound","clickedSlide","clickedIndex","currentTranslate","setTranslate","byController","wrapperEl","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","newTranslate","isH","scrollTo","_wrapperEl$scrollTo","behavior","onTranslateToWrapperTransitionEnd","transitionStart","dir","Error","indexAsNumber","isFinite","normalizedTranslate","normalizedGird","normalizedGridNext","t","scrollWidth","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","blankSlidesNum","blankNode","prependSlides","appendSlides","cloneNode","diff","loopDestroy","setGrabCursor","moving","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","$targetEl","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","shadowRoot","path","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","innerWidth","preventDefault","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","formElements","shouldPreventDefault","isContentEditable","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","pow","atan2","PI","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","currentPos","touchEndTime","timeDiff","lastClickTime","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","moveDistance","doBounce","bounceAmount","needsLoopFix","currentSlideSize","stopIndex","groupSize","_increment","ratio","navigation","nextEl","prevEl","onScroll","onClick","stopImmediatePropagation","start","move","end","passive","cancel","detachEvents","breakpoint","breakpointOnlyParams","breakpointParams","_swiper$loopedSlides","getBreakpoint","currentBreakpoint","param","paramValue","originalParams","wasMultiRow","isMultiRow","emitContainerClasses","directionChanged","needsReLoop","changeDirection","base","containerEl","currentWidth","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_points$i","wasLocked","lastSlidePosition","addClasses","prefix","resultClasses","suffixes","pointer-events","free-mode","autoheight","multirow","multirow-column","css-mode","item","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","onReady","complete","image","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swipers","newParams","moduleParamName","desktop","swiperParams","passedParams","eventName","touchEventsTouch","touchEventsDesktop","clickTimeout","Constructor","staticProps","_proto","setProgress","getSlideClasses","updates","spv","breakLoop","translateValue","newDirection","needUpdate","currentDirection","mount","mounted","deleteInstance","cleanStyles","object","extendDefaults","newDefaults","installModule","use","m","protoProps","prototypeGroup","protoMethod","Virtual","force","_swiper$params","_swiper$params$virtua","addSlidesBefore","addSlidesAfter","_swiper$virtual","previousFrom","from","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesBefore","slidesAfter","onRendered","lazy","load","renderExternal","slidesToRender","renderExternalUpdate","prependIndexes","appendIndexes","cache","$slideEl","newCache","numberOfNewSlides","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","beforeInit","overwriteParams","Keyboard","handle","kc","keyCode","charCode","pageUpDown","keyboard","isPageUp","isPageDown","isArrowLeft","isArrowRight","isArrowUp","isArrowDown","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","swiperWidth","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","enable","disable","Keyboard$1","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","element","isSupported","implementation","hasFeature","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","handleMouseEnter","mouseEntered","handleMouseLeave","mousewheel","eventsTarget","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","positions","sensitivity","_newEvent","sign","ignoreWheelEvents","_recentWheelEvents","snapToThreshold","timeout","shift","_prevEvent","firstEvent","autoplayDisableOnInteraction","stop","newEvent","raw","prevEvent","animateSlider","releaseScroll","thresholdDelta","thresholdTime","getTime","Navigation","toggleEl","disabled","disabledClass","tagName","$nextEl","$prevEl","_swiper$navigation","lockClass","onPrevClick","onNextClick","_swiper$navigation2","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","bulletsOffset","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleY","scaleX","progressbarFillClass","renderCustom","render","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","scrollbar","hide","opacity","divider","moveDivider","display","getPointerPosition","clientX","clientY","setDragPosition","dragStartPos","positionRatio","onDragStart","dragTimeout","onDragMove","onDragEnd","snapOnRelease","enableDraggable","activeListener","disableDraggable","$swiperEl","dragClass","dragEl","draggable","Parallax","setTransform","currentOpacity","currentScale","parallax","parallaxEl","$parallaxEl","parallaxDuration","Zoom","getDistanceBetweenTouches","x1","y1","x2","y2","onGestureStart","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","onGestureChange","scaleMove","onGestureEnd","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","onTransitionEnd","out","in","touchX","translateX","translateY","zoomedSlideClass","touchY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","toggleGestures","slideSelector","enableGestures","gesturesEnabled","disableGestures","activeListenerWithCapture","Lazy","loadInSlide","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","background","$pictureEl","originalSlide","duplicatedSlide","sourceEl","$source","preloaderClass","slideOriginalIndex","slideExist","initialImageLoaded","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","checkInViewOnLoad","$scrollElement","scrollingElement","isWindow","scrollElementWidth","scrollElementHeight","scrollHandlerAttached","Controller","LinearSpline","guess","i1","i3","binarySearch","array","interpolate","getInterpolateFunction","controller","spline","_setTranslate","controlledTranslate","controlled","control","setControlledTranslate","by","inverse","setControlledTransition","A11y","getRandomNumber","repeat","round","random","makeElFocusable","makeElNotFocusable","addElRole","role","addElRoleDescription","description","addElControls","controls","addElLabel","addElId","addElLive","live","disableEl","enableEl","onEnterOrSpaceKey","a11y","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","updateNavigation","updatePagination","bulletEl","$bulletEl","paginationBulletMessage","$containerEl","containerRoleDescriptionMessage","containerMessage","wrapperId","itemRoleDescriptionMessage","slideRole","ariaLabelMessage","slideLabelMessage","History","hashNavigation","paths","getPathValues","scrollToSlide","setHistoryPopState","urlOverride","URL","pathArray","part","setHistory","root","slugify","includes","currentState","state","HashNavigation","onHashCange","newHash","setHash","watchState","Autoplay","$activeSlideEl","autoplayResult","reverseDirection","stopOnLastSlide","pause","waitForTransition","onVisibilityChange","visibilityState","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","$cubeShadowEl","cubeEffect","wrapperRotate","shadow","scale2","slideAngle","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","zFactor","Flip","rotateY","flipEffect","limitRotation","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","$shadowBeforeEl","$shadowAfterEl","Thumbs","thumbsParams","thumbs","SwiperClass","swiperCreated","thumbsContainerClass","onThumbClick","currentIndex","thumbsSwiper","slideThumbActiveClass","initial","currentThumbsIndex","newThumbsIndex","autoScrollOffset","useOffset","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","hideOnClick","toEdge","fromEdge","isHidden","_swiper$navigation3","targetEl","number","activeIndexChange","snapIndexChange","slidesLengthChange","snapGridLengthChange","touchStart","touchEnd","doubleTap","slideChange","checkInView","loadOnTransitionStart","scroll","scrollbarDragMove resize _freeModeNoMomentumRelease","notificationClass","afterInit","paginationUpdate","disableOnInteraction","beforeTransitionStart","sliderFirstMove","beforeDestroy","ferreycorpBanner","640","768","1024","acc","getElementsByClassName","panel","maxHeight","scrollHeight","jQuery","focus","$this","slideUp","slideToggle"],"mappings":"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","file":"main.js","sourcesContent":["// // Imports\r\n// //=require swiper/swiper-bundle.js\r\n\r\n// var ferreycorpBanner = new Swiper(\".ferreycorp__banner\", {\r\n//   loop: true,\r\n//   autoplay: {\r\n//     delay: 10000,\r\n//     disableOnInteraction: false,\r\n//   },\r\n//   pagination: {\r\n//     el: \".swiper-pagination\",\r\n//   },\r\n// });\r\n\r\n// var swiper = new Swiper(\".ferreycorp__noticias .noticias__content\", {\r\n//   slidesPerView: 1,\r\n//   spaceBetween: 30,\r\n//   navigation: {\r\n//     nextEl: \".swiper-button-next\",\r\n//     prevEl: \".swiper-button-prev\",\r\n//   },\r\n//   breakpoints: {\r\n//     640: {\r\n//       slidesPerView: 1,\r\n//       spaceBetween: 20,\r\n//     },\r\n//     768: {\r\n//       slidesPerView: 2,\r\n//       spaceBetween: 40,\r\n//     },\r\n//     1024: {\r\n//       slidesPerView: 3,\r\n//       spaceBetween: 29,\r\n//     },\r\n//   },\r\n// });\r\n\r\n// jQuery(function ($) {\r\n//   //Buscador\r\n//   $(\"html\").on(\"click\", function () {\r\n//     $(\".ferreycorp__search\").removeClass(\"active\");\r\n//   });\r\n//   $(\".ferreycorp__search\").on(\"click\", function (e) {\r\n//     e.stopPropagation();\r\n//     $(this).addClass(\"active\");\r\n//     $(this).find(\".form-control\").focus();\r\n//   });\r\n\r\n//   // hamburger__list\r\n//   $(\".hamburger__list\").click(function () {\r\n//     $(this).toggleClass(\"active\");\r\n\r\n//     $(\".menu-principal\").toggleClass(\"left-open\");\r\n//     $(\"body\").toggleClass(\"overflow-hidden\");\r\n//   });\r\n// });\r\n\r\n// Imports\r\n/**\n * Swiper 6.5.8\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 23, 2021\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  /**\n   * SSR Window 3.0.0\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */\n\n  /* eslint-disable no-param-reassign */\n  function isObject$1(obj) {\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n  }\n\n  function extend$1(target, src) {\n    if (target === void 0) {\n      target = {};\n    }\n\n    if (src === void 0) {\n      src = {};\n    }\n\n    Object.keys(src).forEach(function (key) {\n      if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n        extend$1(target[key], src[key]);\n      }\n    });\n  }\n\n  var ssrDocument = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: ''\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {}\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        }\n      };\n    },\n    createElementNS: function createElementNS() {\n      return {};\n    },\n    importNode: function importNode() {\n      return null;\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    }\n  };\n\n  function getDocument() {\n    var doc = typeof document !== 'undefined' ? document : {};\n    extend$1(doc, ssrDocument);\n    return doc;\n  }\n\n  var ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n      userAgent: ''\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    },\n    history: {\n      replaceState: function replaceState() {},\n      pushState: function pushState() {},\n      go: function go() {},\n      back: function back() {}\n    },\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        }\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n    matchMedia: function matchMedia() {\n      return {};\n    },\n    requestAnimationFrame: function requestAnimationFrame(callback) {\n      if (typeof setTimeout === 'undefined') {\n        callback();\n        return null;\n      }\n\n      return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame: function cancelAnimationFrame(id) {\n      if (typeof setTimeout === 'undefined') {\n        return;\n      }\n\n      clearTimeout(id);\n    }\n  };\n\n  function getWindow() {\n    var win = typeof window !== 'undefined' ? window : {};\n    extend$1(win, ssrWindow);\n    return win;\n  }\n\n  /**\n   * Dom7 3.0.0\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * https://framework7.io/docs/dom7.html\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n\n  function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !_isNativeFunction(Class)) return Class;\n\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n\n        _cache.set(Class, Wrapper);\n      }\n\n      function Wrapper() {\n        return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n      }\n\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      return _setPrototypeOf(Wrapper, Class);\n    };\n\n    return _wrapNativeSuper(Class);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n  /* eslint-disable no-proto */\n\n\n  function makeReactive(obj) {\n    var proto = obj.__proto__;\n    Object.defineProperty(obj, '__proto__', {\n      get: function get() {\n        return proto;\n      },\n      set: function set(value) {\n        proto.__proto__ = value;\n      }\n    });\n  }\n\n  var Dom7 = /*#__PURE__*/function (_Array) {\n    _inheritsLoose(Dom7, _Array);\n\n    function Dom7(items) {\n      var _this;\n\n      _this = _Array.call.apply(_Array, [this].concat(items)) || this;\n      makeReactive(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    return Dom7;\n  }( /*#__PURE__*/_wrapNativeSuper(Array));\n\n  function arrayFlat(arr) {\n    if (arr === void 0) {\n      arr = [];\n    }\n\n    var res = [];\n    arr.forEach(function (el) {\n      if (Array.isArray(el)) {\n        res.push.apply(res, arrayFlat(el));\n      } else {\n        res.push(el);\n      }\n    });\n    return res;\n  }\n\n  function arrayFilter(arr, callback) {\n    return Array.prototype.filter.call(arr, callback);\n  }\n\n  function arrayUnique(arr) {\n    var uniqueArray = [];\n\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n    }\n\n    return uniqueArray;\n  }\n\n  function qsa(selector, context) {\n    if (typeof selector !== 'string') {\n      return [selector];\n    }\n\n    var a = [];\n    var res = context.querySelectorAll(selector);\n\n    for (var i = 0; i < res.length; i += 1) {\n      a.push(res[i]);\n    }\n\n    return a;\n  }\n\n  function $(selector, context) {\n    var window = getWindow();\n    var document = getDocument();\n    var arr = [];\n\n    if (!context && selector instanceof Dom7) {\n      return selector;\n    }\n\n    if (!selector) {\n      return new Dom7(arr);\n    }\n\n    if (typeof selector === 'string') {\n      var html = selector.trim();\n\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        var toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        var tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        arr = qsa(selector.trim(), context || document);\n      } // arr = qsa(selector, document);\n\n    } else if (selector.nodeType || selector === window || selector === document) {\n      arr.push(selector);\n    } else if (Array.isArray(selector)) {\n      if (selector instanceof Dom7) return selector;\n      arr = selector;\n    }\n\n    return new Dom7(arrayUnique(arr));\n  }\n\n  $.fn = Dom7.prototype;\n\n  function addClass() {\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n      classes[_key] = arguments[_key];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      var _el$classList;\n\n      (_el$classList = el.classList).add.apply(_el$classList, classNames);\n    });\n    return this;\n  }\n\n  function removeClass() {\n    for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classes[_key2] = arguments[_key2];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      var _el$classList2;\n\n      (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);\n    });\n    return this;\n  }\n\n  function toggleClass() {\n    for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      classes[_key3] = arguments[_key3];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      classNames.forEach(function (className) {\n        el.classList.toggle(className);\n      });\n    });\n  }\n\n  function hasClass() {\n    for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      classes[_key4] = arguments[_key4];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    return arrayFilter(this, function (el) {\n      return classNames.filter(function (className) {\n        return el.classList.contains(className);\n      }).length > 0;\n    }).length > 0;\n  }\n\n  function attr(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) return this[0].getAttribute(attrs);\n      return undefined;\n    } // Set attrs\n\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n\n    return this;\n  }\n\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].style.transform = transform;\n    }\n\n    return this;\n  }\n\n  function transition$1(duration) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].style.transitionDuration = typeof duration !== 'string' ? duration + \"ms\" : duration;\n    }\n\n    return this;\n  }\n\n  function on() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    var eventType = args[0],\n        targetSelector = args[1],\n        listener = args[2],\n        capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      eventType = args[0];\n      listener = args[1];\n      capture = args[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) return;\n      var eventData = e.target.dom7EventData || [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n        var _parents = $(target).parents(); // eslint-disable-line\n\n\n        for (var k = 0; k < _parents.length; k += 1) {\n          if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);\n        }\n      }\n    }\n\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      listener.apply(this, eventData);\n    }\n\n    var events = eventType.split(' ');\n    var j;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) el.dom7Listeners = {};\n          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var _event = events[j];\n          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n          if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];\n\n          el.dom7LiveListeners[_event].push({\n            listener: listener,\n            proxyListener: handleLiveEvent\n          });\n\n          el.addEventListener(_event, handleLiveEvent, capture);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function off() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    var eventType = args[0],\n        targetSelector = args[1],\n        listener = args[2],\n        capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      eventType = args[0];\n      listener = args[1];\n      capture = args[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n    var events = eventType.split(' ');\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = void 0;\n\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function trigger() {\n    var window = getWindow();\n\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n\n        if (window.CustomEvent) {\n          var evt = new window.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true\n          });\n          el.dom7EventData = args.filter(function (data, dataIndex) {\n            return dataIndex > 0;\n          });\n          el.dispatchEvent(evt);\n          el.dom7EventData = [];\n          delete el.dom7EventData;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function transitionEnd$1(callback) {\n    var dom = this;\n\n    function fireCallBack(e) {\n      if (e.target !== this) return;\n      callback.call(this, e);\n      dom.off('transitionend', fireCallBack);\n    }\n\n    if (callback) {\n      dom.on('transitionend', fireCallBack);\n    }\n\n    return this;\n  }\n\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        var _styles = this.styles();\n\n        return this[0].offsetWidth + parseFloat(_styles.getPropertyValue('margin-right')) + parseFloat(_styles.getPropertyValue('margin-left'));\n      }\n\n      return this[0].offsetWidth;\n    }\n\n    return null;\n  }\n\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        var _styles2 = this.styles();\n\n        return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue('margin-top')) + parseFloat(_styles2.getPropertyValue('margin-bottom'));\n      }\n\n      return this[0].offsetHeight;\n    }\n\n    return null;\n  }\n\n  function offset() {\n    if (this.length > 0) {\n      var window = getWindow();\n      var document = getDocument();\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = document.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === window ? window.scrollY : el.scrollTop;\n      var scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n\n    return null;\n  }\n\n  function styles() {\n    var window = getWindow();\n    if (this[0]) return window.getComputedStyle(this[0], null);\n    return {};\n  }\n\n  function css(props, value) {\n    var window = getWindow();\n    var i;\n\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        // .css('width')\n        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n      } else {\n        // .css({ width: '100px' })\n        for (i = 0; i < this.length; i += 1) {\n          for (var _prop in props) {\n            this[i].style[_prop] = props[_prop];\n          }\n        }\n\n        return this;\n      }\n    }\n\n    if (arguments.length === 2 && typeof props === 'string') {\n      // .css('width', '100px')\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n\n      return this;\n    }\n\n    return this;\n  }\n\n  function each(callback) {\n    if (!callback) return this;\n    this.forEach(function (el, index) {\n      callback.apply(el, [el, index]);\n    });\n    return this;\n  }\n\n  function filter(callback) {\n    var result = arrayFilter(this, callback);\n    return $(result);\n  }\n\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n\n    return this;\n  }\n\n  function text(text) {\n    if (typeof text === 'undefined') {\n      return this[0] ? this[0].textContent.trim() : null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n\n    return this;\n  }\n\n  function is(selector) {\n    var window = getWindow();\n    var document = getDocument();\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') return false;\n\n    if (typeof selector === 'string') {\n      if (el.matches) return el.matches(selector);\n      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n      if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n      compareWith = $(selector);\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    if (selector === document) {\n      return el === document;\n    }\n\n    if (selector === window) {\n      return el === window;\n    }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  function index() {\n    var child = this[0];\n    var i;\n\n    if (child) {\n      i = 0; // eslint-disable-next-line\n\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) i += 1;\n      }\n\n      return i;\n    }\n\n    return undefined;\n  }\n\n  function eq(index) {\n    if (typeof index === 'undefined') return this;\n    var length = this.length;\n\n    if (index > length - 1) {\n      return $([]);\n    }\n\n    if (index < 0) {\n      var returnIndex = length + index;\n      if (returnIndex < 0) return $([]);\n      return $([this[returnIndex]]);\n    }\n\n    return $([this[index]]);\n  }\n\n  function append() {\n    var newChild;\n    var document = getDocument();\n\n    for (var k = 0; k < arguments.length; k += 1) {\n      newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\n\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function prepend(newChild) {\n    var document = getDocument();\n    var i;\n    var j;\n\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n\n    return this;\n  }\n\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return $([this[0].nextElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) return $([]);\n\n    while (el.nextElementSibling) {\n      var _next = el.nextElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(_next).is(selector)) nextEls.push(_next);\n      } else nextEls.push(_next);\n\n      el = _next;\n    }\n\n    return $(nextEls);\n  }\n\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return $([el.previousElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (el.previousElementSibling) return $([el.previousElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) return $([]);\n\n    while (el.previousElementSibling) {\n      var _prev = el.previousElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(_prev).is(selector)) prevEls.push(_prev);\n      } else prevEls.push(_prev);\n\n      el = _prev;\n    }\n\n    return $(prevEls);\n  }\n\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n\n    return $(parents);\n  }\n\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var _parent = this[i].parentNode; // eslint-disable-line\n\n      while (_parent) {\n        if (selector) {\n          if ($(_parent).is(selector)) parents.push(_parent);\n        } else {\n          parents.push(_parent);\n        }\n\n        _parent = _parent.parentNode;\n      }\n    }\n\n    return $(parents);\n  }\n\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n\n    if (typeof selector === 'undefined') {\n      return $([]);\n    }\n\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n\n    return closest;\n  }\n\n  function find(selector) {\n    var foundElements = [];\n\n    for (var i = 0; i < this.length; i += 1) {\n      try {\n        var found = this[i].querySelectorAll(selector);\n      } catch (err) {\n        console.log(selector);\n      }\n\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n\n    return $(foundElements);\n  }\n\n  function children(selector) {\n    var children = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].children;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector || $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n\n    return $(children);\n  }\n\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n    }\n\n    return this;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    transform: transform,\n    transition: transition$1,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd$1,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    styles: styles,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    filter: filter,\n    remove: remove\n  };\n  Object.keys(Methods).forEach(function (methodName) {\n    Object.defineProperty($.fn, methodName, {\n      value: Methods[methodName],\n      writable: true\n    });\n  });\n\n  function deleteProps(obj) {\n    var object = obj;\n    Object.keys(object).forEach(function (key) {\n      try {\n        object[key] = null;\n      } catch (e) {// no getter for object\n      }\n\n      try {\n        delete object[key];\n      } catch (e) {// something got wrong\n      }\n    });\n  }\n\n  function nextTick(callback, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return setTimeout(callback, delay);\n  }\n\n  function now() {\n    return Date.now();\n  }\n\n  function getComputedStyle$1(el) {\n    var window = getWindow();\n    var style;\n\n    if (window.getComputedStyle) {\n      style = window.getComputedStyle(el, null);\n    }\n\n    if (!style && el.currentStyle) {\n      style = el.currentStyle;\n    }\n\n    if (!style) {\n      style = el.style;\n    }\n\n    return style;\n  }\n\n  function getTranslate(el, axis) {\n    if (axis === void 0) {\n      axis = 'x';\n    }\n\n    var window = getWindow();\n    var matrix;\n    var curTransform;\n    var transformMatrix;\n    var curStyle = getComputedStyle$1(el);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(function (a) {\n          return a.replace(',', '.');\n        }).join(', ');\n      } // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n\n\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n    }\n\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n    }\n\n    return curTransform || 0;\n  }\n\n  function isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n  }\n\n  function extend() {\n    var to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n    var noExtend = ['__proto__', 'constructor', 'prototype'];\n\n    for (var i = 1; i < arguments.length; i += 1) {\n      var nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n\n      if (nextSource !== undefined && nextSource !== null) {\n        var keysArray = Object.keys(Object(nextSource)).filter(function (key) {\n          return noExtend.indexOf(key) < 0;\n        });\n\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          var nextKey = keysArray[nextIndex];\n          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n\n    return to;\n  }\n\n  function bindModuleMethods(instance, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (isObject(obj[key])) {\n        Object.keys(obj[key]).forEach(function (subKey) {\n          if (typeof obj[key][subKey] === 'function') {\n            obj[key][subKey] = obj[key][subKey].bind(instance);\n          }\n        });\n      }\n\n      instance[key] = obj[key];\n    });\n  }\n\n  function classesToSelector(classes) {\n    if (classes === void 0) {\n      classes = '';\n    }\n\n    return \".\" + classes.trim().replace(/([\\.:\\/])/g, '\\\\$1') // eslint-disable-line\n    .replace(/ /g, '.');\n  }\n\n  var support;\n\n  function calcSupport() {\n    var window = getWindow();\n    var document = getDocument();\n    return {\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n      pointerEvents: !!window.PointerEvent && 'maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints >= 0,\n      observer: function checkObserver() {\n        return 'MutationObserver' in window || 'WebkitMutationObserver' in window;\n      }(),\n      passiveListener: function checkPassiveListener() {\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          window.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {// No support\n        }\n\n        return supportsPassive;\n      }(),\n      gestures: function checkGestures() {\n        return 'ongesturestart' in window;\n      }()\n    };\n  }\n\n  function getSupport() {\n    if (!support) {\n      support = calcSupport();\n    }\n\n    return support;\n  }\n\n  var device;\n\n  function calcDevice(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        userAgent = _ref.userAgent;\n\n    var support = getSupport();\n    var window = getWindow();\n    var platform = window.navigator.platform;\n    var ua = userAgent || window.navigator.userAgent;\n    var device = {\n      ios: false,\n      android: false\n    };\n    var screenWidth = window.screen.width;\n    var screenHeight = window.screen.height;\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    var windows = platform === 'Win32';\n    var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n    var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      if (!ipad) ipad = [0, 1, '13_0_0'];\n      macos = false;\n    } // Android\n\n\n    if (android && !windows) {\n      device.os = 'android';\n      device.android = true;\n    }\n\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    } // Export object\n\n\n    return device;\n  }\n\n  function getDevice(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    if (!device) {\n      device = calcDevice(overrides);\n    }\n\n    return device;\n  }\n\n  var browser;\n\n  function calcBrowser() {\n    var window = getWindow();\n\n    function isSafari() {\n      var ua = window.navigator.userAgent.toLowerCase();\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n    }\n\n    return {\n      isEdge: !!window.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n    };\n  }\n\n  function getBrowser() {\n    if (!browser) {\n      browser = calcBrowser();\n    }\n\n    return browser;\n  }\n\n  var supportsResizeObserver = function supportsResizeObserver() {\n    var window = getWindow();\n    return typeof window.ResizeObserver !== 'undefined';\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      extend(swiper, {\n        resize: {\n          observer: null,\n          createObserver: function createObserver() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.resize.observer = new ResizeObserver(function (entries) {\n              var width = swiper.width,\n                  height = swiper.height;\n              var newWidth = width;\n              var newHeight = height;\n              entries.forEach(function (_ref) {\n                var contentBoxSize = _ref.contentBoxSize,\n                    contentRect = _ref.contentRect,\n                    target = _ref.target;\n                if (target && target !== swiper.el) return;\n                newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n                newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n              });\n\n              if (newWidth !== width || newHeight !== height) {\n                swiper.resize.resizeHandler();\n              }\n            });\n            swiper.resize.observer.observe(swiper.el);\n          },\n          removeObserver: function removeObserver() {\n            if (swiper.resize.observer && swiper.resize.observer.unobserve && swiper.el) {\n              swiper.resize.observer.unobserve(swiper.el);\n              swiper.resize.observer = null;\n            }\n          },\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.emit('orientationchange');\n          }\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        var window = getWindow();\n\n        if (swiper.params.resizeObserver && supportsResizeObserver()) {\n          swiper.resize.createObserver();\n          return;\n        } // Emit resize\n\n\n        window.addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange\n\n        window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy(swiper) {\n        var window = getWindow();\n        swiper.resize.removeObserver();\n        window.removeEventListener('resize', swiper.resize.resizeHandler);\n        window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      }\n    }\n  };\n\n  var Observer = {\n    attach: function attach(target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var window = getWindow();\n      var swiper = this;\n      var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(observerUpdate);\n        } else {\n          window.setTimeout(observerUpdate, 0);\n        }\n      });\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n      });\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.support.observer || !swiper.params.observer) return;\n\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      } // Observe container\n\n\n      swiper.observer.attach(swiper.$el[0], {\n        childList: swiper.params.observeSlideChildren\n      }); // Observe wrapper\n\n      swiper.observer.attach(swiper.$wrapperEl[0], {\n        attributes: false\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    }\n  };\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        observer: _extends({}, Observer, {\n          observers: []\n        })\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.observer.init();\n      },\n      destroy: function destroy(swiper) {\n        swiper.observer.destroy();\n      }\n    }\n  };\n\n  var modular = {\n    useParams: function useParams(instanceParams) {\n      var instance = this;\n      if (!instance.modules) return;\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName]; // Extend params\n\n        if (module.params) {\n          extend(instanceParams, module.params);\n        }\n      });\n    },\n    useModules: function useModules(modulesParams) {\n      if (modulesParams === void 0) {\n        modulesParams = {};\n      }\n\n      var instance = this;\n      if (!instance.modules) return;\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName];\n        var moduleParams = modulesParams[moduleName] || {}; // Add event listeners\n\n        if (module.on && instance.on) {\n          Object.keys(module.on).forEach(function (moduleEventName) {\n            instance.on(moduleEventName, module.on[moduleEventName]);\n          });\n        } // Module create callback\n\n\n        if (module.create) {\n          module.create.bind(instance)(moduleParams);\n        }\n      });\n    }\n  };\n\n  /* eslint-disable no-underscore-dangle */\n  var eventsEmitter = {\n    on: function on(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n      var method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(function (event) {\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    },\n    once: function once(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n\n      function onceHandler() {\n        self.off(events, onceHandler);\n\n        if (onceHandler.__emitterProxy) {\n          delete onceHandler.__emitterProxy;\n        }\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        handler.apply(self, args);\n      }\n\n      onceHandler.__emitterProxy = handler;\n      return self.on(events, onceHandler, priority);\n    },\n    onAny: function onAny(handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n      var method = priority ? 'unshift' : 'push';\n\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\n        self.eventsAnyListeners[method](handler);\n      }\n\n      return self;\n    },\n    offAny: function offAny(handler) {\n      var self = this;\n      if (!self.eventsAnyListeners) return self;\n      var index = self.eventsAnyListeners.indexOf(handler);\n\n      if (index >= 0) {\n        self.eventsAnyListeners.splice(index, 1);\n      }\n\n      return self;\n    },\n    off: function off(events, handler) {\n      var self = this;\n      if (!self.eventsListeners) return self;\n      events.split(' ').forEach(function (event) {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(function (eventHandler, index) {\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    },\n    emit: function emit() {\n      var self = this;\n      if (!self.eventsListeners) return self;\n      var events;\n      var data;\n      var context;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n\n      data.unshift(context);\n      var eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(function (event) {\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n          self.eventsAnyListeners.forEach(function (eventHandler) {\n            eventHandler.apply(context, [event].concat(data));\n          });\n        }\n\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(function (eventHandler) {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    }\n  };\n\n  function updateSize() {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n      return;\n    } // Subtract paddings\n\n\n    width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n    height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height\n    });\n  }\n\n  function updateSlides() {\n    var swiper = this;\n\n    var getDirectionLabel = function getDirectionLabel(property) {\n      if (swiper.isHorizontal()) {\n        return property;\n      } // prettier-ignore\n\n\n      return {\n        'width': 'height',\n        'margin-top': 'margin-left',\n        'margin-bottom ': 'margin-right',\n        'margin-left': 'margin-top',\n        'margin-right': 'margin-bottom',\n        'padding-left': 'padding-top',\n        'padding-right': 'padding-bottom',\n        'marginRight': 'marginBottom'\n      }[property];\n    };\n\n    var getDirectionPropertyValue = function getDirectionPropertyValue(node, label) {\n      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n    };\n\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl,\n        swiperSize = swiper.size,\n        rtl = swiper.rtlTranslate,\n        wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    function slidesForMargin(slideEl, slideIndex) {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }\n\n    var offsetBefore = params.slidesOffsetBefore;\n\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.slidesGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween; // reset margins\n\n    if (rtl) slides.css({\n      marginLeft: '',\n      marginTop: ''\n    });else slides.css({\n      marginRight: '',\n      marginBottom: ''\n    });\n    var slidesNumberEvenToRows;\n\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    } // Calc slides\n\n\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = void 0;\n        var column = void 0;\n        var row = void 0;\n\n        if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n          var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n          var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n          var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n          slide.css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex\n          });\n        } else if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - column * slidesPerColumn;\n\n          if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n            row += 1;\n\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - row * slidesPerRow;\n        }\n\n        slide.css(getDirectionLabel('margin-top'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n      }\n\n      if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = getComputedStyle(slide[0]);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          var width = getDirectionPropertyValue(slideStyles, 'width');\n          var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n          var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n          var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n          var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n          var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            var _slide$ = slide[0],\n                clientWidth = _slide$.clientWidth,\n                offsetWidth = _slide$.offsetWidth;\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n          }\n        }\n\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n      } else {\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n        if (slides[i]) {\n          slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n        }\n      }\n\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n\n      slidesSizesGrid.push(slideSize);\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n      prevSlideSize = slideSize;\n      index += 1;\n    }\n\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({\n        width: swiper.virtualSize + params.spaceBetween + \"px\"\n      });\n    }\n\n    if (params.setWrapperSize) {\n      var _$wrapperEl$css;\n\n      $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n    }\n\n    if (params.slidesPerColumn > 1) {\n      var _$wrapperEl$css2;\n\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n\n        for (var _i = 0; _i < snapGrid.length; _i += 1) {\n          var slidesGridItem = snapGrid[_i];\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n          if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n        }\n\n        snapGrid = newSlidesGrid;\n      }\n    } // Remove last grid elements depending on width\n\n\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n        var _slidesGridItem = snapGrid[_i2];\n        if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n        if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(_slidesGridItem);\n        }\n      }\n\n      snapGrid = newSlidesGrid;\n\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n\n    if (snapGrid.length === 0) snapGrid = [0];\n\n    if (params.spaceBetween !== 0) {\n      var _slides$filter$css;\n\n      var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n      slides.filter(slidesForMargin).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n    }\n\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      var maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(function (snap) {\n        if (snap < 0) return -offsetBefore;\n        if (snap > maxSnap) return maxSnap + offsetAfter;\n        return snap;\n      });\n    }\n\n    if (params.centerInsufficientSlides) {\n      var _allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      _allSlidesSize -= params.spaceBetween;\n\n      if (_allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\n      swiper.emit('snapGridLengthChange');\n    }\n\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    } // Find slides currently in view\n\n\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      if (swiper.params.centeredSlides) {\n        swiper.visibleSlides.each(function (slide) {\n          activeSlides.push(slide);\n        });\n      } else {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n          var index = swiper.activeIndex + i;\n          if (index > swiper.slides.length) break;\n          activeSlides.push(swiper.slides.eq(index)[0]);\n        }\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    } // Find new height from highest slide in view\n\n\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    } // Update Height\n\n\n    if (newHeight) swiper.$wrapperEl.css('height', newHeight + \"px\");\n  }\n\n  function updateSlidesOffset() {\n    var swiper = this;\n    var slides = swiper.slides;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress(translate) {\n    if (translate === void 0) {\n      translate = this && this.translate || 0;\n    }\n\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides,\n        rtl = swiper.rtlTranslate;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n    var offsetCenter = -translate;\n    if (rtl) offsetCenter = translate; // Visible Slides\n\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n\n      if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress(translate) {\n    var swiper = this;\n\n    if (typeof translate === 'undefined') {\n      var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress,\n        isBeginning = swiper.isBeginning,\n        isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n\n    extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd\n    });\n    if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses() {\n    var swiper = this;\n    var slides = swiper.slides,\n        params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex,\n        realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n    var activeSlide;\n\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    } // Active classes\n\n\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      }\n    } // Next Slide\n\n\n    var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    } // Prev Slide\n\n\n    var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      }\n\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      }\n    }\n\n    swiper.emitSlidesClasses();\n  }\n\n  function updateActiveIndex(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid,\n        snapGrid = swiper.snapGrid,\n        params = swiper.params,\n        previousIndex = swiper.activeIndex,\n        previousRealIndex = swiper.realIndex,\n        previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      } // Normalize slideIndex\n\n\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n      }\n    }\n\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n\n      return;\n    } // Get real index\n\n\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide(e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n    var slideFound = false;\n    var slideIndex;\n\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) {\n          slideFound = true;\n          slideIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = slideIndex;\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide\n  };\n\n  function getSwiperTranslate(axis) {\n    if (axis === void 0) {\n      axis = this.isHorizontal() ? 'x' : 'y';\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        rtl = swiper.rtlTranslate,\n        translate = swiper.translate,\n        $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    if (params.cssMode) {\n      return translate;\n    }\n\n    var currentTranslate = getTranslate($wrapperEl[0], axis);\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n  }\n\n  function setTranslate(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate,\n        params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        wrapperEl = swiper.wrapperEl,\n        progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n    }\n\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate() {\n    return -this.snapGrid[0];\n  }\n\n  function maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n  }\n\n  function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n    if (translate === void 0) {\n      translate = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (translateBounds === void 0) {\n      translateBounds = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var minTranslate = swiper.minTranslate();\n    var maxTranslate = swiper.maxTranslate();\n    var newTranslate;\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n    swiper.updateProgress(newTranslate);\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          var _wrapperEl$scrollTo;\n\n          wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = -newTranslate, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getSwiperTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n    translateTo: translateTo\n  };\n\n  function setTransition(duration, byController) {\n    var swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        params = swiper.params,\n        previousIndex = swiper.previousIndex;\n    if (params.cssMode) return;\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionStart');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        previousIndex = swiper.previousIndex,\n        params = swiper.params;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionEnd');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd\n  };\n\n  function slideTo(index, speed, runCallbacks, internal) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (typeof index !== 'number' && typeof index !== 'string') {\n      throw new Error(\"The 'index' argument cannot have type other than 'number' or 'string'. [\" + typeof index + \"] given.\");\n    }\n\n    if (typeof index === 'string') {\n      /**\n       * The `index` argument converted from `string` to `number`.\n       * @type {number}\n       */\n      var indexAsNumber = parseInt(index, 10);\n      /**\n       * Determines whether the `index` argument is a valid `number`\n       * after being converted from the `string` type.\n       * @type {boolean}\n       */\n\n      var isValidNumber = isFinite(indexAsNumber);\n\n      if (!isValidNumber) {\n        throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\" + index + \"] given.\");\n      } // Knowing that the converted `index` is a valid number,\n      // we can update the original argument's value.\n\n\n      index = indexAsNumber;\n    }\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    var params = swiper.params,\n        snapGrid = swiper.snapGrid,\n        slidesGrid = swiper.slidesGrid,\n        previousIndex = swiper.previousIndex,\n        activeIndex = swiper.activeIndex,\n        rtl = swiper.rtlTranslate,\n        wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex]; // Update progress\n\n    swiper.updateProgress(translate); // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        var normalizedTranslate = -Math.floor(translate * 100);\n        var normalizedGird = Math.floor(slidesGrid[i] * 100);\n        var normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGird) / 2) {\n            slideIndex = i;\n          } else if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext) {\n            slideIndex = i + 1;\n          }\n        } else if (normalizedTranslate >= normalizedGird) {\n          slideIndex = i;\n        }\n      }\n    } // Directions locks\n\n\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) return false;\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n      swiper.updateActiveIndex(slideIndex); // Update Height\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      swiper.updateSlidesClasses();\n\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n\n      return false;\n    }\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n      var t = -translate;\n\n      if (rtl) {\n        t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n      }\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          var _wrapperEl$scrollTo;\n\n          wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = t, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop(index, speed, runCallbacks, internal) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var newIndex = index;\n\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        animating = swiper.animating;\n    var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        animating = swiper.animating,\n        snapGrid = swiper.snapGrid,\n        slidesGrid = swiper.slidesGrid,\n        rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n    function normalize(val) {\n      if (val < 0) return -Math.floor(Math.abs(val));\n      return Math.floor(val);\n    }\n\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) {\n      return normalize(val);\n    });\n    snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      snapGrid.forEach(function (snap) {\n        if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n      });\n    }\n\n    var prevIndex;\n\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    }\n\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest(speed, runCallbacks, internal, threshold) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (threshold === void 0) {\n      threshold = 0.5;\n    }\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      var prevSnap = swiper.snapGrid[snapIndex - 1];\n      var _currentSnap = swiper.snapGrid[snapIndex];\n\n      if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide() {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl;\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n\n    if (params.loop) {\n      if (swiper.animating) return;\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n      if (params.centeredSlides) {\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n          nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n        nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide\n  };\n\n  function loopCreate() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\n\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n    var slides = $wrapperEl.children(\".\" + params.slideClass);\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(document.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n          $wrapperEl.append(blankNode);\n        }\n\n        slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (el, index) {\n      var slide = $(el);\n\n      if (index < swiper.loopedSlides) {\n        appendSlides.push(el);\n      }\n\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n        prependSlides.push(el);\n      }\n\n      slide.attr('data-swiper-slide-index', index);\n    });\n\n    for (var _i = 0; _i < appendSlides.length; _i += 1) {\n      $wrapperEl.append($(appendSlides[_i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n\n    for (var _i2 = prependSlides.length - 1; _i2 >= 0; _i2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[_i2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix() {\n    var swiper = this;\n    swiper.emit('beforeLoopFix');\n    var activeIndex = swiper.activeIndex,\n        slides = swiper.slides,\n        loopedSlides = swiper.loopedSlides,\n        allowSlidePrev = swiper.allowSlidePrev,\n        allowSlideNext = swiper.allowSlideNext,\n        snapGrid = swiper.snapGrid,\n        rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n    if (activeIndex < loopedSlides) {\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if (activeIndex >= slides.length - loopedSlides) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n\n      var _slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (_slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy() {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params,\n        slides = swiper.slides;\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy\n  };\n\n  function setGrabCursor(moving) {\n    var swiper = this;\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor() {\n    var swiper = this;\n\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor\n  };\n\n  function appendSlide(slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.append(slides[i]);\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide(slides) {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    var newActiveIndex = activeIndex + 1;\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.prepend(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide(index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params,\n        activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var baseLength = swiper.slides.length;\n\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var _i = 0; _i < slides.length; _i += 1) {\n        if (slides[_i]) $wrapperEl.append(slides[_i]);\n      }\n\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var _i2 = 0; _i2 < slidesBuffer.length; _i2 += 1) {\n      $wrapperEl.append(slidesBuffer[_i2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      }\n\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides() {\n    var swiper = this;\n    var slidesIndexes = [];\n\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides\n  };\n\n  function onTouchStart(event) {\n    var swiper = this;\n    var document = getDocument();\n    var window = getWindow();\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    var $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) return;\n    }\n\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root componenet\n\n    var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n      $targetEl = $(event.path[0]);\n    }\n\n    if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) return;\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n      if (edgeSwipeDetection === 'prevent') {\n        event.preventDefault();\n      } else {\n        return;\n      }\n    }\n\n    extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($targetEl.is(data.formElements)) preventDefault = false;\n\n      if (document.activeElement && $(document.activeElement).is(data.formElements) && document.activeElement !== $targetEl[0]) {\n        document.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n        e.preventDefault();\n      }\n    }\n\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove(event) {\n    var document = getDocument();\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches,\n        rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && e.type !== 'touchmove') return;\n    var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n\n      if (data.isTouched) {\n        extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY\n        });\n        data.touchStartTime = now();\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n        return;\n      }\n    }\n\n    if (data.isTouchEvent && document.activeElement) {\n      if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n\n    if (e.targetTouches && e.targetTouches.length > 1) return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n      }\n    }\n\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n\n    if (!data.startMoving) {\n      return;\n    }\n\n    swiper.allowClick = false;\n\n    if (!params.cssMode && e.cancelable) {\n      e.preventDefault();\n    }\n\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n\n      data.allowMomentumBounce = false; // Grab Cursor\n\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n\n      swiper.emit('sliderFirstMove', e);\n    }\n\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) diff = -diff;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    } // Directions locks\n\n\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n      data.currentTranslate = data.startTranslate;\n    } // Threshold\n\n\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime\n        });\n      }\n\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: now()\n      });\n    } // Update progress\n\n\n    swiper.updateProgress(data.currentTranslate); // Update translate\n\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches,\n        rtl = swiper.rtlTranslate,\n        $wrapperEl = swiper.$wrapperEl,\n        slidesGrid = swiper.slidesGrid,\n        snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n\n    data.allowTouchCallbacks = false;\n\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    } // Return Grab Cursor\n\n\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    } // Time diff\n\n\n    var touchEndTime = now();\n    var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap click', e);\n\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = now();\n    nextTick(function () {\n      if (!swiper.destroyed) swiper.allowClick = true;\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    var currentPos;\n\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          } // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n\n\n          if (time > 150 || now() - lastMoveEvent.time > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) newPosition = -newPosition;\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n\n          newPosition = -newPosition;\n        }\n\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        } // Fix duration\n\n\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n\n          if (params.freeModeSticky) {\n            // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n            // It's easy to see this when simulating touch with mouse events. To fix this,\n            // limit single-slide swipes to the default slide duration. This also has the\n            // nice side effect of matching slide speed if the user stopped moving before\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n            // For faster swipes, also apply limits (albeit higher ones).\n            var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n            var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n            if (moveDistance < currentSlideSize) {\n              momentumDuration = params.speed;\n            } else if (moveDistance < 2 * currentSlideSize) {\n              momentumDuration = params.speed * 1.5;\n            } else {\n              momentumDuration = params.speed * 2.5;\n            }\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n            swiper.emit('momentumBounce');\n            swiper.setTransition(params.speed);\n            setTimeout(function () {\n              swiper.setTranslate(afterBouncePosition);\n              $wrapperEl.transitionEnd(function () {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }, 0);\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.emit('_freeModeNoMomentumRelease');\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      } else if (params.freeMode) {\n        swiper.emit('_freeModeNoMomentumRelease');\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      return;\n    } // Find current slide\n\n\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n\n    for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n      var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (typeof slidesGrid[i + _increment] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    } // Find current slide size\n\n\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(stopIndex + increment);\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize() {\n    var swiper = this;\n    var params = swiper.params,\n        el = swiper.el;\n    if (el && el.offsetWidth === 0) return; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Save locks\n\n\n    var allowSlideNext = swiper.allowSlideNext,\n        allowSlidePrev = swiper.allowSlidePrev,\n        snapGrid = swiper.snapGrid; // Disable locks on resize\n\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    } // Return locks after resize\n\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick(e) {\n    var swiper = this;\n\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) e.preventDefault();\n\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll() {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl,\n        rtlTranslate = swiper.rtlTranslate;\n    swiper.previousTranslate = swiper.translate;\n\n    if (swiper.isHorizontal()) {\n      if (rtlTranslate) {\n        swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\n      } else {\n        swiper.translate = -wrapperEl.scrollLeft;\n      }\n    } else {\n      swiper.translate = -wrapperEl.scrollTop;\n    } // eslint-disable-next-line\n\n\n    if (swiper.translate === -0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  var dummyEventAttached = false;\n\n  function dummyEventListener() {}\n\n  function attachEvents() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        touchEvents = swiper.touchEvents,\n        el = swiper.el,\n        wrapperEl = swiper.wrapperEl,\n        device = swiper.device,\n        support = swiper.support;\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n    var capture = !!params.nested; // Touch Events\n\n    if (!support.touch && support.pointerEvents) {\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (support.touch) {\n        var passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.addEventListener(touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n          passive: false,\n          capture: capture\n        } : capture);\n        el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n\n        if (!dummyEventAttached) {\n          document.addEventListener('touchstart', dummyEventListener);\n          dummyEventAttached = true;\n        }\n      }\n\n      if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n        el.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.addEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.addEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    if (params.updateOnWindowResize) {\n      swiper.on(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n    } else {\n      swiper.on('observerUpdate', onResize, true);\n    }\n  }\n\n  function detachEvents() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        touchEvents = swiper.touchEvents,\n        el = swiper.el,\n        wrapperEl = swiper.wrapperEl,\n        device = swiper.device,\n        support = swiper.support;\n    var capture = !!params.nested; // Touch Events\n\n    if (!support.touch && support.pointerEvents) {\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (support.touch) {\n        var passiveListener = touchEvents.start === 'onTouchStart' && support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      }\n\n      if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n        el.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.removeEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.removeEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    swiper.off(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents\n  };\n\n  function setBreakpoint() {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        initialized = swiper.initialized,\n        _swiper$loopedSlides = swiper.loopedSlides,\n        loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n        params = swiper.params,\n        $el = swiper.$el;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n    var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') return;\n\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var wasMultiRow = params.slidesPerColumn > 1;\n      var isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n      if (wasMultiRow && !isMultiRow) {\n        $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n        swiper.emitContainerClasses();\n      } else if (!wasMultiRow && isMultiRow) {\n        $el.addClass(params.containerModifierClass + \"multirow\");\n\n        if (breakpointParams.slidesPerColumnFill === 'column') {\n          $el.addClass(params.containerModifierClass + \"multirow-column\");\n        }\n\n        swiper.emitContainerClasses();\n      }\n\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      extend(swiper.params, breakpointParams);\n      extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n      });\n      swiper.currentBreakpoint = breakpoint;\n      swiper.emit('_beforeBreakpoint', breakpointParams);\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint(breakpoints, base, containerEl) {\n    if (base === void 0) {\n      base = 'window';\n    }\n\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\n    var breakpoint = false;\n    var window = getWindow();\n    var currentWidth = base === 'window' ? window.innerWidth : containerEl.clientWidth;\n    var currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n    var points = Object.keys(breakpoints).map(function (point) {\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\n        var minRatio = parseFloat(point.substr(1));\n        var value = currentHeight * minRatio;\n        return {\n          value: value,\n          point: point\n        };\n      }\n\n      return {\n        value: point,\n        point: point\n      };\n    });\n    points.sort(function (a, b) {\n      return parseInt(a.value, 10) - parseInt(b.value, 10);\n    });\n\n    for (var i = 0; i < points.length; i += 1) {\n      var _points$i = points[i],\n          point = _points$i.point,\n          value = _points$i.value;\n\n      if (value <= currentWidth) {\n        breakpoint = point;\n      }\n    }\n\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = {\n    setBreakpoint: setBreakpoint,\n    getBreakpoint: getBreakpoint\n  };\n\n  function prepareClasses(entries, prefix) {\n    var resultClasses = [];\n    entries.forEach(function (item) {\n      if (typeof item === 'object') {\n        Object.keys(item).forEach(function (classNames) {\n          if (item[classNames]) {\n            resultClasses.push(prefix + classNames);\n          }\n        });\n      } else if (typeof item === 'string') {\n        resultClasses.push(prefix + item);\n      }\n    });\n    return resultClasses;\n  }\n\n  function addClasses() {\n    var swiper = this;\n    var classNames = swiper.classNames,\n        params = swiper.params,\n        rtl = swiper.rtl,\n        $el = swiper.$el,\n        device = swiper.device,\n        support = swiper.support; // prettier-ignore\n\n    var suffixes = prepareClasses(['initialized', params.direction, {\n      'pointer-events': support.pointerEvents && !support.touch\n    }, {\n      'free-mode': params.freeMode\n    }, {\n      'autoheight': params.autoHeight\n    }, {\n      'rtl': rtl\n    }, {\n      'multirow': params.slidesPerColumn > 1\n    }, {\n      'multirow-column': params.slidesPerColumn > 1 && params.slidesPerColumnFill === 'column'\n    }, {\n      'android': device.android\n    }, {\n      'ios': device.ios\n    }, {\n      'css-mode': params.cssMode\n    }], params.containerModifierClass);\n    classNames.push.apply(classNames, suffixes);\n    $el.addClass([].concat(classNames).join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  function removeClasses() {\n    var swiper = this;\n    var $el = swiper.$el,\n        classNames = swiper.classNames;\n    $el.removeClass(classNames.join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  var classes = {\n    addClasses: addClasses,\n    removeClasses: removeClasses\n  };\n\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var window = getWindow();\n    var image;\n\n    function onReady() {\n      if (callback) callback();\n    }\n\n    var isPicture = $(imageEl).parent('picture')[0];\n\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n      if (src) {\n        image = new window.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n\n        if (sizes) {\n          image.sizes = sizes;\n        }\n\n        if (srcset) {\n          image.srcset = srcset;\n        }\n\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages() {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n      if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) swiper.update();\n        swiper.emit('imagesReady');\n      }\n    }\n\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var params = swiper.params;\n    var wasLocked = swiper.isLocked;\n    var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n\n    if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n      swiper.isLocked = lastSlidePosition <= swiper.size;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked; // events\n\n    if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      if (swiper.navigation) swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = {\n    checkOverflow: checkOverflow\n  };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: false,\n    nested: false,\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: 'window',\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    loopPreventsSlide: true,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-container-',\n    // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n  };\n\n  var prototypes = {\n    modular: modular,\n    eventsEmitter: eventsEmitter,\n    update: update,\n    translate: translate,\n    transition: transition,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images\n  };\n  var extendedDefaults = {};\n\n  var Swiper = /*#__PURE__*/function () {\n    function Swiper() {\n      var el;\n      var params;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n        params = args[0];\n      } else {\n        el = args[0];\n        params = args[1];\n      }\n\n      if (!params) params = {};\n      params = extend({}, params);\n      if (el && !params.el) params.el = el;\n\n      if (params.el && $(params.el).length > 1) {\n        var swipers = [];\n        $(params.el).each(function (containerEl) {\n          var newParams = extend({}, params, {\n            el: containerEl\n          });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      } // Swiper Instance\n\n\n      var swiper = this;\n      swiper.__swiper__ = true;\n      swiper.support = getSupport();\n      swiper.device = getDevice({\n        userAgent: params.userAgent\n      });\n      swiper.browser = getBrowser();\n      swiper.eventsListeners = {};\n      swiper.eventsAnyListeners = [];\n\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) return;\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = {\n              enabled: true\n            };\n          }\n\n          if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n            params[moduleParamName].enabled = true;\n          }\n\n          if (!params[moduleParamName]) params[moduleParamName] = {\n            enabled: false\n          };\n        }\n      }); // Extend defaults with modules params\n\n      var swiperParams = extend({}, defaults);\n      swiper.useParams(swiperParams); // Extend defaults with passed params\n\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = extend({}, swiper.params);\n      swiper.passedParams = extend({}, params); // add event listeners\n\n      if (swiper.params && swiper.params.on) {\n        Object.keys(swiper.params.on).forEach(function (eventName) {\n          swiper.on(eventName, swiper.params.on[eventName]);\n        });\n      }\n\n      if (swiper.params && swiper.params.onAny) {\n        swiper.onAny(swiper.params.onAny);\n      } // Save Dom lib\n\n\n      swiper.$ = $; // Extend Swiper\n\n      extend(swiper, {\n        el: el,\n        // Classes\n        classNames: [],\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n        //\n        isBeginning: true,\n        isEnd: false,\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n        // Touch Events\n        touchEvents: function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n\n          if (swiper.support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          }\n\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3]\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2]\n          };\n          return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }(),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video, label',\n          // Last click time\n          lastClickTime: now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined\n        },\n        // Clicks\n        allowClick: true,\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0\n      }); // Install Modules\n\n      swiper.useModules();\n      swiper.emit('_swiper'); // Init\n\n      if (swiper.params.init) {\n        swiper.init();\n      } // Return app instance\n\n\n      return swiper;\n    }\n\n    var _proto = Swiper.prototype;\n\n    _proto.setProgress = function setProgress(progress, speed) {\n      var swiper = this;\n      progress = Math.min(Math.max(progress, 0), 1);\n      var min = swiper.minTranslate();\n      var max = swiper.maxTranslate();\n      var current = (max - min) * progress + min;\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    };\n\n    _proto.emitContainerClasses = function emitContainerClasses() {\n      var swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      var classes = swiper.el.className.split(' ').filter(function (className) {\n        return className.indexOf('swiper-container') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n      });\n      swiper.emit('_containerClasses', classes.join(' '));\n    };\n\n    _proto.getSlideClasses = function getSlideClasses(slideEl) {\n      var swiper = this;\n      return slideEl.className.split(' ').filter(function (className) {\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n      }).join(' ');\n    };\n\n    _proto.emitSlidesClasses = function emitSlidesClasses() {\n      var swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      var updates = [];\n      swiper.slides.each(function (slideEl) {\n        var classNames = swiper.getSlideClasses(slideEl);\n        updates.push({\n          slideEl: slideEl,\n          classNames: classNames\n        });\n        swiper.emit('_slideClass', slideEl, classNames);\n      });\n      swiper.emit('_slideClasses', updates);\n    };\n\n    _proto.slidesPerViewDynamic = function slidesPerViewDynamic() {\n      var swiper = this;\n      var params = swiper.params,\n          slides = swiper.slides,\n          slidesGrid = swiper.slidesGrid,\n          swiperSize = swiper.size,\n          activeIndex = swiper.activeIndex;\n      var spv = 1;\n\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n\n        for (var _i = activeIndex - 1; _i >= 0; _i -= 1) {\n          if (slides[_i] && !breakLoop) {\n            slideSize += slides[_i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n      } else {\n        for (var _i2 = activeIndex + 1; _i2 < slides.length; _i2 += 1) {\n          if (slidesGrid[_i2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n\n      return spv;\n    };\n\n    _proto.update = function update() {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      var snapGrid = swiper.snapGrid,\n          params = swiper.params; // Breakpoints\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      var translated;\n\n      if (swiper.params.freeMode) {\n        setTranslate();\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n\n        if (!translated) {\n          setTranslate();\n        }\n      }\n\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n\n      swiper.emit('update');\n    };\n\n    _proto.changeDirection = function changeDirection(newDirection, needUpdate) {\n      if (needUpdate === void 0) {\n        needUpdate = true;\n      }\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n        return swiper;\n      }\n\n      swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\n      swiper.emitContainerClasses();\n      swiper.params.direction = newDirection;\n      swiper.slides.each(function (slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n      swiper.emit('changeDirection');\n      if (needUpdate) swiper.update();\n      return swiper;\n    };\n\n    _proto.mount = function mount(el) {\n      var swiper = this;\n      if (swiper.mounted) return true; // Find el\n\n      var $el = $(el || swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return false;\n      }\n\n      el.swiper = swiper; // Find Wrapper\n\n      var $wrapperEl;\n\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        $wrapperEl = $(el.shadowRoot.querySelector(\".\" + swiper.params.wrapperClass)); // Children needs to return slot items\n\n        $wrapperEl.children = function (options) {\n          return $el.children(options);\n        };\n      } else {\n        $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\n      }\n\n      extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n        mounted: true,\n        // RTL\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n      });\n      return true;\n    };\n\n    _proto.init = function init(el) {\n      var swiper = this;\n      if (swiper.initialized) return swiper;\n      var mounted = swiper.mount(el);\n      if (mounted === false) return swiper;\n      swiper.emit('beforeInit'); // Set breakpoint\n\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Add Classes\n\n\n      swiper.addClasses(); // Create loop\n\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      } // Update size\n\n\n      swiper.updateSize(); // Update slides\n\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      } // Set Grab Cursor\n\n\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      } // Slide To Initial Slide\n\n\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      } // Attach events\n\n\n      swiper.attachEvents(); // Init Flag\n\n      swiper.initialized = true; // Emit\n\n      swiper.emit('init');\n      swiper.emit('afterInit');\n      return swiper;\n    };\n\n    _proto.destroy = function destroy(deleteInstance, cleanStyles) {\n      if (deleteInstance === void 0) {\n        deleteInstance = true;\n      }\n\n      if (cleanStyles === void 0) {\n        cleanStyles = true;\n      }\n\n      var swiper = this;\n      var params = swiper.params,\n          $el = swiper.$el,\n          $wrapperEl = swiper.$wrapperEl,\n          slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy'); // Init Flag\n\n      swiper.initialized = false; // Detach events\n\n      swiper.detachEvents(); // Destroy loop\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      } // Cleanup styles\n\n\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n\n        if (slides && slides.length) {\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy'); // Detach emitter events\n\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        deleteProps(swiper);\n      }\n\n      swiper.destroyed = true;\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults(newDefaults) {\n      extend(extendedDefaults, newDefaults);\n    };\n\n    Swiper.installModule = function installModule(module) {\n      if (!Swiper.prototype.modules) Swiper.prototype.modules = {};\n      var name = module.name || Object.keys(Swiper.prototype.modules).length + \"_\" + now();\n      Swiper.prototype.modules[name] = module;\n    };\n\n    Swiper.use = function use(module) {\n      if (Array.isArray(module)) {\n        module.forEach(function (m) {\n          return Swiper.installModule(m);\n        });\n        return Swiper;\n      }\n\n      Swiper.installModule(module);\n      return Swiper;\n    };\n\n    _createClass(Swiper, null, [{\n      key: \"extendedDefaults\",\n      get: function get() {\n        return extendedDefaults;\n      }\n    }, {\n      key: \"defaults\",\n      get: function get() {\n        return defaults;\n      }\n    }]);\n\n    return Swiper;\n  }();\n\n  Object.keys(prototypes).forEach(function (prototypeGroup) {\n    Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n    });\n  });\n  Swiper.use([Resize, Observer$1]);\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var _swiper$params = swiper.params,\n          slidesPerView = _swiper$params.slidesPerView,\n          slidesPerGroup = _swiper$params.slidesPerGroup,\n          centeredSlides = _swiper$params.centeredSlides;\n      var _swiper$params$virtua = swiper.params.virtual,\n          addSlidesBefore = _swiper$params$virtua.addSlidesBefore,\n          addSlidesAfter = _swiper$params$virtua.addSlidesAfter;\n      var _swiper$virtual = swiper.virtual,\n          previousFrom = _swiper$virtual.from,\n          previousTo = _swiper$virtual.to,\n          slides = _swiper$virtual.slides,\n          previousSlidesGrid = _swiper$virtual.slidesGrid,\n          renderSlide = _swiper$virtual.renderSlide,\n          previousOffset = _swiper$virtual.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n      var offsetProp;\n      if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n      var slidesAfter;\n      var slidesBefore;\n\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n        slidesBefore = slidesPerGroup + addSlidesBefore;\n      }\n\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n      extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, offset + \"px\");\n        }\n\n        swiper.updateProgress();\n        return;\n      }\n\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: function getSlides() {\n            var slidesToRender = [];\n\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n\n            return slidesToRender;\n          }()\n        });\n\n        if (swiper.params.virtual.renderExternalUpdate) {\n          onRendered();\n        }\n\n        return;\n      }\n\n      var prependIndexes = [];\n      var appendIndexes = [];\n\n      if (force) {\n        swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\").remove();\n          }\n        }\n      }\n\n      for (var _i = 0; _i < slides.length; _i += 1) {\n        if (_i >= from && _i <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(_i);\n          } else {\n            if (_i > previousTo) appendIndexes.push(_i);\n            if (_i < previousFrom) prependIndexes.push(_i);\n          }\n        }\n      }\n\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) {\n        return b - a;\n      }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + \"px\");\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n\n      var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(\"<div class=\\\"\" + swiper.params.slideClass + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\");\n      if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n      if (params.cache) swiper.virtual.cache[index] = $slideEl;\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.push(slides[i]);\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          var $cachedEl = cache[cachedIndex];\n          var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n          if (cachedElIndex) {\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n          }\n\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n        });\n        swiper.virtual.cache = newCache;\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n      var activeIndex = swiper.activeIndex;\n\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n\n          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n\n        if (slidesIndexes < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    }\n  };\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        renderExternalUpdate: true,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        virtual: _extends({}, Virtual, {\n          slides: swiper.params.virtual.slides,\n          cache: {}\n        })\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\n        var overwriteParams = {\n          watchSlidesProgress: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.virtual.update();\n      }\n    }\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var window = getWindow();\n      var document = getDocument();\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      var kc = e.keyCode || e.charCode;\n      var pageUpDown = swiper.params.keyboard.pageUpDown;\n      var isPageUp = pageUpDown && kc === 33;\n      var isPageDown = pageUpDown && kc === 34;\n      var isArrowLeft = kc === 37;\n      var isArrowRight = kc === 39;\n      var isArrowUp = kc === 38;\n      var isArrowDown = kc === 40; // Directions locks\n\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n        return false;\n      }\n\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n\n      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n\n      if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n        var inView = false; // Check that swiper should be inside of visible area of window\n\n        if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) {\n          return undefined;\n        }\n\n        var $el = swiper.$el;\n        var swiperWidth = $el[0].clientWidth;\n        var swiperHeight = $el[0].clientHeight;\n        var windowWidth = window.innerWidth;\n        var windowHeight = window.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n        var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n            inView = true;\n          }\n        }\n\n        if (!inView) return undefined;\n      }\n\n      if (swiper.isHorizontal()) {\n        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n        if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n      } else {\n        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if (isPageDown || isArrowDown) swiper.slideNext();\n        if (isPageUp || isArrowUp) swiper.slidePrev();\n      }\n\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var document = getDocument();\n      if (swiper.keyboard.enabled) return;\n      $(document).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var document = getDocument();\n      if (!swiper.keyboard.enabled) return;\n      $(document).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    }\n  };\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n        pageUpDown: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        keyboard: _extends({\n          enabled: false\n        }, Keyboard)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      }\n    }\n  };\n\n  function isEventSupported() {\n    var document = getDocument();\n    var eventName = 'onwheel';\n    var isSupported = (eventName in document);\n\n    if (!isSupported) {\n      var element = document.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported && document.implementation && document.implementation.hasFeature && // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n\n  var Mousewheel = {\n    lastScrollTime: now(),\n    lastEventBeforeSnap: undefined,\n    recentWheelEvents: [],\n    event: function event() {\n      var window = getWindow();\n      if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    },\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n      // Legacy\n\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      } // side scrolling on FF with DOMMouseScroll\n\n\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if (e.shiftKey && !pX) {\n        // if user scrolls with shift he wants horizontal scroll\n        pX = pY;\n        pY = 0;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) {\n          // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else {\n          // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      } // Fall-back if spin cannot be determined\n\n\n      if (pX && !sX) {\n        sX = pX < 1 ? -1 : 1;\n      }\n\n      if (pY && !sY) {\n        sY = pY < 1 ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var disableParentSwiper = true;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (swiper.params.cssMode) {\n        e.preventDefault();\n      }\n\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) return true;\n      if (params.invert) delta = -delta; // Get the scroll positions\n\n      var positions = swiper.getTranslate() + delta * params.sensitivity;\n      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n      //     the disableParentSwiper will be true.\n      // When loop is false:\n      //     if the scroll positions is not on edge,\n      //     then the disableParentSwiper will be true.\n      //     if the scroll on edge positions,\n      //     then the disableParentSwiper will be false.\n\n      disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n      if (!swiper.params.freeMode) {\n        // Register the new event in a variable which stores the relevant data\n        var newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta),\n          raw: event\n        }; // Keep the most recent events\n\n        var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n        if (recentWheelEvents.length >= 2) {\n          recentWheelEvents.shift(); // only store the last N events\n        }\n\n        var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n        //   If direction has changed or\n        //   if the scroll is quicker than the previous one:\n        //     Animate the slider.\n        // Else (this is the first time the wheel is moved):\n        //     Animate the slider.\n\n        if (prevEvent) {\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n            swiper.mousewheel.animateSlider(newEvent);\n          }\n        } else {\n          swiper.mousewheel.animateSlider(newEvent);\n        } // If it's time to release the scroll:\n        //   Return now so you don't hit the preventDefault.\n\n\n        if (swiper.mousewheel.releaseScroll(newEvent)) {\n          return true;\n        }\n      } else {\n        // Freemode or scrollContainer:\n        // If we recently snapped after a momentum scroll, then ignore wheel events\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n        // or if it's a new scroll (larger delta or inverse sign as last event before\n        // an end-of-momentum snap).\n        var _newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta)\n        };\n        var lastEventBeforeSnap = swiper.mousewheel.lastEventBeforeSnap;\n        var ignoreWheelEvents = lastEventBeforeSnap && _newEvent.time < lastEventBeforeSnap.time + 500 && _newEvent.delta <= lastEventBeforeSnap.delta && _newEvent.direction === lastEventBeforeSnap.direction;\n\n        if (!ignoreWheelEvents) {\n          swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n          if (swiper.params.loop) {\n            swiper.loopFix();\n          }\n\n          var position = swiper.getTranslate() + delta * params.sensitivity;\n          var wasBeginning = swiper.isBeginning;\n          var wasEnd = swiper.isEnd;\n          if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n          if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n          swiper.setTransition(0);\n          swiper.setTranslate(position);\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n            swiper.updateSlidesClasses();\n          }\n\n          if (swiper.params.freeModeSticky) {\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\n            // 1. do all N events have decreasing or same (absolute value) delta?\n            // 2. did all N events arrive in the last M (M=500?) msecs?\n            // 3. does the earliest event have an (absolute value) delta that's\n            //    at least P (P=1?) larger than the most recent event's delta?\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n            // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n            // Snap immediately and ignore remaining wheel events in this scroll.\n            // See comment above for \"remaining wheel events in this scroll\" determination.\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n            clearTimeout(swiper.mousewheel.timeout);\n            swiper.mousewheel.timeout = undefined;\n            var _recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n            if (_recentWheelEvents.length >= 15) {\n              _recentWheelEvents.shift(); // only store the last N events\n\n            }\n\n            var _prevEvent = _recentWheelEvents.length ? _recentWheelEvents[_recentWheelEvents.length - 1] : undefined;\n\n            var firstEvent = _recentWheelEvents[0];\n\n            _recentWheelEvents.push(_newEvent);\n\n            if (_prevEvent && (_newEvent.delta > _prevEvent.delta || _newEvent.direction !== _prevEvent.direction)) {\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n              _recentWheelEvents.splice(0);\n            } else if (_recentWheelEvents.length >= 15 && _newEvent.time - firstEvent.time < 500 && firstEvent.delta - _newEvent.delta >= 1 && _newEvent.delta <= 6) {\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\n              // to wait for more events. Snap ASAP on the next tick.\n              // Also, because there's some remaining momentum we'll bias the snap in the\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\n              // if it's already scrolled more than 20% in the current direction, keep going.\n              var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n              swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n\n              _recentWheelEvents.splice(0);\n\n              swiper.mousewheel.timeout = nextTick(function () {\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 0); // no delay; move on next tick\n            }\n\n            if (!swiper.mousewheel.timeout) {\n              // if we get here, then we haven't detected the end of a momentum scroll, so\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\n              // for 500ms.\n              swiper.mousewheel.timeout = nextTick(function () {\n                var snapToThreshold = 0.5;\n                swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n\n                _recentWheelEvents.splice(0);\n\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 500);\n            }\n          } // Emit event\n\n\n          if (!ignoreWheelEvents) swiper.emit('scroll', e); // Stop autoplay\n\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n        }\n      }\n\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      return false;\n    },\n    animateSlider: function animateSlider(newEvent) {\n      var swiper = this;\n      var window = getWindow();\n\n      if (this.params.mousewheel.thresholdDelta && newEvent.delta < this.params.mousewheel.thresholdDelta) {\n        // Prevent if delta of wheel scroll delta is below configured threshold\n        return false;\n      }\n\n      if (this.params.mousewheel.thresholdTime && now() - swiper.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime) {\n        // Prevent if time between scrolls is below configured threshold\n        return false;\n      } // If the movement is NOT big enough and\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n      //   Don't go any further (avoid insignificant scroll movement).\n\n\n      if (newEvent.delta >= 6 && now() - swiper.mousewheel.lastScrollTime < 60) {\n        // Return false as a default\n        return true;\n      } // If user is scrolling towards the end:\n      //   If the slider hasn't hit the latest slide or\n      //   if the slider is a loop and\n      //   if the slider isn't moving right now:\n      //     Go to next slide and\n      //     emit a scroll event.\n      // Else (the user is scrolling towards the beginning) and\n      // if the slider hasn't hit the first slide or\n      // if the slider is a loop and\n      // if the slider isn't moving right now:\n      //   Go to prev slide and\n      //   emit a scroll event.\n\n\n      if (newEvent.direction < 0) {\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n          swiper.slideNext();\n          swiper.emit('scroll', newEvent.raw);\n        }\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n        swiper.slidePrev();\n        swiper.emit('scroll', newEvent.raw);\n      } // If you got here is because an animation has been triggered so store the current time\n\n\n      swiper.mousewheel.lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n      return false;\n    },\n    releaseScroll: function releaseScroll(newEvent) {\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (newEvent.direction < 0) {\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) return false;\n      if (swiper.mousewheel.enabled) return false;\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) return false;\n      if (!swiper.mousewheel.enabled) return false;\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target.off(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    }\n  };\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarget: 'container',\n        thresholdDelta: null,\n        thresholdTime: null\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        mousewheel: {\n          enabled: false,\n          lastScrollTime: now(),\n          lastEventBeforeSnap: undefined,\n          recentWheelEvents: [],\n          enable: Mousewheel.enable,\n          disable: Mousewheel.disable,\n          handle: Mousewheel.handle,\n          handleMouseEnter: Mousewheel.handleMouseEnter,\n          handleMouseLeave: Mousewheel.handleMouseLeave,\n          animateSlider: Mousewheel.animateSlider,\n          releaseScroll: Mousewheel.releaseScroll\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          swiper.mousewheel.disable();\n        }\n\n        if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.cssMode) {\n          swiper.mousewheel.enable();\n        }\n\n        if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n      }\n    }\n  };\n\n  var Navigation = {\n    toggleEl: function toggleEl($el, disabled) {\n      $el[disabled ? 'addClass' : 'removeClass'](this.params.navigation.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n    },\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n      var toggleEl = swiper.navigation.toggleEl;\n      if (swiper.params.loop) return;\n      var _swiper$navigation = swiper.navigation,\n          $nextEl = _swiper$navigation.$nextEl,\n          $prevEl = _swiper$navigation.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          toggleEl($prevEl, true);\n        } else {\n          toggleEl($prevEl, false);\n        }\n\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          toggleEl($nextEl, true);\n        } else {\n          toggleEl($nextEl, false);\n        }\n\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) return;\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) return;\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) return;\n      var $nextEl;\n      var $prevEl;\n\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0]\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var _swiper$navigation2 = swiper.navigation,\n          $nextEl = _swiper$navigation2.$nextEl,\n          $prevEl = _swiper$navigation2.$prevEl;\n\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    }\n  };\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        navigation: _extends({}, Navigation)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge(swiper) {\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge(swiper) {\n        swiper.navigation.update();\n      },\n      destroy: function destroy(swiper) {\n        swiper.navigation.destroy();\n      },\n      click: function click(swiper, e) {\n        var _swiper$navigation3 = swiper.navigation,\n            $nextEl = _swiper$navigation3.$nextEl,\n            $prevEl = _swiper$navigation3.$prevEl;\n        var targetEl = e.target;\n\n        if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n          var isHidden;\n\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if (isHidden === true) {\n            swiper.emit('navigationShow');\n          } else {\n            swiper.emit('navigationHide');\n          }\n\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      }\n    }\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el; // Current/Total\n\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n          current -= slidesLength - swiper.loopedSlides * 2;\n        }\n\n        if (current > total - 1) current -= total;\n        if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      } // Types\n\n\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n\n            if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n\n        bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n\n        if ($el.length > 1) {\n          bullets.each(function (bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(params.bulletActiveClass + \"-main\");\n              }\n\n              if (bulletIndex === firstIndex) {\n                $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              }\n\n              if (bulletIndex === lastIndex) {\n                $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          var bulletIndex = $bullet.index();\n          $bullet.addClass(params.bulletActiveClass);\n\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n            }\n\n            if (swiper.params.loop) {\n              if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                for (var _i = params.dynamicMainBullets; _i >= 0; _i -= 1) {\n                  bullets.eq(bullets.length - _i).addClass(params.bulletActiveClass + \"-main\");\n                }\n\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\n              } else {\n                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            } else {\n              $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n            }\n          }\n        }\n\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n        }\n      }\n\n      if (params.type === 'fraction') {\n        $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n        $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n      }\n\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n\n        $el.find(classesToSelector(params.progressbarFillClass)).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n      }\n\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', $el[0]);\n      }\n\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        if (swiper.params.freeMode && !swiper.params.loop && numberOfBullets > slidesLength) {\n          numberOfBullets = slidesLength;\n        }\n\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n          }\n        }\n\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n      }\n\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\" + ' / ' + (\"<span class=\\\"\" + params.totalClass + \"\\\"></span>\");\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) return;\n      var $el = $(params.el);\n      if ($el.length === 0) return;\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n        swiper.pagination.dynamicBulletIndex = 0;\n\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) index += swiper.loopedSlides;\n          swiper.slideTo(index);\n        });\n      }\n\n      extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0]\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var $el = swiper.pagination.$el;\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n      if (params.clickable) {\n        $el.off('click', classesToSelector(params.bulletClass));\n      }\n    }\n  };\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets',\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function formatFractionCurrent(number) {\n          return number;\n        },\n        formatFractionTotal: function formatFractionTotal(number) {\n          return number;\n        },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-',\n        // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable',\n        // NEW\n        lockClass: 'swiper-pagination-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        pagination: _extends({\n          dynamicBulletIndex: 0\n        }, Pagination)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange(swiper) {\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange(swiper) {\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange(swiper) {\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange(swiper) {\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.pagination.destroy();\n      },\n      click: function click(swiper, e) {\n        var targetEl = e.target;\n\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n\n          if (isHidden === true) {\n            swiper.emit('paginationShow');\n          } else {\n            swiper.emit('paginationHide');\n          }\n\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      }\n    }\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar,\n          rtl = swiper.rtlTranslate,\n          progress = swiper.progress;\n      var dragSize = scrollbar.dragSize,\n          trackSize = scrollbar.trackSize,\n          $dragEl = scrollbar.$dragEl,\n          $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n\n      if (rtl) {\n        newPos = -newPos;\n\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl,\n          $el = scrollbar.$el;\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n\n      extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    getPointerPosition: function getPointerPosition(e) {\n      var swiper = this;\n\n      if (swiper.isHorizontal()) {\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n      }\n\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar,\n          rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el,\n          dragSize = scrollbar.dragSize,\n          trackSize = scrollbar.trackSize,\n          dragStartPos = scrollbar.dragStartPos;\n      var positionRatio;\n      positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el,\n          $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n      e.preventDefault();\n      e.stopPropagation();\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      $el.transition(0);\n\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\n      }\n\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el,\n          $dragEl = scrollbar.$dragEl;\n      if (!swiper.scrollbar.isTouched) return;\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      if (!swiper.scrollbar.isTouched) return;\n      swiper.scrollbar.isTouched = false;\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', '');\n        $wrapperEl.transition('');\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n\n      swiper.emit('scrollbarDragEnd', e);\n\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var document = getDocument();\n      var scrollbar = swiper.scrollbar,\n          touchEventsTouch = swiper.touchEventsTouch,\n          touchEventsDesktop = swiper.touchEventsDesktop,\n          params = swiper.params,\n          support = swiper.support;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n\n      if (!support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var document = getDocument();\n      var scrollbar = swiper.scrollbar,\n          touchEventsTouch = swiper.touchEventsTouch,\n          touchEventsDesktop = swiper.touchEventsDesktop,\n          params = swiper.params,\n          support = swiper.support;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n\n      if (!support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar,\n          $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n      var $el = $(params.el);\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n\n      if ($dragEl.length === 0) {\n        $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n        $el.append($dragEl);\n      }\n\n      extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0]\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    }\n  };\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        scrollbar: _extends({\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null\n        }, Scrollbar)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate(swiper) {\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy(swiper) {\n        swiper.scrollbar.destroy();\n      }\n    }\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if (x.indexOf('%') >= 0) {\n        x = parseInt(x, 10) * progress * rtlFactor + \"%\";\n      } else {\n        x = x * progress * rtlFactor + \"px\";\n      }\n\n      if (y.indexOf('%') >= 0) {\n        y = parseInt(y, 10) * progress + \"%\";\n      } else {\n        y = y * progress + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n        $el[0].style.opacity = currentOpacity;\n      }\n\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\n      } else {\n        var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el,\n          slides = swiper.slides,\n          progress = swiper.progress,\n          snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\n        swiper.parallax.setTransform(el, progress);\n      });\n      slides.each(function (slideEl, slideIndex) {\n        var slideProgress = slideEl.progress;\n\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n        }\n\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if (duration === void 0) {\n        duration = this.params.speed;\n      }\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (parallaxEl) {\n        var $parallaxEl = $(parallaxEl);\n        var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n    }\n  };\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        parallax: _extends({}, Parallax)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTransition(duration);\n      }\n    }\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) return 1;\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n        if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transition(0);\n      }\n\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        if (e.type === 'gesturechange') zoom.onGestureStart(e);\n        return;\n      }\n\n      if (support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\n      }\n\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n      }\n\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n      }\n\n      gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var device = swiper.device;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) gesture.$slideEl = undefined;\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var device = swiper.device;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      if (image.isTouched) return;\n      if (device.android && e.cancelable) e.preventDefault();\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image,\n          velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) return;\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      } // Define if we need image drag\n\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n          image.isTouched = false;\n          return;\n        }\n\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n          image.isTouched = false;\n          return;\n        }\n      }\n\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      e.stopPropagation();\n      image.isMoved = true;\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n      }\n\n      if (image.currentX > image.maxX) {\n        image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n      }\n\n      if (image.currentY > image.maxY) {\n        image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n      } // Velocity\n\n\n      if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n      if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n      if (!velocity.prevTime) velocity.prevTime = Date.now();\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n      gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image,\n          velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n      if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n      if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n      image.currentX = newPositionX;\n      image.currentY = newPositionY; // Define if we need image drag\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n      gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        if (gesture.$imageEl) {\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        }\n\n        if (gesture.$imageWrapEl) {\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        }\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function _in(e) {\n      var swiper = this;\n      var window = getWindow();\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left + window.scrollX;\n        offsetY = gesture.$slideEl.offset().top + window.scrollY;\n        diffX = offsetX + slideWidth / 2 - touchX;\n        diffY = offsetY + slideHeight / 2 - touchY;\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n\n      gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n      gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    out: function out() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n      gesture.$slideEl = undefined;\n    },\n    toggleGestures: function toggleGestures(method) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var selector = zoom.slideSelector,\n          passive = zoom.passiveListener;\n      swiper.$wrapperEl[method]('gesturestart', selector, zoom.onGestureStart, passive);\n      swiper.$wrapperEl[method]('gesturechange', selector, zoom.onGestureChange, passive);\n      swiper.$wrapperEl[method]('gestureend', selector, zoom.onGestureEnd, passive);\n    },\n    enableGestures: function enableGestures() {\n      if (this.zoom.gesturesEnabled) return;\n      this.zoom.gesturesEnabled = true;\n      this.zoom.toggleGestures('on');\n    },\n    disableGestures: function disableGestures() {\n      if (!this.zoom.gesturesEnabled) return;\n      this.zoom.gesturesEnabled = false;\n      this.zoom.toggleGestures('off');\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var support = swiper.support;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) return;\n      zoom.enabled = true;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass;\n      swiper.zoom.passiveListener = passiveListener;\n      swiper.zoom.slideSelector = slideSelector; // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) return;\n      var support = swiper.support;\n      swiper.zoom.enabled = false;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    }\n  };\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        zoom: _extends({\n          enabled: false,\n          scale: 1,\n          currentScale: 1,\n          isScaling: false,\n          gesture: {\n            $slideEl: undefined,\n            slideWidth: undefined,\n            slideHeight: undefined,\n            $imageEl: undefined,\n            $imageWrapEl: undefined,\n            maxRatio: 3\n          },\n          image: {\n            isTouched: undefined,\n            isMoved: undefined,\n            currentX: undefined,\n            currentY: undefined,\n            minX: undefined,\n            minY: undefined,\n            maxX: undefined,\n            maxY: undefined,\n            width: undefined,\n            height: undefined,\n            startX: undefined,\n            startY: undefined,\n            touchesStart: {},\n            touchesCurrent: {}\n          },\n          velocity: {\n            x: undefined,\n            y: undefined,\n            prevPositionX: undefined,\n            prevPositionY: undefined,\n            prevTime: undefined\n          }\n        }, Zoom)\n      });\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n\n          scale = value;\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(swiper, e) {\n        if (!swiper.zoom.enabled) return;\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(swiper, e) {\n        if (!swiper.zoom.enabled) return;\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(swiper, e) {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          swiper.zoom.onTransitionEnd();\n        }\n      }\n    }\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if (loadInDuplicate === void 0) {\n        loadInDuplicate = true;\n      }\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') return;\n      if (swiper.slides.length === 0) return;\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\") : swiper.slides.eq(index);\n      var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\n\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images.push($slideEl[0]);\n      }\n\n      if ($images.length === 0) return;\n      $images.each(function (imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n        var $pictureEl = $imageEl.parent('picture');\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n          if (background) {\n            $imageEl.css('background-image', \"url(\\\"\" + background + \"\\\")\");\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n\n            if ($pictureEl.length) {\n              $pictureEl.children('source').each(function (sourceEl) {\n                var $source = $(sourceEl);\n\n                if ($source.attr('data-srcset')) {\n                  $source.attr('srcset', $source.attr('data-srcset'));\n                  $source.removeAttr('data-srcset');\n                }\n              });\n            }\n\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find(\".\" + params.preloaderClass).remove();\n\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + swiper.params.slideDuplicateClass + \")\");\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\");\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        });\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl,\n          swiperParams = swiper.params,\n          slides = swiper.slides,\n          activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n      var slidesPerView = swiperParams.slidesPerView;\n\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children(\".\" + swiperParams.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\").length) {\n            return true;\n          }\n        } else if (slides[index]) return true;\n\n        return false;\n      }\n\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function (slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n          for (var _i = activeIndex + slidesPerView; _i < maxIndex; _i += 1) {\n            if (slideExist(_i)) swiper.lazy.loadInSlide(_i);\n          } // Prev Slides\n\n\n          for (var _i2 = minIndex; _i2 < activeIndex; _i2 += 1) {\n            if (slideExist(_i2)) swiper.lazy.loadInSlide(_i2);\n          }\n        } else {\n          var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\n          if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n          var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\n          if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n        }\n      }\n    },\n    checkInViewOnLoad: function checkInViewOnLoad() {\n      var window = getWindow();\n      var swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      var $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n      var isWindow = $scrollElement[0] === window;\n      var scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n      var scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n      var swiperOffset = swiper.$el.offset();\n      var rtl = swiper.rtlTranslate;\n      var inView = false;\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n      for (var i = 0; i < swiperCoord.length; i += 1) {\n        var point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      if (inView) {\n        swiper.lazy.load();\n        $scrollElement.off('scroll', swiper.lazy.checkInViewOnLoad);\n      } else if (!swiper.lazy.scrollHandlerAttached) {\n        swiper.lazy.scrollHandlerAttached = true;\n        $scrollElement.on('scroll', swiper.lazy.checkInViewOnLoad);\n      }\n    }\n  };\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        checkInView: false,\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n        scrollingElement: '',\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        lazy: _extends({\n          initialImageLoaded: false\n        }, Lazy)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init(swiper) {\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          if (swiper.params.lazy.checkInView) {\n            swiper.lazy.checkInViewOnLoad();\n          } else {\n            swiper.lazy.load();\n          }\n        }\n      },\n      scroll: function scroll(swiper) {\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      'scrollbarDragMove resize _freeModeNoMomentumRelease': function lazyLoad(swiper) {\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart(swiper) {\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n          swiper.lazy.load();\n        }\n      }\n    }\n  };\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n\n          return maxIndex;\n        };\n      }();\n\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n      };\n\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(_setTranslate, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      var Swiper = swiper.constructor;\n\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var Swiper = swiper.constructor;\n      var controlled = swiper.controller.control;\n      var i;\n\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n\n        if (duration !== 0) {\n          c.transitionStart();\n\n          if (c.params.autoHeight) {\n            nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) return;\n\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n\n            c.transitionEnd();\n          });\n        }\n      }\n\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    }\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide' // or 'container'\n\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        controller: _extends({\n          control: swiper.params.controller.control\n        }, Controller)\n      });\n    },\n    on: {\n      update: function update(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(swiper, translate, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(swiper, duration, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTransition(duration, byController);\n      }\n    }\n  };\n\n  var A11y = {\n    getRandomNumber: function getRandomNumber(size) {\n      if (size === void 0) {\n        size = 16;\n      }\n\n      var randomChar = function randomChar() {\n        return Math.round(16 * Math.random()).toString(16);\n      };\n\n      return 'x'.repeat(size).replace(/x/g, randomChar);\n    },\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    makeElNotFocusable: function makeElNotFocusable($el) {\n      $el.attr('tabIndex', '-1');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElRoleDescription: function addElRoleDescription($el, description) {\n      $el.attr('aria-roledescription', description);\n      return $el;\n    },\n    addElControls: function addElControls($el, controls) {\n      $el.attr('aria-controls', controls);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    addElId: function addElId($el, id) {\n      $el.attr('id', id);\n      return $el;\n    },\n    addElLive: function addElLive($el, live) {\n      $el.attr('aria-live', live);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterOrSpaceKey: function onEnterOrSpaceKey(e) {\n      if (e.keyCode !== 13 && e.keyCode !== 32) return;\n      var swiper = this;\n      var params = swiper.params.a11y;\n      var $targetEl = $(e.target);\n\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n\n      if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) return;\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n      if (swiper.params.loop || !swiper.navigation) return;\n      var _swiper$navigation = swiper.navigation,\n          $nextEl = _swiper$navigation.$nextEl,\n          $prevEl = _swiper$navigation.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n          swiper.a11y.makeElNotFocusable($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n          swiper.a11y.makeElFocusable($prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n          swiper.a11y.makeElNotFocusable($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n          swiper.a11y.makeElFocusable($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n\n          if (!swiper.params.pagination.renderBullet) {\n            swiper.a11y.addElRole($bulletEl, 'button');\n            swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n          }\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      swiper.$el.append(swiper.a11y.liveRegion); // Container\n\n      var $containerEl = swiper.$el;\n\n      if (params.containerRoleDescriptionMessage) {\n        swiper.a11y.addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n      }\n\n      if (params.containerMessage) {\n        swiper.a11y.addElLabel($containerEl, params.containerMessage);\n      } // Wrapper\n\n\n      var $wrapperEl = swiper.$wrapperEl;\n      var wrapperId = $wrapperEl.attr('id') || \"swiper-wrapper-\" + swiper.a11y.getRandomNumber(16);\n      var live;\n      swiper.a11y.addElId($wrapperEl, wrapperId);\n\n      if (swiper.params.autoplay && swiper.params.autoplay.enabled) {\n        live = 'off';\n      } else {\n        live = 'polite';\n      }\n\n      swiper.a11y.addElLive($wrapperEl, live); // Slide\n\n      if (params.itemRoleDescriptionMessage) {\n        swiper.a11y.addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n      }\n\n      swiper.a11y.addElRole($(swiper.slides), params.slideRole);\n      swiper.slides.each(function (slideEl) {\n        var $slideEl = $(slideEl);\n        var ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, $slideEl.index() + 1).replace(/\\{\\{slidesLength\\}\\}/, swiper.slides.length);\n        swiper.a11y.addElLabel($slideEl, ariaLabelMessage);\n      }); // Navigation\n\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl && $nextEl.length) {\n        swiper.a11y.makeElFocusable($nextEl);\n\n        if ($nextEl[0].tagName !== 'BUTTON') {\n          swiper.a11y.addElRole($nextEl, 'button');\n          $nextEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n        }\n\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        swiper.a11y.addElControls($nextEl, wrapperId);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        swiper.a11y.makeElFocusable($prevEl);\n\n        if ($prevEl[0].tagName !== 'BUTTON') {\n          swiper.a11y.addElRole($prevEl, 'button');\n          $prevEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n        }\n\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        swiper.a11y.addElControls($prevEl, wrapperId);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n      }\n\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n      }\n    }\n  };\n  var A11y$1 = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n        slideLabelMessage: '{{index}} / {{slidesLength}}',\n        containerMessage: null,\n        containerRoleDescriptionMessage: null,\n        itemRoleDescriptionMessage: null,\n        slideRole: 'group'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        a11y: _extends({}, A11y, {\n          liveRegion: $(\"<span class=\\\"\" + swiper.params.a11y.notificationClass + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")\n        })\n      });\n    },\n    on: {\n      afterInit: function afterInit(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.destroy();\n      }\n    }\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      var window = getWindow();\n      if (!swiper.params.history) return;\n\n      if (!window.history || !window.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues(swiper.params.url);\n      if (!history.paths.key && !history.paths.value) return;\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var window = getWindow();\n\n      if (!swiper.params.history.replaceState) {\n        window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues(swiper.params.url);\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues(urlOverride) {\n      var window = getWindow();\n      var location;\n\n      if (urlOverride) {\n        location = new URL(urlOverride);\n      } else {\n        location = window.location;\n      }\n\n      var pathArray = location.pathname.slice(1).split('/').filter(function (part) {\n        return part !== '';\n      });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return {\n        key: key,\n        value: value\n      };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      var window = getWindow();\n      if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n      var location;\n\n      if (swiper.params.url) {\n        location = new URL(swiper.params.url);\n      } else {\n        location = window.location;\n      }\n\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n\n      if (swiper.params.history.root.length > 0) {\n        var root = swiper.params.history.root;\n        if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n        value = root + \"/\" + key + \"/\" + value;\n      } else if (!location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n\n      var currentState = window.history.state;\n\n      if (currentState && currentState.value === value) {\n        return;\n      }\n\n      if (swiper.params.history.replaceState) {\n        window.history.replaceState({\n          value: value\n        }, null, value);\n      } else {\n        window.history.pushState({\n          value: value\n        }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    }\n  };\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        root: '',\n        replaceState: false,\n        key: 'slides'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        history: _extends({}, History)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.history.initialized && swiper.params.cssMode) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      }\n    }\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var document = getDocument();\n      swiper.emit('hashChange');\n      var newHash = document.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-hash=\\\"\" + newHash + \"\\\"]\").index();\n        if (typeof newIndex === 'undefined') return;\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      var window = getWindow();\n      var document = getDocument();\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n\n      if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n        window.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || '');\n        swiper.emit('hashSet');\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        document.location.hash = hash || '';\n        swiper.emit('hashSet');\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var document = getDocument();\n      var window = getWindow();\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n      swiper.hashNavigation.initialized = true;\n      var hash = document.location.hash.replace('#', '');\n\n      if (hash) {\n        var speed = 0;\n\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var window = getWindow();\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    }\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        hashNavigation: _extends({\n          initialized: false\n        }, HashNavigation)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n          swiper.hashNavigation.setHash();\n        }\n      }\n    }\n  };\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = nextTick(function () {\n        var autoplayResult;\n\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n\n        if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();else if (autoplayResult === false) {\n          swiper.autoplay.run();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n      if (swiper.autoplay.running) return false;\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) return false;\n      if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) return;\n      if (swiper.autoplay.paused) return;\n      if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.paused = true;\n\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n    onVisibilityChange: function onVisibilityChange() {\n      var swiper = this;\n      var document = getDocument();\n\n      if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n        swiper.autoplay.pause();\n      }\n\n      if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n        swiper.autoplay.run();\n        swiper.autoplay.paused = false;\n      }\n    },\n    onTransitionEnd: function onTransitionEnd(e) {\n      var swiper = this;\n      if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n      if (e.target !== swiper.$wrapperEl[0]) return;\n      swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      swiper.autoplay.paused = false;\n\n      if (!swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      } else {\n        swiper.autoplay.run();\n      }\n    }\n  };\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        autoplay: _extends({}, Autoplay, {\n          running: false,\n          paused: false\n        })\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n          var document = getDocument();\n          document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(swiper, speed, internal) {\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove(swiper) {\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      touchEnd: function touchEnd(swiper) {\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.run();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n\n        var document = getDocument();\n        document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    }\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl.css({\n          opacity: slideOpacity\n        }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides,\n          $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        fadeEffect: _extends({}, Fade)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.fadeEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el,\n          $wrapperEl = swiper.$wrapperEl,\n          slides = swiper.slides,\n          swiperWidth = swiper.width,\n          swiperHeight = swiper.height,\n          rtl = swiper.rtlTranslate,\n          swiperSize = swiper.size,\n          browser = swiper.browser;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n\n          $cubeShadowEl.css({\n            height: swiperWidth + \"px\"\n          });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + round * 4 * swiperSize;\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = 3 * swiperSize + swiperSize * 4 * round;\n        }\n\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = slideIndex * 90 + progress * 90;\n          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n        }\n\n        $slideEl.transform(transform);\n\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n      }\n\n      $wrapperEl.css({\n        '-webkit-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-moz-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-ms-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        'transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\"\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n          var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\n        }\n      }\n\n      var zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n      $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el,\n          slides = swiper.slides;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    }\n  };\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        cubeEffect: _extends({}, Cube)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.cubeEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides,\n          rtl = swiper.rtlTranslate;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n\n        $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides,\n          activeIndex = swiper.activeIndex,\n          $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false; // eslint-disable-next-line\n\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return; // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        flipEffect: _extends({}, Flip)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.flipEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width,\n          swiperHeight = swiper.height,\n          slides = swiper.slides,\n          slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth; // Each slide offset from center\n\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n        var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\n        }\n\n        var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n        var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n        var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n        if (Math.abs(translateX) < 0.001) translateX = 0;\n        if (Math.abs(translateY) < 0.001) translateY = 0;\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        if (Math.abs(scale) < 0.001) scale = 0;\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg) scale(\" + scale + \")\";\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append($shadowBeforeEl);\n          }\n\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append($shadowAfterEl);\n          }\n\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n        }\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    }\n  };\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        scale: 1,\n        modifier: 1,\n        slideShadows: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        coverflowEffect: _extends({}, Coverflow)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.coverflowEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var thumbsParams = swiper.params.thumbs;\n      if (swiper.thumbs.initialized) return false;\n      swiper.thumbs.initialized = true;\n      var SwiperClass = swiper.constructor;\n\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n      } else if (isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n      return true;\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n      var slideToIndex;\n\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix(); // eslint-disable-next-line\n\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n        if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n      }\n\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n      var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n      var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        var direction;\n\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          } // Find actual thumbs index to slide to\n\n\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;else newThumbsIndex = prevThumbsIndex;\n          direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n        } else {\n          newThumbsIndex = swiper.realIndex;\n          direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n        }\n\n        if (useOffset) {\n          newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n        }\n\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      } // Activate thumbs\n\n\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\n        thumbsToActivate = 1;\n      }\n\n      thumbsToActivate = Math.floor(thumbsToActivate);\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\").addClass(thumbActiveClass);\n        }\n      } else {\n        for (var _i = 0; _i < thumbsToActivate; _i += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + _i).addClass(thumbActiveClass);\n        }\n      }\n    }\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        multipleActiveThumbs: true,\n        autoScrollOffset: 0,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        thumbs: _extends({\n          swiper: null,\n          initialized: false\n        }, Thumbs)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        var thumbs = swiper.params.thumbs;\n        if (!thumbs || !thumbs.swiper) return;\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      update: function update(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      resize: function resize(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy(swiper) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      }\n    }\n  };\n\n  // Swiper Class\n  var components = [Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y$1, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n//# sourceMappingURL=swiper-bundle.js.map\n\r\n\r\nvar ferreycorpBanner = new Swiper(\".ferreycorp__banner\", {\r\n  loop: true,\r\n  autoplay: {\r\n    delay: 10000,\r\n    disableOnInteraction: false,\r\n  },\r\n  pagination: {\r\n    el: \".swiper-pagination\",\r\n  },\r\n});\r\n\r\nvar swiper = new Swiper(\".ferreycorp__noticias .noticias__content\", {\r\n  slidesPerView: 1,\r\n  spaceBetween: 30,\r\n  navigation: {\r\n    nextEl: \".swiper-button-next\",\r\n    prevEl: \".swiper-button-prev\",\r\n  },\r\n  breakpoints: {\r\n    640: {\r\n      slidesPerView: 1,\r\n      spaceBetween: 20,\r\n    },\r\n    768: {\r\n      slidesPerView: 2,\r\n      spaceBetween: 40,\r\n    },\r\n    1024: {\r\n      slidesPerView: 3,\r\n      spaceBetween: 29,\r\n    },\r\n  },\r\n});\r\n\r\n// Accordion\r\nvar acc = document.getElementsByClassName(\"accordion\");\r\nvar i;\r\nfor (i = 0; i < acc.length; i++) {\r\n  acc[i].addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"active\");\r\n    var panel = this.nextElementSibling;\r\n    if (panel.style.maxHeight) {\r\n      panel.style.maxHeight = null;\r\n    } else {\r\n      panel.style.maxHeight = panel.scrollHeight + \"px\";\r\n    }\r\n  });\r\n}\r\n\r\njQuery(function ($) {\r\n  //Buscador\r\n  $(\"html\").on(\"click\", function () {\r\n    $(\".ferreycorp__search\").removeClass(\"active\");\r\n  });\r\n  $(\".ferreycorp__search\").on(\"click\", function (e) {\r\n    e.stopPropagation();\r\n    $(this).addClass(\"active\");\r\n    $(this).find(\".form-control\").focus();\r\n  });\r\n\r\n  // hamburger__list\r\n  $(\".hamburger__list\").click(function () {\r\n    $(this).toggleClass(\"active\");\r\n    $(\".menu-principal\").toggleClass(\"left-open\");\r\n    $(\"body\").toggleClass(\"overflow-hidden\");\r\n  });\r\n\r\n  $(\".ferreycorp__header .menu-principal .menu-item-has-children  a\").on(\r\n    \"click\",\r\n    function (e) {\r\n      var width = $(window).width();\r\n      console.log(\"holaaa\");\r\n      if (width < 992) {\r\n        e.preventDefault();\r\n        var $this = $(this);\r\n        if ($this.next().hasClass(\"show\")) {\r\n          $this.removeClass(\"active\");\r\n          $this.next().removeClass(\"show\");\r\n          $this.next().slideUp(350);\r\n        } else {\r\n          $this.parent().parent().find(\"li a\").removeClass(\"active\");\r\n          $this.parent().parent().find(\"li .sub-menu\").removeClass(\"show\");\r\n          $this.parent().parent().find(\"li .sub-menu\").slideUp(350);\r\n          $this.toggleClass(\"active\");\r\n          $this.next().toggleClass(\"show\");\r\n          $this.next().slideToggle(350);\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  );\r\n});\r\n","/**\n * Swiper 6.5.8\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2021 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 23, 2021\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  /**\n   * SSR Window 3.0.0\n   * Better handling for window object in SSR environment\n   * https://github.com/nolimits4web/ssr-window\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */\n\n  /* eslint-disable no-param-reassign */\n  function isObject$1(obj) {\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n  }\n\n  function extend$1(target, src) {\n    if (target === void 0) {\n      target = {};\n    }\n\n    if (src === void 0) {\n      src = {};\n    }\n\n    Object.keys(src).forEach(function (key) {\n      if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n        extend$1(target[key], src[key]);\n      }\n    });\n  }\n\n  var ssrDocument = {\n    body: {},\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    activeElement: {\n      blur: function blur() {},\n      nodeName: ''\n    },\n    querySelector: function querySelector() {\n      return null;\n    },\n    querySelectorAll: function querySelectorAll() {\n      return [];\n    },\n    getElementById: function getElementById() {\n      return null;\n    },\n    createEvent: function createEvent() {\n      return {\n        initEvent: function initEvent() {}\n      };\n    },\n    createElement: function createElement() {\n      return {\n        children: [],\n        childNodes: [],\n        style: {},\n        setAttribute: function setAttribute() {},\n        getElementsByTagName: function getElementsByTagName() {\n          return [];\n        }\n      };\n    },\n    createElementNS: function createElementNS() {\n      return {};\n    },\n    importNode: function importNode() {\n      return null;\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    }\n  };\n\n  function getDocument() {\n    var doc = typeof document !== 'undefined' ? document : {};\n    extend$1(doc, ssrDocument);\n    return doc;\n  }\n\n  var ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n      userAgent: ''\n    },\n    location: {\n      hash: '',\n      host: '',\n      hostname: '',\n      href: '',\n      origin: '',\n      pathname: '',\n      protocol: '',\n      search: ''\n    },\n    history: {\n      replaceState: function replaceState() {},\n      pushState: function pushState() {},\n      go: function go() {},\n      back: function back() {}\n    },\n    CustomEvent: function CustomEvent() {\n      return this;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    getComputedStyle: function getComputedStyle() {\n      return {\n        getPropertyValue: function getPropertyValue() {\n          return '';\n        }\n      };\n    },\n    Image: function Image() {},\n    Date: function Date() {},\n    screen: {},\n    setTimeout: function setTimeout() {},\n    clearTimeout: function clearTimeout() {},\n    matchMedia: function matchMedia() {\n      return {};\n    },\n    requestAnimationFrame: function requestAnimationFrame(callback) {\n      if (typeof setTimeout === 'undefined') {\n        callback();\n        return null;\n      }\n\n      return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame: function cancelAnimationFrame(id) {\n      if (typeof setTimeout === 'undefined') {\n        return;\n      }\n\n      clearTimeout(id);\n    }\n  };\n\n  function getWindow() {\n    var win = typeof window !== 'undefined' ? window : {};\n    extend$1(win, ssrWindow);\n    return win;\n  }\n\n  /**\n   * Dom7 3.0.0\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n   * https://framework7.io/docs/dom7.html\n   *\n   * Copyright 2020, Vladimir Kharlampidi\n   *\n   * Licensed under MIT\n   *\n   * Released on: November 9, 2020\n   */\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n\n  function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !_isNativeFunction(Class)) return Class;\n\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n\n        _cache.set(Class, Wrapper);\n      }\n\n      function Wrapper() {\n        return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n      }\n\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      return _setPrototypeOf(Wrapper, Class);\n    };\n\n    return _wrapNativeSuper(Class);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n  /* eslint-disable no-proto */\n\n\n  function makeReactive(obj) {\n    var proto = obj.__proto__;\n    Object.defineProperty(obj, '__proto__', {\n      get: function get() {\n        return proto;\n      },\n      set: function set(value) {\n        proto.__proto__ = value;\n      }\n    });\n  }\n\n  var Dom7 = /*#__PURE__*/function (_Array) {\n    _inheritsLoose(Dom7, _Array);\n\n    function Dom7(items) {\n      var _this;\n\n      _this = _Array.call.apply(_Array, [this].concat(items)) || this;\n      makeReactive(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    return Dom7;\n  }( /*#__PURE__*/_wrapNativeSuper(Array));\n\n  function arrayFlat(arr) {\n    if (arr === void 0) {\n      arr = [];\n    }\n\n    var res = [];\n    arr.forEach(function (el) {\n      if (Array.isArray(el)) {\n        res.push.apply(res, arrayFlat(el));\n      } else {\n        res.push(el);\n      }\n    });\n    return res;\n  }\n\n  function arrayFilter(arr, callback) {\n    return Array.prototype.filter.call(arr, callback);\n  }\n\n  function arrayUnique(arr) {\n    var uniqueArray = [];\n\n    for (var i = 0; i < arr.length; i += 1) {\n      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n    }\n\n    return uniqueArray;\n  }\n\n  function qsa(selector, context) {\n    if (typeof selector !== 'string') {\n      return [selector];\n    }\n\n    var a = [];\n    var res = context.querySelectorAll(selector);\n\n    for (var i = 0; i < res.length; i += 1) {\n      a.push(res[i]);\n    }\n\n    return a;\n  }\n\n  function $(selector, context) {\n    var window = getWindow();\n    var document = getDocument();\n    var arr = [];\n\n    if (!context && selector instanceof Dom7) {\n      return selector;\n    }\n\n    if (!selector) {\n      return new Dom7(arr);\n    }\n\n    if (typeof selector === 'string') {\n      var html = selector.trim();\n\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        var toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        var tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        arr = qsa(selector.trim(), context || document);\n      } // arr = qsa(selector, document);\n\n    } else if (selector.nodeType || selector === window || selector === document) {\n      arr.push(selector);\n    } else if (Array.isArray(selector)) {\n      if (selector instanceof Dom7) return selector;\n      arr = selector;\n    }\n\n    return new Dom7(arrayUnique(arr));\n  }\n\n  $.fn = Dom7.prototype;\n\n  function addClass() {\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n      classes[_key] = arguments[_key];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      var _el$classList;\n\n      (_el$classList = el.classList).add.apply(_el$classList, classNames);\n    });\n    return this;\n  }\n\n  function removeClass() {\n    for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classes[_key2] = arguments[_key2];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      var _el$classList2;\n\n      (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);\n    });\n    return this;\n  }\n\n  function toggleClass() {\n    for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      classes[_key3] = arguments[_key3];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    this.forEach(function (el) {\n      classNames.forEach(function (className) {\n        el.classList.toggle(className);\n      });\n    });\n  }\n\n  function hasClass() {\n    for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      classes[_key4] = arguments[_key4];\n    }\n\n    var classNames = arrayFlat(classes.map(function (c) {\n      return c.split(' ');\n    }));\n    return arrayFilter(this, function (el) {\n      return classNames.filter(function (className) {\n        return el.classList.contains(className);\n      }).length > 0;\n    }).length > 0;\n  }\n\n  function attr(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === 'string') {\n      // Get attr\n      if (this[0]) return this[0].getAttribute(attrs);\n      return undefined;\n    } // Set attrs\n\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i].setAttribute(attrs, value);\n      } else {\n        // Object\n        for (var attrName in attrs) {\n          this[i][attrName] = attrs[attrName];\n          this[i].setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function removeAttr(attr) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].removeAttribute(attr);\n    }\n\n    return this;\n  }\n\n  function transform(transform) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].style.transform = transform;\n    }\n\n    return this;\n  }\n\n  function transition$1(duration) {\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].style.transitionDuration = typeof duration !== 'string' ? duration + \"ms\" : duration;\n    }\n\n    return this;\n  }\n\n  function on() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    var eventType = args[0],\n        targetSelector = args[1],\n        listener = args[2],\n        capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      eventType = args[0];\n      listener = args[1];\n      capture = args[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n\n    function handleLiveEvent(e) {\n      var target = e.target;\n      if (!target) return;\n      var eventData = e.target.dom7EventData || [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n        var _parents = $(target).parents(); // eslint-disable-line\n\n\n        for (var k = 0; k < _parents.length; k += 1) {\n          if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);\n        }\n      }\n    }\n\n    function handleEvent(e) {\n      var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n      if (eventData.indexOf(e) < 0) {\n        eventData.unshift(e);\n      }\n\n      listener.apply(this, eventData);\n    }\n\n    var events = eventType.split(' ');\n    var j;\n\n    for (var i = 0; i < this.length; i += 1) {\n      var el = this[i];\n\n      if (!targetSelector) {\n        for (j = 0; j < events.length; j += 1) {\n          var event = events[j];\n          if (!el.dom7Listeners) el.dom7Listeners = {};\n          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n          el.dom7Listeners[event].push({\n            listener: listener,\n            proxyListener: handleEvent\n          });\n          el.addEventListener(event, handleEvent, capture);\n        }\n      } else {\n        // Live events\n        for (j = 0; j < events.length; j += 1) {\n          var _event = events[j];\n          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n          if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];\n\n          el.dom7LiveListeners[_event].push({\n            listener: listener,\n            proxyListener: handleLiveEvent\n          });\n\n          el.addEventListener(_event, handleLiveEvent, capture);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function off() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    var eventType = args[0],\n        targetSelector = args[1],\n        listener = args[2],\n        capture = args[3];\n\n    if (typeof args[1] === 'function') {\n      eventType = args[0];\n      listener = args[1];\n      capture = args[2];\n      targetSelector = undefined;\n    }\n\n    if (!capture) capture = false;\n    var events = eventType.split(' ');\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n        var handlers = void 0;\n\n        if (!targetSelector && el.dom7Listeners) {\n          handlers = el.dom7Listeners[event];\n        } else if (targetSelector && el.dom7LiveListeners) {\n          handlers = el.dom7LiveListeners[event];\n        }\n\n        if (handlers && handlers.length) {\n          for (var k = handlers.length - 1; k >= 0; k -= 1) {\n            var handler = handlers[k];\n\n            if (listener && handler.listener === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            } else if (!listener) {\n              el.removeEventListener(event, handler.proxyListener, capture);\n              handlers.splice(k, 1);\n            }\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function trigger() {\n    var window = getWindow();\n\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    var events = args[0].split(' ');\n    var eventData = args[1];\n\n    for (var i = 0; i < events.length; i += 1) {\n      var event = events[i];\n\n      for (var j = 0; j < this.length; j += 1) {\n        var el = this[j];\n\n        if (window.CustomEvent) {\n          var evt = new window.CustomEvent(event, {\n            detail: eventData,\n            bubbles: true,\n            cancelable: true\n          });\n          el.dom7EventData = args.filter(function (data, dataIndex) {\n            return dataIndex > 0;\n          });\n          el.dispatchEvent(evt);\n          el.dom7EventData = [];\n          delete el.dom7EventData;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function transitionEnd$1(callback) {\n    var dom = this;\n\n    function fireCallBack(e) {\n      if (e.target !== this) return;\n      callback.call(this, e);\n      dom.off('transitionend', fireCallBack);\n    }\n\n    if (callback) {\n      dom.on('transitionend', fireCallBack);\n    }\n\n    return this;\n  }\n\n  function outerWidth(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        var _styles = this.styles();\n\n        return this[0].offsetWidth + parseFloat(_styles.getPropertyValue('margin-right')) + parseFloat(_styles.getPropertyValue('margin-left'));\n      }\n\n      return this[0].offsetWidth;\n    }\n\n    return null;\n  }\n\n  function outerHeight(includeMargins) {\n    if (this.length > 0) {\n      if (includeMargins) {\n        var _styles2 = this.styles();\n\n        return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue('margin-top')) + parseFloat(_styles2.getPropertyValue('margin-bottom'));\n      }\n\n      return this[0].offsetHeight;\n    }\n\n    return null;\n  }\n\n  function offset() {\n    if (this.length > 0) {\n      var window = getWindow();\n      var document = getDocument();\n      var el = this[0];\n      var box = el.getBoundingClientRect();\n      var body = document.body;\n      var clientTop = el.clientTop || body.clientTop || 0;\n      var clientLeft = el.clientLeft || body.clientLeft || 0;\n      var scrollTop = el === window ? window.scrollY : el.scrollTop;\n      var scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n\n    return null;\n  }\n\n  function styles() {\n    var window = getWindow();\n    if (this[0]) return window.getComputedStyle(this[0], null);\n    return {};\n  }\n\n  function css(props, value) {\n    var window = getWindow();\n    var i;\n\n    if (arguments.length === 1) {\n      if (typeof props === 'string') {\n        // .css('width')\n        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n      } else {\n        // .css({ width: '100px' })\n        for (i = 0; i < this.length; i += 1) {\n          for (var _prop in props) {\n            this[i].style[_prop] = props[_prop];\n          }\n        }\n\n        return this;\n      }\n    }\n\n    if (arguments.length === 2 && typeof props === 'string') {\n      // .css('width', '100px')\n      for (i = 0; i < this.length; i += 1) {\n        this[i].style[props] = value;\n      }\n\n      return this;\n    }\n\n    return this;\n  }\n\n  function each(callback) {\n    if (!callback) return this;\n    this.forEach(function (el, index) {\n      callback.apply(el, [el, index]);\n    });\n    return this;\n  }\n\n  function filter(callback) {\n    var result = arrayFilter(this, callback);\n    return $(result);\n  }\n\n  function html(html) {\n    if (typeof html === 'undefined') {\n      return this[0] ? this[0].innerHTML : null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].innerHTML = html;\n    }\n\n    return this;\n  }\n\n  function text(text) {\n    if (typeof text === 'undefined') {\n      return this[0] ? this[0].textContent.trim() : null;\n    }\n\n    for (var i = 0; i < this.length; i += 1) {\n      this[i].textContent = text;\n    }\n\n    return this;\n  }\n\n  function is(selector) {\n    var window = getWindow();\n    var document = getDocument();\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === 'undefined') return false;\n\n    if (typeof selector === 'string') {\n      if (el.matches) return el.matches(selector);\n      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n      if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n      compareWith = $(selector);\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    if (selector === document) {\n      return el === document;\n    }\n\n    if (selector === window) {\n      return el === window;\n    }\n\n    if (selector.nodeType || selector instanceof Dom7) {\n      compareWith = selector.nodeType ? [selector] : selector;\n\n      for (i = 0; i < compareWith.length; i += 1) {\n        if (compareWith[i] === el) return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  function index() {\n    var child = this[0];\n    var i;\n\n    if (child) {\n      i = 0; // eslint-disable-next-line\n\n      while ((child = child.previousSibling) !== null) {\n        if (child.nodeType === 1) i += 1;\n      }\n\n      return i;\n    }\n\n    return undefined;\n  }\n\n  function eq(index) {\n    if (typeof index === 'undefined') return this;\n    var length = this.length;\n\n    if (index > length - 1) {\n      return $([]);\n    }\n\n    if (index < 0) {\n      var returnIndex = length + index;\n      if (returnIndex < 0) return $([]);\n      return $([this[returnIndex]]);\n    }\n\n    return $([this[index]]);\n  }\n\n  function append() {\n    var newChild;\n    var document = getDocument();\n\n    for (var k = 0; k < arguments.length; k += 1) {\n      newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\n\n      for (var i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n\n          while (tempDiv.firstChild) {\n            this[i].appendChild(tempDiv.firstChild);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (var j = 0; j < newChild.length; j += 1) {\n            this[i].appendChild(newChild[j]);\n          }\n        } else {\n          this[i].appendChild(newChild);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function prepend(newChild) {\n    var document = getDocument();\n    var i;\n    var j;\n\n    for (i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (j = 0; j < newChild.length; j += 1) {\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        }\n      } else {\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\n      }\n    }\n\n    return this;\n  }\n\n  function next(selector) {\n    if (this.length > 0) {\n      if (selector) {\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n          return $([this[0].nextElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function nextAll(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) return $([]);\n\n    while (el.nextElementSibling) {\n      var _next = el.nextElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(_next).is(selector)) nextEls.push(_next);\n      } else nextEls.push(_next);\n\n      el = _next;\n    }\n\n    return $(nextEls);\n  }\n\n  function prev(selector) {\n    if (this.length > 0) {\n      var el = this[0];\n\n      if (selector) {\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n          return $([el.previousElementSibling]);\n        }\n\n        return $([]);\n      }\n\n      if (el.previousElementSibling) return $([el.previousElementSibling]);\n      return $([]);\n    }\n\n    return $([]);\n  }\n\n  function prevAll(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) return $([]);\n\n    while (el.previousElementSibling) {\n      var _prev = el.previousElementSibling; // eslint-disable-line\n\n      if (selector) {\n        if ($(_prev).is(selector)) prevEls.push(_prev);\n      } else prevEls.push(_prev);\n\n      el = _prev;\n    }\n\n    return $(prevEls);\n  }\n\n  function parent(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode !== null) {\n        if (selector) {\n          if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n        } else {\n          parents.push(this[i].parentNode);\n        }\n      }\n    }\n\n    return $(parents);\n  }\n\n  function parents(selector) {\n    var parents = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var _parent = this[i].parentNode; // eslint-disable-line\n\n      while (_parent) {\n        if (selector) {\n          if ($(_parent).is(selector)) parents.push(_parent);\n        } else {\n          parents.push(_parent);\n        }\n\n        _parent = _parent.parentNode;\n      }\n    }\n\n    return $(parents);\n  }\n\n  function closest(selector) {\n    var closest = this; // eslint-disable-line\n\n    if (typeof selector === 'undefined') {\n      return $([]);\n    }\n\n    if (!closest.is(selector)) {\n      closest = closest.parents(selector).eq(0);\n    }\n\n    return closest;\n  }\n\n  function find(selector) {\n    var foundElements = [];\n\n    for (var i = 0; i < this.length; i += 1) {\n      try {\n        var found = this[i].querySelectorAll(selector);\n      } catch (err) {\n        console.log(selector);\n      }\n\n      for (var j = 0; j < found.length; j += 1) {\n        foundElements.push(found[j]);\n      }\n    }\n\n    return $(foundElements);\n  }\n\n  function children(selector) {\n    var children = []; // eslint-disable-line\n\n    for (var i = 0; i < this.length; i += 1) {\n      var childNodes = this[i].children;\n\n      for (var j = 0; j < childNodes.length; j += 1) {\n        if (!selector || $(childNodes[j]).is(selector)) {\n          children.push(childNodes[j]);\n        }\n      }\n    }\n\n    return $(children);\n  }\n\n  function remove() {\n    for (var i = 0; i < this.length; i += 1) {\n      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n    }\n\n    return this;\n  }\n\n  var Methods = {\n    addClass: addClass,\n    removeClass: removeClass,\n    hasClass: hasClass,\n    toggleClass: toggleClass,\n    attr: attr,\n    removeAttr: removeAttr,\n    transform: transform,\n    transition: transition$1,\n    on: on,\n    off: off,\n    trigger: trigger,\n    transitionEnd: transitionEnd$1,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight,\n    styles: styles,\n    offset: offset,\n    css: css,\n    each: each,\n    html: html,\n    text: text,\n    is: is,\n    index: index,\n    eq: eq,\n    append: append,\n    prepend: prepend,\n    next: next,\n    nextAll: nextAll,\n    prev: prev,\n    prevAll: prevAll,\n    parent: parent,\n    parents: parents,\n    closest: closest,\n    find: find,\n    children: children,\n    filter: filter,\n    remove: remove\n  };\n  Object.keys(Methods).forEach(function (methodName) {\n    Object.defineProperty($.fn, methodName, {\n      value: Methods[methodName],\n      writable: true\n    });\n  });\n\n  function deleteProps(obj) {\n    var object = obj;\n    Object.keys(object).forEach(function (key) {\n      try {\n        object[key] = null;\n      } catch (e) {// no getter for object\n      }\n\n      try {\n        delete object[key];\n      } catch (e) {// something got wrong\n      }\n    });\n  }\n\n  function nextTick(callback, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return setTimeout(callback, delay);\n  }\n\n  function now() {\n    return Date.now();\n  }\n\n  function getComputedStyle$1(el) {\n    var window = getWindow();\n    var style;\n\n    if (window.getComputedStyle) {\n      style = window.getComputedStyle(el, null);\n    }\n\n    if (!style && el.currentStyle) {\n      style = el.currentStyle;\n    }\n\n    if (!style) {\n      style = el.style;\n    }\n\n    return style;\n  }\n\n  function getTranslate(el, axis) {\n    if (axis === void 0) {\n      axis = 'x';\n    }\n\n    var window = getWindow();\n    var matrix;\n    var curTransform;\n    var transformMatrix;\n    var curStyle = getComputedStyle$1(el);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(function (a) {\n          return a.replace(',', '.');\n        }).join(', ');\n      } // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n\n\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n    }\n\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n    }\n\n    return curTransform || 0;\n  }\n\n  function isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n  }\n\n  function extend() {\n    var to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n    var noExtend = ['__proto__', 'constructor', 'prototype'];\n\n    for (var i = 1; i < arguments.length; i += 1) {\n      var nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n\n      if (nextSource !== undefined && nextSource !== null) {\n        var keysArray = Object.keys(Object(nextSource)).filter(function (key) {\n          return noExtend.indexOf(key) < 0;\n        });\n\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          var nextKey = keysArray[nextIndex];\n          var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n          if (desc !== undefined && desc.enumerable) {\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n\n              if (nextSource[nextKey].__swiper__) {\n                to[nextKey] = nextSource[nextKey];\n              } else {\n                extend(to[nextKey], nextSource[nextKey]);\n              }\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n\n    return to;\n  }\n\n  function bindModuleMethods(instance, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (isObject(obj[key])) {\n        Object.keys(obj[key]).forEach(function (subKey) {\n          if (typeof obj[key][subKey] === 'function') {\n            obj[key][subKey] = obj[key][subKey].bind(instance);\n          }\n        });\n      }\n\n      instance[key] = obj[key];\n    });\n  }\n\n  function classesToSelector(classes) {\n    if (classes === void 0) {\n      classes = '';\n    }\n\n    return \".\" + classes.trim().replace(/([\\.:\\/])/g, '\\\\$1') // eslint-disable-line\n    .replace(/ /g, '.');\n  }\n\n  var support;\n\n  function calcSupport() {\n    var window = getWindow();\n    var document = getDocument();\n    return {\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n      pointerEvents: !!window.PointerEvent && 'maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints >= 0,\n      observer: function checkObserver() {\n        return 'MutationObserver' in window || 'WebkitMutationObserver' in window;\n      }(),\n      passiveListener: function checkPassiveListener() {\n        var supportsPassive = false;\n\n        try {\n          var opts = Object.defineProperty({}, 'passive', {\n            // eslint-disable-next-line\n            get: function get() {\n              supportsPassive = true;\n            }\n          });\n          window.addEventListener('testPassiveListener', null, opts);\n        } catch (e) {// No support\n        }\n\n        return supportsPassive;\n      }(),\n      gestures: function checkGestures() {\n        return 'ongesturestart' in window;\n      }()\n    };\n  }\n\n  function getSupport() {\n    if (!support) {\n      support = calcSupport();\n    }\n\n    return support;\n  }\n\n  var device;\n\n  function calcDevice(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        userAgent = _ref.userAgent;\n\n    var support = getSupport();\n    var window = getWindow();\n    var platform = window.navigator.platform;\n    var ua = userAgent || window.navigator.userAgent;\n    var device = {\n      ios: false,\n      android: false\n    };\n    var screenWidth = window.screen.width;\n    var screenHeight = window.screen.height;\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    var windows = platform === 'Win32';\n    var macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n    var iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + \"x\" + screenHeight) >= 0) {\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\n      if (!ipad) ipad = [0, 1, '13_0_0'];\n      macos = false;\n    } // Android\n\n\n    if (android && !windows) {\n      device.os = 'android';\n      device.android = true;\n    }\n\n    if (ipad || iphone || ipod) {\n      device.os = 'ios';\n      device.ios = true;\n    } // Export object\n\n\n    return device;\n  }\n\n  function getDevice(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n\n    if (!device) {\n      device = calcDevice(overrides);\n    }\n\n    return device;\n  }\n\n  var browser;\n\n  function calcBrowser() {\n    var window = getWindow();\n\n    function isSafari() {\n      var ua = window.navigator.userAgent.toLowerCase();\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n    }\n\n    return {\n      isEdge: !!window.navigator.userAgent.match(/Edge/g),\n      isSafari: isSafari(),\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n    };\n  }\n\n  function getBrowser() {\n    if (!browser) {\n      browser = calcBrowser();\n    }\n\n    return browser;\n  }\n\n  var supportsResizeObserver = function supportsResizeObserver() {\n    var window = getWindow();\n    return typeof window.ResizeObserver !== 'undefined';\n  };\n\n  var Resize = {\n    name: 'resize',\n    create: function create() {\n      var swiper = this;\n      extend(swiper, {\n        resize: {\n          observer: null,\n          createObserver: function createObserver() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.resize.observer = new ResizeObserver(function (entries) {\n              var width = swiper.width,\n                  height = swiper.height;\n              var newWidth = width;\n              var newHeight = height;\n              entries.forEach(function (_ref) {\n                var contentBoxSize = _ref.contentBoxSize,\n                    contentRect = _ref.contentRect,\n                    target = _ref.target;\n                if (target && target !== swiper.el) return;\n                newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n                newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n              });\n\n              if (newWidth !== width || newHeight !== height) {\n                swiper.resize.resizeHandler();\n              }\n            });\n            swiper.resize.observer.observe(swiper.el);\n          },\n          removeObserver: function removeObserver() {\n            if (swiper.resize.observer && swiper.resize.observer.unobserve && swiper.el) {\n              swiper.resize.observer.unobserve(swiper.el);\n              swiper.resize.observer = null;\n            }\n          },\n          resizeHandler: function resizeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.emit('beforeResize');\n            swiper.emit('resize');\n          },\n          orientationChangeHandler: function orientationChangeHandler() {\n            if (!swiper || swiper.destroyed || !swiper.initialized) return;\n            swiper.emit('orientationchange');\n          }\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        var window = getWindow();\n\n        if (swiper.params.resizeObserver && supportsResizeObserver()) {\n          swiper.resize.createObserver();\n          return;\n        } // Emit resize\n\n\n        window.addEventListener('resize', swiper.resize.resizeHandler); // Emit orientationchange\n\n        window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      },\n      destroy: function destroy(swiper) {\n        var window = getWindow();\n        swiper.resize.removeObserver();\n        window.removeEventListener('resize', swiper.resize.resizeHandler);\n        window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n      }\n    }\n  };\n\n  var Observer = {\n    attach: function attach(target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var window = getWindow();\n      var swiper = this;\n      var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n      var observer = new ObserverFunc(function (mutations) {\n        // The observerUpdate event should only be triggered\n        // once despite the number of mutations.  Additional\n        // triggers are redundant and are very costly\n        if (mutations.length === 1) {\n          swiper.emit('observerUpdate', mutations[0]);\n          return;\n        }\n\n        var observerUpdate = function observerUpdate() {\n          swiper.emit('observerUpdate', mutations[0]);\n        };\n\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(observerUpdate);\n        } else {\n          window.setTimeout(observerUpdate, 0);\n        }\n      });\n      observer.observe(target, {\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n      });\n      swiper.observer.observers.push(observer);\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.support.observer || !swiper.params.observer) return;\n\n      if (swiper.params.observeParents) {\n        var containerParents = swiper.$el.parents();\n\n        for (var i = 0; i < containerParents.length; i += 1) {\n          swiper.observer.attach(containerParents[i]);\n        }\n      } // Observe container\n\n\n      swiper.observer.attach(swiper.$el[0], {\n        childList: swiper.params.observeSlideChildren\n      }); // Observe wrapper\n\n      swiper.observer.attach(swiper.$wrapperEl[0], {\n        attributes: false\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.observer.observers.forEach(function (observer) {\n        observer.disconnect();\n      });\n      swiper.observer.observers = [];\n    }\n  };\n  var Observer$1 = {\n    name: 'observer',\n    params: {\n      observer: false,\n      observeParents: false,\n      observeSlideChildren: false\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        observer: _extends({}, Observer, {\n          observers: []\n        })\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.observer.init();\n      },\n      destroy: function destroy(swiper) {\n        swiper.observer.destroy();\n      }\n    }\n  };\n\n  var modular = {\n    useParams: function useParams(instanceParams) {\n      var instance = this;\n      if (!instance.modules) return;\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName]; // Extend params\n\n        if (module.params) {\n          extend(instanceParams, module.params);\n        }\n      });\n    },\n    useModules: function useModules(modulesParams) {\n      if (modulesParams === void 0) {\n        modulesParams = {};\n      }\n\n      var instance = this;\n      if (!instance.modules) return;\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName];\n        var moduleParams = modulesParams[moduleName] || {}; // Add event listeners\n\n        if (module.on && instance.on) {\n          Object.keys(module.on).forEach(function (moduleEventName) {\n            instance.on(moduleEventName, module.on[moduleEventName]);\n          });\n        } // Module create callback\n\n\n        if (module.create) {\n          module.create.bind(instance)(moduleParams);\n        }\n      });\n    }\n  };\n\n  /* eslint-disable no-underscore-dangle */\n  var eventsEmitter = {\n    on: function on(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n      var method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(function (event) {\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    },\n    once: function once(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n\n      function onceHandler() {\n        self.off(events, onceHandler);\n\n        if (onceHandler.__emitterProxy) {\n          delete onceHandler.__emitterProxy;\n        }\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        handler.apply(self, args);\n      }\n\n      onceHandler.__emitterProxy = handler;\n      return self.on(events, onceHandler, priority);\n    },\n    onAny: function onAny(handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') return self;\n      var method = priority ? 'unshift' : 'push';\n\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\n        self.eventsAnyListeners[method](handler);\n      }\n\n      return self;\n    },\n    offAny: function offAny(handler) {\n      var self = this;\n      if (!self.eventsAnyListeners) return self;\n      var index = self.eventsAnyListeners.indexOf(handler);\n\n      if (index >= 0) {\n        self.eventsAnyListeners.splice(index, 1);\n      }\n\n      return self;\n    },\n    off: function off(events, handler) {\n      var self = this;\n      if (!self.eventsListeners) return self;\n      events.split(' ').forEach(function (event) {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(function (eventHandler, index) {\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    },\n    emit: function emit() {\n      var self = this;\n      if (!self.eventsListeners) return self;\n      var events;\n      var data;\n      var context;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n\n      data.unshift(context);\n      var eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(function (event) {\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n          self.eventsAnyListeners.forEach(function (eventHandler) {\n            eventHandler.apply(context, [event].concat(data));\n          });\n        }\n\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          self.eventsListeners[event].forEach(function (eventHandler) {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    }\n  };\n\n  function updateSize() {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n      width = swiper.params.width;\n    } else {\n      width = $el[0].clientWidth;\n    }\n\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n      height = swiper.params.height;\n    } else {\n      height = $el[0].clientHeight;\n    }\n\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n      return;\n    } // Subtract paddings\n\n\n    width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n    height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    extend(swiper, {\n      width: width,\n      height: height,\n      size: swiper.isHorizontal() ? width : height\n    });\n  }\n\n  function updateSlides() {\n    var swiper = this;\n\n    var getDirectionLabel = function getDirectionLabel(property) {\n      if (swiper.isHorizontal()) {\n        return property;\n      } // prettier-ignore\n\n\n      return {\n        'width': 'height',\n        'margin-top': 'margin-left',\n        'margin-bottom ': 'margin-right',\n        'margin-left': 'margin-top',\n        'margin-right': 'margin-bottom',\n        'padding-left': 'padding-top',\n        'padding-right': 'padding-bottom',\n        'marginRight': 'marginBottom'\n      }[property];\n    };\n\n    var getDirectionPropertyValue = function getDirectionPropertyValue(node, label) {\n      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n    };\n\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl,\n        swiperSize = swiper.size,\n        rtl = swiper.rtlTranslate,\n        wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n\n    function slidesForMargin(slideEl, slideIndex) {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }\n\n    var offsetBefore = params.slidesOffsetBefore;\n\n    if (typeof offsetBefore === 'function') {\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\n    }\n\n    var offsetAfter = params.slidesOffsetAfter;\n\n    if (typeof offsetAfter === 'function') {\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\n    }\n\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.slidesGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n\n    if (typeof swiperSize === 'undefined') {\n      return;\n    }\n\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n    }\n\n    swiper.virtualSize = -spaceBetween; // reset margins\n\n    if (rtl) slides.css({\n      marginLeft: '',\n      marginTop: ''\n    });else slides.css({\n      marginRight: '',\n      marginBottom: ''\n    });\n    var slidesNumberEvenToRows;\n\n    if (params.slidesPerColumn > 1) {\n      if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n        slidesNumberEvenToRows = slidesLength;\n      } else {\n        slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n      }\n\n      if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n      }\n    } // Calc slides\n\n\n    var slideSize;\n    var slidesPerColumn = params.slidesPerColumn;\n    var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n    var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n\n    for (var i = 0; i < slidesLength; i += 1) {\n      slideSize = 0;\n      var slide = slides.eq(i);\n\n      if (params.slidesPerColumn > 1) {\n        // Set slides order\n        var newSlideOrderIndex = void 0;\n        var column = void 0;\n        var row = void 0;\n\n        if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n          var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n          var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n          var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n          slide.css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex\n          });\n        } else if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - column * slidesPerColumn;\n\n          if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n            row += 1;\n\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - row * slidesPerRow;\n        }\n\n        slide.css(getDirectionLabel('margin-top'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n      }\n\n      if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n      if (params.slidesPerView === 'auto') {\n        var slideStyles = getComputedStyle(slide[0]);\n        var currentTransform = slide[0].style.transform;\n        var currentWebKitTransform = slide[0].style.webkitTransform;\n\n        if (currentTransform) {\n          slide[0].style.transform = 'none';\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = 'none';\n        }\n\n        if (params.roundLengths) {\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n        } else {\n          // eslint-disable-next-line\n          var width = getDirectionPropertyValue(slideStyles, 'width');\n          var paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n          var paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n          var marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n          var marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n          var boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            var _slide$ = slide[0],\n                clientWidth = _slide$.clientWidth,\n                offsetWidth = _slide$.offsetWidth;\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n          }\n        }\n\n        if (currentTransform) {\n          slide[0].style.transform = currentTransform;\n        }\n\n        if (currentWebKitTransform) {\n          slide[0].style.webkitTransform = currentWebKitTransform;\n        }\n\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n      } else {\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n        if (slides[i]) {\n          slides[i].style[getDirectionLabel('width')] = slideSize + \"px\";\n        }\n      }\n\n      if (slides[i]) {\n        slides[i].swiperSlideSize = slideSize;\n      }\n\n      slidesSizesGrid.push(slideSize);\n\n      if (params.centeredSlides) {\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n      } else {\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n        slidesGrid.push(slidePosition);\n        slidePosition = slidePosition + slideSize + spaceBetween;\n      }\n\n      swiper.virtualSize += slideSize + spaceBetween;\n      prevSlideSize = slideSize;\n      index += 1;\n    }\n\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    var newSlidesGrid;\n\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n      $wrapperEl.css({\n        width: swiper.virtualSize + params.spaceBetween + \"px\"\n      });\n    }\n\n    if (params.setWrapperSize) {\n      var _$wrapperEl$css;\n\n      $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css));\n    }\n\n    if (params.slidesPerColumn > 1) {\n      var _$wrapperEl$css2;\n\n      swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n      $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel('width')] = swiper.virtualSize + params.spaceBetween + \"px\", _$wrapperEl$css2));\n\n      if (params.centeredSlides) {\n        newSlidesGrid = [];\n\n        for (var _i = 0; _i < snapGrid.length; _i += 1) {\n          var slidesGridItem = snapGrid[_i];\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n          if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n        }\n\n        snapGrid = newSlidesGrid;\n      }\n    } // Remove last grid elements depending on width\n\n\n    if (!params.centeredSlides) {\n      newSlidesGrid = [];\n\n      for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {\n        var _slidesGridItem = snapGrid[_i2];\n        if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);\n\n        if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) {\n          newSlidesGrid.push(_slidesGridItem);\n        }\n      }\n\n      snapGrid = newSlidesGrid;\n\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n        snapGrid.push(swiper.virtualSize - swiperSize);\n      }\n    }\n\n    if (snapGrid.length === 0) snapGrid = [0];\n\n    if (params.spaceBetween !== 0) {\n      var _slides$filter$css;\n\n      var key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n      slides.filter(slidesForMargin).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + \"px\", _slides$filter$css));\n    }\n\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n      var allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      allSlidesSize -= params.spaceBetween;\n      var maxSnap = allSlidesSize - swiperSize;\n      snapGrid = snapGrid.map(function (snap) {\n        if (snap < 0) return -offsetBefore;\n        if (snap > maxSnap) return maxSnap + offsetAfter;\n        return snap;\n      });\n    }\n\n    if (params.centerInsufficientSlides) {\n      var _allSlidesSize = 0;\n      slidesSizesGrid.forEach(function (slideSizeValue) {\n        _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n      });\n      _allSlidesSize -= params.spaceBetween;\n\n      if (_allSlidesSize < swiperSize) {\n        var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;\n        snapGrid.forEach(function (snap, snapIndex) {\n          snapGrid[snapIndex] = snap - allSlidesOffset;\n        });\n        slidesGrid.forEach(function (snap, snapIndex) {\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\n        });\n      }\n    }\n\n    extend(swiper, {\n      slides: slides,\n      snapGrid: snapGrid,\n      slidesGrid: slidesGrid,\n      slidesSizesGrid: slidesSizesGrid\n    });\n\n    if (slidesLength !== previousSlidesLength) {\n      swiper.emit('slidesLengthChange');\n    }\n\n    if (snapGrid.length !== previousSnapGridLength) {\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\n      swiper.emit('snapGridLengthChange');\n    }\n\n    if (slidesGrid.length !== previousSlidesGridLength) {\n      swiper.emit('slidesGridLengthChange');\n    }\n\n    if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateSlidesOffset();\n    }\n  }\n\n  function updateAutoHeight(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var newHeight = 0;\n    var i;\n\n    if (typeof speed === 'number') {\n      swiper.setTransition(speed);\n    } else if (speed === true) {\n      swiper.setTransition(swiper.params.speed);\n    } // Find slides currently in view\n\n\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n      if (swiper.params.centeredSlides) {\n        swiper.visibleSlides.each(function (slide) {\n          activeSlides.push(slide);\n        });\n      } else {\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n          var index = swiper.activeIndex + i;\n          if (index > swiper.slides.length) break;\n          activeSlides.push(swiper.slides.eq(index)[0]);\n        }\n      }\n    } else {\n      activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n    } // Find new height from highest slide in view\n\n\n    for (i = 0; i < activeSlides.length; i += 1) {\n      if (typeof activeSlides[i] !== 'undefined') {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n      }\n    } // Update Height\n\n\n    if (newHeight) swiper.$wrapperEl.css('height', newHeight + \"px\");\n  }\n\n  function updateSlidesOffset() {\n    var swiper = this;\n    var slides = swiper.slides;\n\n    for (var i = 0; i < slides.length; i += 1) {\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n    }\n  }\n\n  function updateSlidesProgress(translate) {\n    if (translate === void 0) {\n      translate = this && this.translate || 0;\n    }\n\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides,\n        rtl = swiper.rtlTranslate;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n    var offsetCenter = -translate;\n    if (rtl) offsetCenter = translate; // Visible Slides\n\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n\n    for (var i = 0; i < slides.length; i += 1) {\n      var slide = slides[i];\n      var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n\n      if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n        var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides.eq(i).addClass(params.slideVisibleClass);\n        }\n      }\n\n      slide.progress = rtl ? -slideProgress : slideProgress;\n    }\n\n    swiper.visibleSlides = $(swiper.visibleSlides);\n  }\n\n  function updateProgress(translate) {\n    var swiper = this;\n\n    if (typeof translate === 'undefined') {\n      var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress,\n        isBeginning = swiper.isBeginning,\n        isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n\n    if (translatesDiff === 0) {\n      progress = 0;\n      isBeginning = true;\n      isEnd = true;\n    } else {\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\n      isBeginning = progress <= 0;\n      isEnd = progress >= 1;\n    }\n\n    extend(swiper, {\n      progress: progress,\n      isBeginning: isBeginning,\n      isEnd: isEnd\n    });\n    if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n    if (isBeginning && !wasBeginning) {\n      swiper.emit('reachBeginning toEdge');\n    }\n\n    if (isEnd && !wasEnd) {\n      swiper.emit('reachEnd toEdge');\n    }\n\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n      swiper.emit('fromEdge');\n    }\n\n    swiper.emit('progress', progress);\n  }\n\n  function updateSlidesClasses() {\n    var swiper = this;\n    var slides = swiper.slides,\n        params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex,\n        realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n    var activeSlide;\n\n    if (isVirtual) {\n      activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n    } else {\n      activeSlide = slides.eq(activeIndex);\n    } // Active classes\n\n\n    activeSlide.addClass(params.slideActiveClass);\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n      }\n    } // Next Slide\n\n\n    var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n\n    if (params.loop && nextSlide.length === 0) {\n      nextSlide = slides.eq(0);\n      nextSlide.addClass(params.slideNextClass);\n    } // Prev Slide\n\n\n    var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n\n    if (params.loop && prevSlide.length === 0) {\n      prevSlide = slides.eq(-1);\n      prevSlide.addClass(params.slidePrevClass);\n    }\n\n    if (params.loop) {\n      // Duplicate to all looped slides\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n      }\n\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\n        $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      } else {\n        $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n      }\n    }\n\n    swiper.emitSlidesClasses();\n  }\n\n  function updateActiveIndex(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid,\n        snapGrid = swiper.snapGrid,\n        params = swiper.params,\n        previousIndex = swiper.activeIndex,\n        previousRealIndex = swiper.realIndex,\n        previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n\n    if (typeof activeIndex === 'undefined') {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      } // Normalize slideIndex\n\n\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n      }\n    }\n\n    if (snapGrid.indexOf(translate) >= 0) {\n      snapIndex = snapGrid.indexOf(translate);\n    } else {\n      var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if (activeIndex === previousIndex) {\n      if (snapIndex !== previousSnapIndex) {\n        swiper.snapIndex = snapIndex;\n        swiper.emit('snapIndexChange');\n      }\n\n      return;\n    } // Get real index\n\n\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n    extend(swiper, {\n      snapIndex: snapIndex,\n      realIndex: realIndex,\n      previousIndex: previousIndex,\n      activeIndex: activeIndex\n    });\n    swiper.emit('activeIndexChange');\n    swiper.emit('snapIndexChange');\n\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n      swiper.emit('slideChange');\n    }\n  }\n\n  function updateClickedSlide(e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n    var slideFound = false;\n    var slideIndex;\n\n    if (slide) {\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        if (swiper.slides[i] === slide) {\n          slideFound = true;\n          slideIndex = i;\n          break;\n        }\n      }\n    }\n\n    if (slide && slideFound) {\n      swiper.clickedSlide = slide;\n\n      if (swiper.virtual && swiper.params.virtual.enabled) {\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n      } else {\n        swiper.clickedIndex = slideIndex;\n      }\n    } else {\n      swiper.clickedSlide = undefined;\n      swiper.clickedIndex = undefined;\n      return;\n    }\n\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n      swiper.slideToClickedSlide();\n    }\n  }\n\n  var update = {\n    updateSize: updateSize,\n    updateSlides: updateSlides,\n    updateAutoHeight: updateAutoHeight,\n    updateSlidesOffset: updateSlidesOffset,\n    updateSlidesProgress: updateSlidesProgress,\n    updateProgress: updateProgress,\n    updateSlidesClasses: updateSlidesClasses,\n    updateActiveIndex: updateActiveIndex,\n    updateClickedSlide: updateClickedSlide\n  };\n\n  function getSwiperTranslate(axis) {\n    if (axis === void 0) {\n      axis = this.isHorizontal() ? 'x' : 'y';\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        rtl = swiper.rtlTranslate,\n        translate = swiper.translate,\n        $wrapperEl = swiper.$wrapperEl;\n\n    if (params.virtualTranslate) {\n      return rtl ? -translate : translate;\n    }\n\n    if (params.cssMode) {\n      return translate;\n    }\n\n    var currentTranslate = getTranslate($wrapperEl[0], axis);\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n  }\n\n  function setTranslate(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate,\n        params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        wrapperEl = swiper.wrapperEl,\n        progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n\n    if (swiper.isHorizontal()) {\n      x = rtl ? -translate : translate;\n    } else {\n      y = translate;\n    }\n\n    if (params.roundLengths) {\n      x = Math.floor(x);\n      y = Math.floor(y);\n    }\n\n    if (params.cssMode) {\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n    } else if (!params.virtualTranslate) {\n      $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n    }\n\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== progress) {\n      swiper.updateProgress(translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, byController);\n  }\n\n  function minTranslate() {\n    return -this.snapGrid[0];\n  }\n\n  function maxTranslate() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n  }\n\n  function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n    if (translate === void 0) {\n      translate = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (translateBounds === void 0) {\n      translateBounds = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var minTranslate = swiper.minTranslate();\n    var maxTranslate = swiper.maxTranslate();\n    var newTranslate;\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n    swiper.updateProgress(newTranslate);\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          var _wrapperEl$scrollTo;\n\n          wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = -newTranslate, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionEnd');\n      }\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(newTranslate);\n\n      if (runCallbacks) {\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.emit('transitionStart');\n      }\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n            swiper.onTranslateToWrapperTransitionEnd = null;\n            delete swiper.onTranslateToWrapperTransitionEnd;\n\n            if (runCallbacks) {\n              swiper.emit('transitionEnd');\n            }\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  var translate = {\n    getTranslate: getSwiperTranslate,\n    setTranslate: setTranslate,\n    minTranslate: minTranslate,\n    maxTranslate: maxTranslate,\n    translateTo: translateTo\n  };\n\n  function setTransition(duration, byController) {\n    var swiper = this;\n\n    if (!swiper.params.cssMode) {\n      swiper.$wrapperEl.transition(duration);\n    }\n\n    swiper.emit('setTransition', duration, byController);\n  }\n\n  function transitionStart(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        params = swiper.params,\n        previousIndex = swiper.previousIndex;\n    if (params.cssMode) return;\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit('transitionStart');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionStart');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionStart');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionStart');\n      } else {\n        swiper.emit('slidePrevTransitionStart');\n      }\n    }\n  }\n\n  function transitionEnd(runCallbacks, direction) {\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        previousIndex = swiper.previousIndex,\n        params = swiper.params;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    var dir = direction;\n\n    if (!dir) {\n      if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n    }\n\n    swiper.emit('transitionEnd');\n\n    if (runCallbacks && activeIndex !== previousIndex) {\n      if (dir === 'reset') {\n        swiper.emit('slideResetTransitionEnd');\n        return;\n      }\n\n      swiper.emit('slideChangeTransitionEnd');\n\n      if (dir === 'next') {\n        swiper.emit('slideNextTransitionEnd');\n      } else {\n        swiper.emit('slidePrevTransitionEnd');\n      }\n    }\n  }\n\n  var transition = {\n    setTransition: setTransition,\n    transitionStart: transitionStart,\n    transitionEnd: transitionEnd\n  };\n\n  function slideTo(index, speed, runCallbacks, internal) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (typeof index !== 'number' && typeof index !== 'string') {\n      throw new Error(\"The 'index' argument cannot have type other than 'number' or 'string'. [\" + typeof index + \"] given.\");\n    }\n\n    if (typeof index === 'string') {\n      /**\n       * The `index` argument converted from `string` to `number`.\n       * @type {number}\n       */\n      var indexAsNumber = parseInt(index, 10);\n      /**\n       * Determines whether the `index` argument is a valid `number`\n       * after being converted from the `string` type.\n       * @type {boolean}\n       */\n\n      var isValidNumber = isFinite(indexAsNumber);\n\n      if (!isValidNumber) {\n        throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\" + index + \"] given.\");\n      } // Knowing that the converted `index` is a valid number,\n      // we can update the original argument's value.\n\n\n      index = indexAsNumber;\n    }\n\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    var params = swiper.params,\n        snapGrid = swiper.snapGrid,\n        slidesGrid = swiper.slidesGrid,\n        previousIndex = swiper.previousIndex,\n        activeIndex = swiper.activeIndex,\n        rtl = swiper.rtlTranslate,\n        wrapperEl = swiper.wrapperEl;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return false;\n    }\n\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n    if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n      swiper.emit('beforeSlideChangeStart');\n    }\n\n    var translate = -snapGrid[snapIndex]; // Update progress\n\n    swiper.updateProgress(translate); // Normalize slideIndex\n\n    if (params.normalizeSlideIndex) {\n      for (var i = 0; i < slidesGrid.length; i += 1) {\n        var normalizedTranslate = -Math.floor(translate * 100);\n        var normalizedGird = Math.floor(slidesGrid[i] * 100);\n        var normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGird) / 2) {\n            slideIndex = i;\n          } else if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext) {\n            slideIndex = i + 1;\n          }\n        } else if (normalizedTranslate >= normalizedGird) {\n          slideIndex = i;\n        }\n      }\n    } // Directions locks\n\n\n    if (swiper.initialized && slideIndex !== activeIndex) {\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n        if ((activeIndex || 0) !== slideIndex) return false;\n      }\n    }\n\n    var direction;\n    if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n      swiper.updateActiveIndex(slideIndex); // Update Height\n\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n\n      swiper.updateSlidesClasses();\n\n      if (params.effect !== 'slide') {\n        swiper.setTranslate(translate);\n      }\n\n      if (direction !== 'reset') {\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      }\n\n      return false;\n    }\n\n    if (params.cssMode) {\n      var isH = swiper.isHorizontal();\n      var t = -translate;\n\n      if (rtl) {\n        t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n      }\n\n      if (speed === 0) {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      } else {\n        // eslint-disable-next-line\n        if (wrapperEl.scrollTo) {\n          var _wrapperEl$scrollTo;\n\n          wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? 'left' : 'top'] = t, _wrapperEl$scrollTo.behavior = 'smooth', _wrapperEl$scrollTo));\n        } else {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        }\n      }\n\n      return true;\n    }\n\n    if (speed === 0) {\n      swiper.setTransition(0);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    } else {\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n\n      if (!swiper.animating) {\n        swiper.animating = true;\n\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n      }\n    }\n\n    return true;\n  }\n\n  function slideToLoop(index, speed, runCallbacks, internal) {\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var newIndex = index;\n\n    if (swiper.params.loop) {\n      newIndex += swiper.loopedSlides;\n    }\n\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideNext(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        animating = swiper.animating;\n    var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slidePrev(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    var params = swiper.params,\n        animating = swiper.animating,\n        snapGrid = swiper.snapGrid,\n        slidesGrid = swiper.slidesGrid,\n        rtlTranslate = swiper.rtlTranslate;\n\n    if (params.loop) {\n      if (animating && params.loopPreventsSlide) return false;\n      swiper.loopFix(); // eslint-disable-next-line\n\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n    function normalize(val) {\n      if (val < 0) return -Math.floor(Math.abs(val));\n      return Math.floor(val);\n    }\n\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function (val) {\n      return normalize(val);\n    });\n    snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\n      snapGrid.forEach(function (snap) {\n        if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n      });\n    }\n\n    var prevIndex;\n\n    if (typeof prevSnap !== 'undefined') {\n      prevIndex = slidesGrid.indexOf(prevSnap);\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    }\n\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideReset(speed, runCallbacks, internal) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n  }\n\n  /* eslint no-unused-vars: \"off\" */\n  function slideToClosest(speed, runCallbacks, internal, threshold) {\n    if (speed === void 0) {\n      speed = this.params.speed;\n    }\n\n    if (runCallbacks === void 0) {\n      runCallbacks = true;\n    }\n\n    if (threshold === void 0) {\n      threshold = 0.5;\n    }\n\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    if (translate >= swiper.snapGrid[snapIndex]) {\n      // The current translate is on or after the current snap index, so the choice\n      // is between the current index and the one after it.\n      var currentSnap = swiper.snapGrid[snapIndex];\n      var nextSnap = swiper.snapGrid[snapIndex + 1];\n\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n        index += swiper.params.slidesPerGroup;\n      }\n    } else {\n      // The current translate is before the current snap index, so the choice\n      // is between the current index and the one before it.\n      var prevSnap = swiper.snapGrid[snapIndex - 1];\n      var _currentSnap = swiper.snapGrid[snapIndex];\n\n      if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) {\n        index -= swiper.params.slidesPerGroup;\n      }\n    }\n\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n  }\n\n  function slideToClickedSlide() {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl;\n    var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n\n    if (params.loop) {\n      if (swiper.animating) return;\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n      if (params.centeredSlides) {\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n          nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n        nextTick(function () {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  var slide = {\n    slideTo: slideTo,\n    slideToLoop: slideToLoop,\n    slideNext: slideNext,\n    slidePrev: slidePrev,\n    slideReset: slideReset,\n    slideToClosest: slideToClosest,\n    slideToClickedSlide: slideToClickedSlide\n  };\n\n  function loopCreate() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\n\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n    var slides = $wrapperEl.children(\".\" + params.slideClass);\n\n    if (params.loopFillGroupWithBlank) {\n      var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n      if (blankSlidesNum !== params.slidesPerGroup) {\n        for (var i = 0; i < blankSlidesNum; i += 1) {\n          var blankNode = $(document.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n          $wrapperEl.append(blankNode);\n        }\n\n        slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n    }\n\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n\n    if (swiper.loopedSlides > slides.length) {\n      swiper.loopedSlides = slides.length;\n    }\n\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function (el, index) {\n      var slide = $(el);\n\n      if (index < swiper.loopedSlides) {\n        appendSlides.push(el);\n      }\n\n      if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n        prependSlides.push(el);\n      }\n\n      slide.attr('data-swiper-slide-index', index);\n    });\n\n    for (var _i = 0; _i < appendSlides.length; _i += 1) {\n      $wrapperEl.append($(appendSlides[_i].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n\n    for (var _i2 = prependSlides.length - 1; _i2 >= 0; _i2 -= 1) {\n      $wrapperEl.prepend($(prependSlides[_i2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    }\n  }\n\n  function loopFix() {\n    var swiper = this;\n    swiper.emit('beforeLoopFix');\n    var activeIndex = swiper.activeIndex,\n        slides = swiper.slides,\n        loopedSlides = swiper.loopedSlides,\n        allowSlidePrev = swiper.allowSlidePrev,\n        allowSlideNext = swiper.allowSlideNext,\n        snapGrid = swiper.snapGrid,\n        rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n    if (activeIndex < loopedSlides) {\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\n      newIndex += loopedSlides;\n      var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    } else if (activeIndex >= slides.length - loopedSlides) {\n      // Fix For Positive Oversliding\n      newIndex = -slides.length + activeIndex + loopedSlides;\n      newIndex += loopedSlides;\n\n      var _slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n      if (_slideChanged && diff !== 0) {\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n      }\n    }\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n  }\n\n  function loopDestroy() {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params,\n        slides = swiper.slides;\n    $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n    slides.removeAttr('data-swiper-slide-index');\n  }\n\n  var loop = {\n    loopCreate: loopCreate,\n    loopFix: loopFix,\n    loopDestroy: loopDestroy\n  };\n\n  function setGrabCursor(moving) {\n    var swiper = this;\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    var el = swiper.el;\n    el.style.cursor = 'move';\n    el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n    el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n    el.style.cursor = moving ? 'grabbing' : 'grab';\n  }\n\n  function unsetGrabCursor() {\n    var swiper = this;\n\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n      return;\n    }\n\n    swiper.el.style.cursor = '';\n  }\n\n  var grabCursor = {\n    setGrabCursor: setGrabCursor,\n    unsetGrabCursor: unsetGrabCursor\n  };\n\n  function appendSlide(slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.append(slides[i]);\n      }\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n  }\n\n  function prependSlide(slides) {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex;\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    var newActiveIndex = activeIndex + 1;\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var i = 0; i < slides.length; i += 1) {\n        if (slides[i]) $wrapperEl.prepend(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n    } else {\n      $wrapperEl.prepend(slides);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n\n  function addSlide(index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl,\n        params = swiper.params,\n        activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var baseLength = swiper.slides.length;\n\n    if (index <= 0) {\n      swiper.prependSlide(slides);\n      return;\n    }\n\n    if (index >= baseLength) {\n      swiper.appendSlide(slides);\n      return;\n    }\n\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n\n    for (var i = baseLength - 1; i >= index; i -= 1) {\n      var currentSlide = swiper.slides.eq(i);\n      currentSlide.remove();\n      slidesBuffer.unshift(currentSlide);\n    }\n\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (var _i = 0; _i < slides.length; _i += 1) {\n        if (slides[_i]) $wrapperEl.append(slides[_i]);\n      }\n\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else {\n      $wrapperEl.append(slides);\n    }\n\n    for (var _i2 = 0; _i2 < slidesBuffer.length; _i2 += 1) {\n      $wrapperEl.append(slidesBuffer[_i2]);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeSlide(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params,\n        $wrapperEl = swiper.$wrapperEl,\n        activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n\n    if (params.loop) {\n      activeIndexBuffer -= swiper.loopedSlides;\n      swiper.loopDestroy();\n      swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n    }\n\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n      for (var i = 0; i < slidesIndexes.length; i += 1) {\n        indexToRemove = slidesIndexes[i];\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      }\n\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n      indexToRemove = slidesIndexes;\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n      newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n\n    if (params.loop) {\n      swiper.loopCreate();\n    }\n\n    if (!(params.observer && swiper.support.observer)) {\n      swiper.update();\n    }\n\n    if (params.loop) {\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    } else {\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n  }\n\n  function removeAllSlides() {\n    var swiper = this;\n    var slidesIndexes = [];\n\n    for (var i = 0; i < swiper.slides.length; i += 1) {\n      slidesIndexes.push(i);\n    }\n\n    swiper.removeSlide(slidesIndexes);\n  }\n\n  var manipulation = {\n    appendSlide: appendSlide,\n    prependSlide: prependSlide,\n    addSlide: addSlide,\n    removeSlide: removeSlide,\n    removeAllSlides: removeAllSlides\n  };\n\n  function onTouchStart(event) {\n    var swiper = this;\n    var document = getDocument();\n    var window = getWindow();\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches;\n\n    if (swiper.animating && params.preventInteractionOnTransition) {\n      return;\n    }\n\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    var $targetEl = $(e.target);\n\n    if (params.touchEventsTarget === 'wrapper') {\n      if (!$targetEl.closest(swiper.wrapperEl).length) return;\n    }\n\n    data.isTouchEvent = e.type === 'touchstart';\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root componenet\n\n    var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {\n      $targetEl = $(event.path[0]);\n    }\n\n    if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\n      swiper.allowClick = true;\n      return;\n    }\n\n    if (params.swipeHandler) {\n      if (!$targetEl.closest(params.swipeHandler)[0]) return;\n    }\n\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n      if (edgeSwipeDetection === 'prevent') {\n        event.preventDefault();\n      } else {\n        return;\n      }\n    }\n\n    extend(data, {\n      isTouched: true,\n      isMoved: false,\n      allowTouchCallbacks: true,\n      isScrolling: undefined,\n      startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = now();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n\n    if (e.type !== 'touchstart') {\n      var preventDefault = true;\n      if ($targetEl.is(data.formElements)) preventDefault = false;\n\n      if (document.activeElement && $(document.activeElement).is(data.formElements) && document.activeElement !== $targetEl[0]) {\n        document.activeElement.blur();\n      }\n\n      var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n        e.preventDefault();\n      }\n    }\n\n    swiper.emit('touchStart', e);\n  }\n\n  function onTouchMove(event) {\n    var document = getDocument();\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches,\n        rtl = swiper.rtlTranslate;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (!data.isTouched) {\n      if (data.startMoving && data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && e.type !== 'touchmove') return;\n    var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n    var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n    if (e.preventedByNestedSwiper) {\n      touches.startX = pageX;\n      touches.startY = pageY;\n      return;\n    }\n\n    if (!swiper.allowTouchMove) {\n      // isMoved = true;\n      swiper.allowClick = false;\n\n      if (data.isTouched) {\n        extend(touches, {\n          startX: pageX,\n          startY: pageY,\n          currentX: pageX,\n          currentY: pageY\n        });\n        data.touchStartTime = now();\n      }\n\n      return;\n    }\n\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n      if (swiper.isVertical()) {\n        // Vertical\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n          data.isTouched = false;\n          data.isMoved = false;\n          return;\n        }\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n        return;\n      }\n    }\n\n    if (data.isTouchEvent && document.activeElement) {\n      if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n        data.isMoved = true;\n        swiper.allowClick = false;\n        return;\n      }\n    }\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchMove', e);\n    }\n\n    if (e.targetTouches && e.targetTouches.length > 1) return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;\n\n    if (typeof data.isScrolling === 'undefined') {\n      var touchAngle;\n\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n        data.isScrolling = false;\n      } else {\n        // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n      }\n    }\n\n    if (data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    if (typeof data.startMoving === 'undefined') {\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n        data.startMoving = true;\n      }\n    }\n\n    if (data.isScrolling) {\n      data.isTouched = false;\n      return;\n    }\n\n    if (!data.startMoving) {\n      return;\n    }\n\n    swiper.allowClick = false;\n\n    if (!params.cssMode && e.cancelable) {\n      e.preventDefault();\n    }\n\n    if (params.touchMoveStopPropagation && !params.nested) {\n      e.stopPropagation();\n    }\n\n    if (!data.isMoved) {\n      if (params.loop) {\n        swiper.loopFix();\n      }\n\n      data.startTranslate = swiper.getTranslate();\n      swiper.setTransition(0);\n\n      if (swiper.animating) {\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n      }\n\n      data.allowMomentumBounce = false; // Grab Cursor\n\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(true);\n      }\n\n      swiper.emit('sliderFirstMove', e);\n    }\n\n    swiper.emit('sliderMove', e);\n    data.isMoved = true;\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) diff = -diff;\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n    data.currentTranslate = diff + data.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n\n    if (params.touchReleaseOnEdges) {\n      resistanceRatio = 0;\n    }\n\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n    }\n\n    if (disableParentSwiper) {\n      e.preventedByNestedSwiper = true;\n    } // Directions locks\n\n\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n      data.currentTranslate = data.startTranslate;\n    }\n\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n      data.currentTranslate = data.startTranslate;\n    } // Threshold\n\n\n    if (params.threshold > 0) {\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n        if (!data.allowThresholdMove) {\n          data.allowThresholdMove = true;\n          touches.startX = touches.currentX;\n          touches.startY = touches.currentY;\n          data.currentTranslate = data.startTranslate;\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n          return;\n        }\n      } else {\n        data.currentTranslate = data.startTranslate;\n        return;\n      }\n    }\n\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n    if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    if (params.freeMode) {\n      // Velocity\n      if (data.velocities.length === 0) {\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n          time: data.touchStartTime\n        });\n      }\n\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n        time: now()\n      });\n    } // Update progress\n\n\n    swiper.updateProgress(data.currentTranslate); // Update translate\n\n    swiper.setTranslate(data.currentTranslate);\n  }\n\n  function onTouchEnd(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params,\n        touches = swiper.touches,\n        rtl = swiper.rtlTranslate,\n        $wrapperEl = swiper.$wrapperEl,\n        slidesGrid = swiper.slidesGrid,\n        snapGrid = swiper.snapGrid;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n\n    if (data.allowTouchCallbacks) {\n      swiper.emit('touchEnd', e);\n    }\n\n    data.allowTouchCallbacks = false;\n\n    if (!data.isTouched) {\n      if (data.isMoved && params.grabCursor) {\n        swiper.setGrabCursor(false);\n      }\n\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    } // Return Grab Cursor\n\n\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(false);\n    } // Time diff\n\n\n    var touchEndTime = now();\n    var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n    if (swiper.allowClick) {\n      swiper.updateClickedSlide(e);\n      swiper.emit('tap click', e);\n\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n        swiper.emit('doubleTap doubleClick', e);\n      }\n    }\n\n    data.lastClickTime = now();\n    nextTick(function () {\n      if (!swiper.destroyed) swiper.allowClick = true;\n    });\n\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      return;\n    }\n\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    var currentPos;\n\n    if (params.followFinger) {\n      currentPos = rtl ? swiper.translate : -swiper.translate;\n    } else {\n      currentPos = -data.currentTranslate;\n    }\n\n    if (params.cssMode) {\n      return;\n    }\n\n    if (params.freeMode) {\n      if (currentPos < -swiper.minTranslate()) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (currentPos > -swiper.maxTranslate()) {\n        if (swiper.slides.length < snapGrid.length) {\n          swiper.slideTo(snapGrid.length - 1);\n        } else {\n          swiper.slideTo(swiper.slides.length - 1);\n        }\n\n        return;\n      }\n\n      if (params.freeModeMomentum) {\n        if (data.velocities.length > 1) {\n          var lastMoveEvent = data.velocities.pop();\n          var velocityEvent = data.velocities.pop();\n          var distance = lastMoveEvent.position - velocityEvent.position;\n          var time = lastMoveEvent.time - velocityEvent.time;\n          swiper.velocity = distance / time;\n          swiper.velocity /= 2;\n\n          if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n            swiper.velocity = 0;\n          } // this implies that the user stopped moving a finger then released.\n          // There would be no events with distance zero, so the last event is stale.\n\n\n          if (time > 150 || now() - lastMoveEvent.time > 300) {\n            swiper.velocity = 0;\n          }\n        } else {\n          swiper.velocity = 0;\n        }\n\n        swiper.velocity *= params.freeModeMomentumVelocityRatio;\n        data.velocities.length = 0;\n        var momentumDuration = 1000 * params.freeModeMomentumRatio;\n        var momentumDistance = swiper.velocity * momentumDuration;\n        var newPosition = swiper.translate + momentumDistance;\n        if (rtl) newPosition = -newPosition;\n        var doBounce = false;\n        var afterBouncePosition;\n        var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n        var needsLoopFix;\n\n        if (newPosition < swiper.maxTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n              newPosition = swiper.maxTranslate() - bounceAmount;\n            }\n\n            afterBouncePosition = swiper.maxTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.maxTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (newPosition > swiper.minTranslate()) {\n          if (params.freeModeMomentumBounce) {\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\n              newPosition = swiper.minTranslate() + bounceAmount;\n            }\n\n            afterBouncePosition = swiper.minTranslate();\n            doBounce = true;\n            data.allowMomentumBounce = true;\n          } else {\n            newPosition = swiper.minTranslate();\n          }\n\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\n        } else if (params.freeModeSticky) {\n          var nextSlide;\n\n          for (var j = 0; j < snapGrid.length; j += 1) {\n            if (snapGrid[j] > -newPosition) {\n              nextSlide = j;\n              break;\n            }\n          }\n\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n            newPosition = snapGrid[nextSlide];\n          } else {\n            newPosition = snapGrid[nextSlide - 1];\n          }\n\n          newPosition = -newPosition;\n        }\n\n        if (needsLoopFix) {\n          swiper.once('transitionEnd', function () {\n            swiper.loopFix();\n          });\n        } // Fix duration\n\n\n        if (swiper.velocity !== 0) {\n          if (rtl) {\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n          } else {\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n          }\n\n          if (params.freeModeSticky) {\n            // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n            // It's easy to see this when simulating touch with mouse events. To fix this,\n            // limit single-slide swipes to the default slide duration. This also has the\n            // nice side effect of matching slide speed if the user stopped moving before\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n            // For faster swipes, also apply limits (albeit higher ones).\n            var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n            var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n            if (moveDistance < currentSlideSize) {\n              momentumDuration = params.speed;\n            } else if (moveDistance < 2 * currentSlideSize) {\n              momentumDuration = params.speed * 1.5;\n            } else {\n              momentumDuration = params.speed * 2.5;\n            }\n          }\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n\n        if (params.freeModeMomentumBounce && doBounce) {\n          swiper.updateProgress(afterBouncePosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(function () {\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n            swiper.emit('momentumBounce');\n            swiper.setTransition(params.speed);\n            setTimeout(function () {\n              swiper.setTranslate(afterBouncePosition);\n              $wrapperEl.transitionEnd(function () {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }, 0);\n          });\n        } else if (swiper.velocity) {\n          swiper.updateProgress(newPosition);\n          swiper.setTransition(momentumDuration);\n          swiper.setTranslate(newPosition);\n          swiper.transitionStart(true, swiper.swipeDirection);\n\n          if (!swiper.animating) {\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }\n        } else {\n          swiper.emit('_freeModeNoMomentumRelease');\n          swiper.updateProgress(newPosition);\n        }\n\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      } else if (params.freeMode) {\n        swiper.emit('_freeModeNoMomentumRelease');\n      }\n\n      if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      return;\n    } // Find current slide\n\n\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n\n    for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n      var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n      if (typeof slidesGrid[i + _increment] !== 'undefined') {\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n          stopIndex = i;\n          groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n        }\n      } else if (currentPos >= slidesGrid[i]) {\n        stopIndex = i;\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n      }\n    } // Find current slide size\n\n\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (timeDiff > params.longSwipesMs) {\n      // Long touches\n      if (!params.longSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      if (swiper.swipeDirection === 'next') {\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n      }\n    } else {\n      // Short swipes\n      if (!params.shortSwipes) {\n        swiper.slideTo(swiper.activeIndex);\n        return;\n      }\n\n      var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n      if (!isNavButtonTarget) {\n        if (swiper.swipeDirection === 'next') {\n          swiper.slideTo(stopIndex + increment);\n        }\n\n        if (swiper.swipeDirection === 'prev') {\n          swiper.slideTo(stopIndex);\n        }\n      } else if (e.target === swiper.navigation.nextEl) {\n        swiper.slideTo(stopIndex + increment);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  }\n\n  function onResize() {\n    var swiper = this;\n    var params = swiper.params,\n        el = swiper.el;\n    if (el && el.offsetWidth === 0) return; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Save locks\n\n\n    var allowSlideNext = swiper.allowSlideNext,\n        allowSlidePrev = swiper.allowSlidePrev,\n        snapGrid = swiper.snapGrid; // Disable locks on resize\n\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n      swiper.autoplay.run();\n    } // Return locks after resize\n\n\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n  }\n\n  function onClick(e) {\n    var swiper = this;\n\n    if (!swiper.allowClick) {\n      if (swiper.params.preventClicks) e.preventDefault();\n\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function onScroll() {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl,\n        rtlTranslate = swiper.rtlTranslate;\n    swiper.previousTranslate = swiper.translate;\n\n    if (swiper.isHorizontal()) {\n      if (rtlTranslate) {\n        swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft;\n      } else {\n        swiper.translate = -wrapperEl.scrollLeft;\n      }\n    } else {\n      swiper.translate = -wrapperEl.scrollTop;\n    } // eslint-disable-next-line\n\n\n    if (swiper.translate === -0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n    if (translatesDiff === 0) {\n      newProgress = 0;\n    } else {\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    }\n\n    if (newProgress !== swiper.progress) {\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    }\n\n    swiper.emit('setTranslate', swiper.translate, false);\n  }\n\n  var dummyEventAttached = false;\n\n  function dummyEventListener() {}\n\n  function attachEvents() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        touchEvents = swiper.touchEvents,\n        el = swiper.el,\n        wrapperEl = swiper.wrapperEl,\n        device = swiper.device,\n        support = swiper.support;\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n    if (params.cssMode) {\n      swiper.onScroll = onScroll.bind(swiper);\n    }\n\n    swiper.onClick = onClick.bind(swiper);\n    var capture = !!params.nested; // Touch Events\n\n    if (!support.touch && support.pointerEvents) {\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (support.touch) {\n        var passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.addEventListener(touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n          passive: false,\n          capture: capture\n        } : capture);\n        el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n\n        if (!dummyEventAttached) {\n          document.addEventListener('touchstart', dummyEventListener);\n          dummyEventAttached = true;\n        }\n      }\n\n      if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n        el.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.addEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.addEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    if (params.updateOnWindowResize) {\n      swiper.on(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n    } else {\n      swiper.on('observerUpdate', onResize, true);\n    }\n  }\n\n  function detachEvents() {\n    var swiper = this;\n    var document = getDocument();\n    var params = swiper.params,\n        touchEvents = swiper.touchEvents,\n        el = swiper.el,\n        wrapperEl = swiper.wrapperEl,\n        device = swiper.device,\n        support = swiper.support;\n    var capture = !!params.nested; // Touch Events\n\n    if (!support.touch && support.pointerEvents) {\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (support.touch) {\n        var passiveListener = touchEvents.start === 'onTouchStart' && support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n        if (touchEvents.cancel) {\n          el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n        }\n      }\n\n      if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {\n        el.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    } // Prevent Links Clicks\n\n\n    if (params.preventClicks || params.preventClicksPropagation) {\n      el.removeEventListener('click', swiper.onClick, true);\n    }\n\n    if (params.cssMode) {\n      wrapperEl.removeEventListener('scroll', swiper.onScroll);\n    } // Resize handler\n\n\n    swiper.off(device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);\n  }\n\n  var events = {\n    attachEvents: attachEvents,\n    detachEvents: detachEvents\n  };\n\n  function setBreakpoint() {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex,\n        initialized = swiper.initialized,\n        _swiper$loopedSlides = swiper.loopedSlides,\n        loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n        params = swiper.params,\n        $el = swiper.$el;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n    var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n\n    if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n      var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n\n      if (breakpointOnlyParams) {\n        ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n          var paramValue = breakpointOnlyParams[param];\n          if (typeof paramValue === 'undefined') return;\n\n          if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n            breakpointOnlyParams[param] = 'auto';\n          } else if (param === 'slidesPerView') {\n            breakpointOnlyParams[param] = parseFloat(paramValue);\n          } else {\n            breakpointOnlyParams[param] = parseInt(paramValue, 10);\n          }\n        });\n      }\n\n      var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      var wasMultiRow = params.slidesPerColumn > 1;\n      var isMultiRow = breakpointParams.slidesPerColumn > 1;\n\n      if (wasMultiRow && !isMultiRow) {\n        $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n        swiper.emitContainerClasses();\n      } else if (!wasMultiRow && isMultiRow) {\n        $el.addClass(params.containerModifierClass + \"multirow\");\n\n        if (breakpointParams.slidesPerColumnFill === 'column') {\n          $el.addClass(params.containerModifierClass + \"multirow-column\");\n        }\n\n        swiper.emitContainerClasses();\n      }\n\n      var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n\n      extend(swiper.params, breakpointParams);\n      extend(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n      });\n      swiper.currentBreakpoint = breakpoint;\n      swiper.emit('_beforeBreakpoint', breakpointParams);\n\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n      }\n\n      swiper.emit('breakpoint', breakpointParams);\n    }\n  }\n\n  function getBreakpoint(breakpoints, base, containerEl) {\n    if (base === void 0) {\n      base = 'window';\n    }\n\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\n    var breakpoint = false;\n    var window = getWindow();\n    var currentWidth = base === 'window' ? window.innerWidth : containerEl.clientWidth;\n    var currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n    var points = Object.keys(breakpoints).map(function (point) {\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\n        var minRatio = parseFloat(point.substr(1));\n        var value = currentHeight * minRatio;\n        return {\n          value: value,\n          point: point\n        };\n      }\n\n      return {\n        value: point,\n        point: point\n      };\n    });\n    points.sort(function (a, b) {\n      return parseInt(a.value, 10) - parseInt(b.value, 10);\n    });\n\n    for (var i = 0; i < points.length; i += 1) {\n      var _points$i = points[i],\n          point = _points$i.point,\n          value = _points$i.value;\n\n      if (value <= currentWidth) {\n        breakpoint = point;\n      }\n    }\n\n    return breakpoint || 'max';\n  }\n\n  var breakpoints = {\n    setBreakpoint: setBreakpoint,\n    getBreakpoint: getBreakpoint\n  };\n\n  function prepareClasses(entries, prefix) {\n    var resultClasses = [];\n    entries.forEach(function (item) {\n      if (typeof item === 'object') {\n        Object.keys(item).forEach(function (classNames) {\n          if (item[classNames]) {\n            resultClasses.push(prefix + classNames);\n          }\n        });\n      } else if (typeof item === 'string') {\n        resultClasses.push(prefix + item);\n      }\n    });\n    return resultClasses;\n  }\n\n  function addClasses() {\n    var swiper = this;\n    var classNames = swiper.classNames,\n        params = swiper.params,\n        rtl = swiper.rtl,\n        $el = swiper.$el,\n        device = swiper.device,\n        support = swiper.support; // prettier-ignore\n\n    var suffixes = prepareClasses(['initialized', params.direction, {\n      'pointer-events': support.pointerEvents && !support.touch\n    }, {\n      'free-mode': params.freeMode\n    }, {\n      'autoheight': params.autoHeight\n    }, {\n      'rtl': rtl\n    }, {\n      'multirow': params.slidesPerColumn > 1\n    }, {\n      'multirow-column': params.slidesPerColumn > 1 && params.slidesPerColumnFill === 'column'\n    }, {\n      'android': device.android\n    }, {\n      'ios': device.ios\n    }, {\n      'css-mode': params.cssMode\n    }], params.containerModifierClass);\n    classNames.push.apply(classNames, suffixes);\n    $el.addClass([].concat(classNames).join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  function removeClasses() {\n    var swiper = this;\n    var $el = swiper.$el,\n        classNames = swiper.classNames;\n    $el.removeClass(classNames.join(' '));\n    swiper.emitContainerClasses();\n  }\n\n  var classes = {\n    addClasses: addClasses,\n    removeClasses: removeClasses\n  };\n\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var window = getWindow();\n    var image;\n\n    function onReady() {\n      if (callback) callback();\n    }\n\n    var isPicture = $(imageEl).parent('picture')[0];\n\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n      if (src) {\n        image = new window.Image();\n        image.onload = onReady;\n        image.onerror = onReady;\n\n        if (sizes) {\n          image.sizes = sizes;\n        }\n\n        if (srcset) {\n          image.srcset = srcset;\n        }\n\n        if (src) {\n          image.src = src;\n        }\n      } else {\n        onReady();\n      }\n    } else {\n      // image already loaded...\n      onReady();\n    }\n  }\n\n  function preloadImages() {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find('img');\n\n    function onReady() {\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n      if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n        if (swiper.params.updateOnImagesReady) swiper.update();\n        swiper.emit('imagesReady');\n      }\n    }\n\n    for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n      var imageEl = swiper.imagesToLoad[i];\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n    }\n  }\n\n  var images = {\n    loadImage: loadImage,\n    preloadImages: preloadImages\n  };\n\n  function checkOverflow() {\n    var swiper = this;\n    var params = swiper.params;\n    var wasLocked = swiper.isLocked;\n    var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n\n    if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n      swiper.isLocked = lastSlidePosition <= swiper.size;\n    } else {\n      swiper.isLocked = swiper.snapGrid.length === 1;\n    }\n\n    swiper.allowSlideNext = !swiper.isLocked;\n    swiper.allowSlidePrev = !swiper.isLocked; // events\n\n    if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n    if (wasLocked && wasLocked !== swiper.isLocked) {\n      swiper.isEnd = false;\n      if (swiper.navigation) swiper.navigation.update();\n    }\n  }\n\n  var checkOverflow$1 = {\n    checkOverflow: checkOverflow\n  };\n\n  var defaults = {\n    init: true,\n    direction: 'horizontal',\n    touchEventsTarget: 'container',\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: false,\n    nested: false,\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Free mode\n    freeMode: false,\n    freeModeMomentum: true,\n    freeModeMomentumRatio: 1,\n    freeModeMomentumBounce: true,\n    freeModeMomentumBounceRatio: 1,\n    freeModeMomentumVelocityRatio: 1,\n    freeModeSticky: false,\n    freeModeMinimumVelocity: 0.02,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: 'slide',\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: 'window',\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerColumn: 1,\n    slidesPerColumnFill: 'column',\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: false,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    watchSlidesVisibility: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopFillGroupWithBlank: false,\n    loopPreventsSlide: true,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: 'swiper-no-swiping',\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    // NS\n    containerModifierClass: 'swiper-container-',\n    // NEW\n    slideClass: 'swiper-slide',\n    slideBlankClass: 'swiper-slide-invisible-blank',\n    slideActiveClass: 'swiper-slide-active',\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n    slideVisibleClass: 'swiper-slide-visible',\n    slideDuplicateClass: 'swiper-slide-duplicate',\n    slideNextClass: 'swiper-slide-next',\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n    slidePrevClass: 'swiper-slide-prev',\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n    wrapperClass: 'swiper-wrapper',\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n  };\n\n  var prototypes = {\n    modular: modular,\n    eventsEmitter: eventsEmitter,\n    update: update,\n    translate: translate,\n    transition: transition,\n    slide: slide,\n    loop: loop,\n    grabCursor: grabCursor,\n    manipulation: manipulation,\n    events: events,\n    breakpoints: breakpoints,\n    checkOverflow: checkOverflow$1,\n    classes: classes,\n    images: images\n  };\n  var extendedDefaults = {};\n\n  var Swiper = /*#__PURE__*/function () {\n    function Swiper() {\n      var el;\n      var params;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n        params = args[0];\n      } else {\n        el = args[0];\n        params = args[1];\n      }\n\n      if (!params) params = {};\n      params = extend({}, params);\n      if (el && !params.el) params.el = el;\n\n      if (params.el && $(params.el).length > 1) {\n        var swipers = [];\n        $(params.el).each(function (containerEl) {\n          var newParams = extend({}, params, {\n            el: containerEl\n          });\n          swipers.push(new Swiper(newParams));\n        });\n        return swipers;\n      } // Swiper Instance\n\n\n      var swiper = this;\n      swiper.__swiper__ = true;\n      swiper.support = getSupport();\n      swiper.device = getDevice({\n        userAgent: params.userAgent\n      });\n      swiper.browser = getBrowser();\n      swiper.eventsListeners = {};\n      swiper.eventsAnyListeners = [];\n\n      if (typeof swiper.modules === 'undefined') {\n        swiper.modules = {};\n      }\n\n      Object.keys(swiper.modules).forEach(function (moduleName) {\n        var module = swiper.modules[moduleName];\n\n        if (module.params) {\n          var moduleParamName = Object.keys(module.params)[0];\n          var moduleParams = module.params[moduleParamName];\n          if (typeof moduleParams !== 'object' || moduleParams === null) return;\n          if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n\n          if (params[moduleParamName] === true) {\n            params[moduleParamName] = {\n              enabled: true\n            };\n          }\n\n          if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n            params[moduleParamName].enabled = true;\n          }\n\n          if (!params[moduleParamName]) params[moduleParamName] = {\n            enabled: false\n          };\n        }\n      }); // Extend defaults with modules params\n\n      var swiperParams = extend({}, defaults);\n      swiper.useParams(swiperParams); // Extend defaults with passed params\n\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\n      swiper.originalParams = extend({}, swiper.params);\n      swiper.passedParams = extend({}, params); // add event listeners\n\n      if (swiper.params && swiper.params.on) {\n        Object.keys(swiper.params.on).forEach(function (eventName) {\n          swiper.on(eventName, swiper.params.on[eventName]);\n        });\n      }\n\n      if (swiper.params && swiper.params.onAny) {\n        swiper.onAny(swiper.params.onAny);\n      } // Save Dom lib\n\n\n      swiper.$ = $; // Extend Swiper\n\n      extend(swiper, {\n        el: el,\n        // Classes\n        classNames: [],\n        // Slides\n        slides: $(),\n        slidesGrid: [],\n        snapGrid: [],\n        slidesSizesGrid: [],\n        // isDirection\n        isHorizontal: function isHorizontal() {\n          return swiper.params.direction === 'horizontal';\n        },\n        isVertical: function isVertical() {\n          return swiper.params.direction === 'vertical';\n        },\n        // Indexes\n        activeIndex: 0,\n        realIndex: 0,\n        //\n        isBeginning: true,\n        isEnd: false,\n        // Props\n        translate: 0,\n        previousTranslate: 0,\n        progress: 0,\n        velocity: 0,\n        animating: false,\n        // Locks\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev,\n        // Touch Events\n        touchEvents: function touchEvents() {\n          var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n          var desktop = ['mousedown', 'mousemove', 'mouseup'];\n\n          if (swiper.support.pointerEvents) {\n            desktop = ['pointerdown', 'pointermove', 'pointerup'];\n          }\n\n          swiper.touchEventsTouch = {\n            start: touch[0],\n            move: touch[1],\n            end: touch[2],\n            cancel: touch[3]\n          };\n          swiper.touchEventsDesktop = {\n            start: desktop[0],\n            move: desktop[1],\n            end: desktop[2]\n          };\n          return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n        }(),\n        touchEventsData: {\n          isTouched: undefined,\n          isMoved: undefined,\n          allowTouchCallbacks: undefined,\n          touchStartTime: undefined,\n          isScrolling: undefined,\n          currentTranslate: undefined,\n          startTranslate: undefined,\n          allowThresholdMove: undefined,\n          // Form elements to match\n          formElements: 'input, select, option, textarea, button, video, label',\n          // Last click time\n          lastClickTime: now(),\n          clickTimeout: undefined,\n          // Velocities\n          velocities: [],\n          allowMomentumBounce: undefined,\n          isTouchEvent: undefined,\n          startMoving: undefined\n        },\n        // Clicks\n        allowClick: true,\n        // Touches\n        allowTouchMove: swiper.params.allowTouchMove,\n        touches: {\n          startX: 0,\n          startY: 0,\n          currentX: 0,\n          currentY: 0,\n          diff: 0\n        },\n        // Images\n        imagesToLoad: [],\n        imagesLoaded: 0\n      }); // Install Modules\n\n      swiper.useModules();\n      swiper.emit('_swiper'); // Init\n\n      if (swiper.params.init) {\n        swiper.init();\n      } // Return app instance\n\n\n      return swiper;\n    }\n\n    var _proto = Swiper.prototype;\n\n    _proto.setProgress = function setProgress(progress, speed) {\n      var swiper = this;\n      progress = Math.min(Math.max(progress, 0), 1);\n      var min = swiper.minTranslate();\n      var max = swiper.maxTranslate();\n      var current = (max - min) * progress + min;\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    };\n\n    _proto.emitContainerClasses = function emitContainerClasses() {\n      var swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      var classes = swiper.el.className.split(' ').filter(function (className) {\n        return className.indexOf('swiper-container') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n      });\n      swiper.emit('_containerClasses', classes.join(' '));\n    };\n\n    _proto.getSlideClasses = function getSlideClasses(slideEl) {\n      var swiper = this;\n      return slideEl.className.split(' ').filter(function (className) {\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n      }).join(' ');\n    };\n\n    _proto.emitSlidesClasses = function emitSlidesClasses() {\n      var swiper = this;\n      if (!swiper.params._emitClasses || !swiper.el) return;\n      var updates = [];\n      swiper.slides.each(function (slideEl) {\n        var classNames = swiper.getSlideClasses(slideEl);\n        updates.push({\n          slideEl: slideEl,\n          classNames: classNames\n        });\n        swiper.emit('_slideClass', slideEl, classNames);\n      });\n      swiper.emit('_slideClasses', updates);\n    };\n\n    _proto.slidesPerViewDynamic = function slidesPerViewDynamic() {\n      var swiper = this;\n      var params = swiper.params,\n          slides = swiper.slides,\n          slidesGrid = swiper.slidesGrid,\n          swiperSize = swiper.size,\n          activeIndex = swiper.activeIndex;\n      var spv = 1;\n\n      if (params.centeredSlides) {\n        var slideSize = slides[activeIndex].swiperSlideSize;\n        var breakLoop;\n\n        for (var i = activeIndex + 1; i < slides.length; i += 1) {\n          if (slides[i] && !breakLoop) {\n            slideSize += slides[i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n\n        for (var _i = activeIndex - 1; _i >= 0; _i -= 1) {\n          if (slides[_i] && !breakLoop) {\n            slideSize += slides[_i].swiperSlideSize;\n            spv += 1;\n            if (slideSize > swiperSize) breakLoop = true;\n          }\n        }\n      } else {\n        for (var _i2 = activeIndex + 1; _i2 < slides.length; _i2 += 1) {\n          if (slidesGrid[_i2] - slidesGrid[activeIndex] < swiperSize) {\n            spv += 1;\n          }\n        }\n      }\n\n      return spv;\n    };\n\n    _proto.update = function update() {\n      var swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      var snapGrid = swiper.snapGrid,\n          params = swiper.params; // Breakpoints\n\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      function setTranslate() {\n        var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n        var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n        swiper.setTranslate(newTranslate);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n\n      var translated;\n\n      if (swiper.params.freeMode) {\n        setTranslate();\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      } else {\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n        } else {\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n\n        if (!translated) {\n          setTranslate();\n        }\n      }\n\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n\n      swiper.emit('update');\n    };\n\n    _proto.changeDirection = function changeDirection(newDirection, needUpdate) {\n      if (needUpdate === void 0) {\n        needUpdate = true;\n      }\n\n      var swiper = this;\n      var currentDirection = swiper.params.direction;\n\n      if (!newDirection) {\n        // eslint-disable-next-line\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n      }\n\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n        return swiper;\n      }\n\n      swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\n      swiper.emitContainerClasses();\n      swiper.params.direction = newDirection;\n      swiper.slides.each(function (slideEl) {\n        if (newDirection === 'vertical') {\n          slideEl.style.width = '';\n        } else {\n          slideEl.style.height = '';\n        }\n      });\n      swiper.emit('changeDirection');\n      if (needUpdate) swiper.update();\n      return swiper;\n    };\n\n    _proto.mount = function mount(el) {\n      var swiper = this;\n      if (swiper.mounted) return true; // Find el\n\n      var $el = $(el || swiper.params.el);\n      el = $el[0];\n\n      if (!el) {\n        return false;\n      }\n\n      el.swiper = swiper; // Find Wrapper\n\n      var $wrapperEl;\n\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        $wrapperEl = $(el.shadowRoot.querySelector(\".\" + swiper.params.wrapperClass)); // Children needs to return slot items\n\n        $wrapperEl.children = function (options) {\n          return $el.children(options);\n        };\n      } else {\n        $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\n      }\n\n      extend(swiper, {\n        $el: $el,\n        el: el,\n        $wrapperEl: $wrapperEl,\n        wrapperEl: $wrapperEl[0],\n        mounted: true,\n        // RTL\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n      });\n      return true;\n    };\n\n    _proto.init = function init(el) {\n      var swiper = this;\n      if (swiper.initialized) return swiper;\n      var mounted = swiper.mount(el);\n      if (mounted === false) return swiper;\n      swiper.emit('beforeInit'); // Set breakpoint\n\n      if (swiper.params.breakpoints) {\n        swiper.setBreakpoint();\n      } // Add Classes\n\n\n      swiper.addClasses(); // Create loop\n\n      if (swiper.params.loop) {\n        swiper.loopCreate();\n      } // Update size\n\n\n      swiper.updateSize(); // Update slides\n\n      swiper.updateSlides();\n\n      if (swiper.params.watchOverflow) {\n        swiper.checkOverflow();\n      } // Set Grab Cursor\n\n\n      if (swiper.params.grabCursor) {\n        swiper.setGrabCursor();\n      }\n\n      if (swiper.params.preloadImages) {\n        swiper.preloadImages();\n      } // Slide To Initial Slide\n\n\n      if (swiper.params.loop) {\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n      } else {\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n      } // Attach events\n\n\n      swiper.attachEvents(); // Init Flag\n\n      swiper.initialized = true; // Emit\n\n      swiper.emit('init');\n      swiper.emit('afterInit');\n      return swiper;\n    };\n\n    _proto.destroy = function destroy(deleteInstance, cleanStyles) {\n      if (deleteInstance === void 0) {\n        deleteInstance = true;\n      }\n\n      if (cleanStyles === void 0) {\n        cleanStyles = true;\n      }\n\n      var swiper = this;\n      var params = swiper.params,\n          $el = swiper.$el,\n          $wrapperEl = swiper.$wrapperEl,\n          slides = swiper.slides;\n\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n        return null;\n      }\n\n      swiper.emit('beforeDestroy'); // Init Flag\n\n      swiper.initialized = false; // Detach events\n\n      swiper.detachEvents(); // Destroy loop\n\n      if (params.loop) {\n        swiper.loopDestroy();\n      } // Cleanup styles\n\n\n      if (cleanStyles) {\n        swiper.removeClasses();\n        $el.removeAttr('style');\n        $wrapperEl.removeAttr('style');\n\n        if (slides && slides.length) {\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n        }\n      }\n\n      swiper.emit('destroy'); // Detach emitter events\n\n      Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n        swiper.off(eventName);\n      });\n\n      if (deleteInstance !== false) {\n        swiper.$el[0].swiper = null;\n        deleteProps(swiper);\n      }\n\n      swiper.destroyed = true;\n      return null;\n    };\n\n    Swiper.extendDefaults = function extendDefaults(newDefaults) {\n      extend(extendedDefaults, newDefaults);\n    };\n\n    Swiper.installModule = function installModule(module) {\n      if (!Swiper.prototype.modules) Swiper.prototype.modules = {};\n      var name = module.name || Object.keys(Swiper.prototype.modules).length + \"_\" + now();\n      Swiper.prototype.modules[name] = module;\n    };\n\n    Swiper.use = function use(module) {\n      if (Array.isArray(module)) {\n        module.forEach(function (m) {\n          return Swiper.installModule(m);\n        });\n        return Swiper;\n      }\n\n      Swiper.installModule(module);\n      return Swiper;\n    };\n\n    _createClass(Swiper, null, [{\n      key: \"extendedDefaults\",\n      get: function get() {\n        return extendedDefaults;\n      }\n    }, {\n      key: \"defaults\",\n      get: function get() {\n        return defaults;\n      }\n    }]);\n\n    return Swiper;\n  }();\n\n  Object.keys(prototypes).forEach(function (prototypeGroup) {\n    Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n    });\n  });\n  Swiper.use([Resize, Observer$1]);\n\n  var Virtual = {\n    update: function update(force) {\n      var swiper = this;\n      var _swiper$params = swiper.params,\n          slidesPerView = _swiper$params.slidesPerView,\n          slidesPerGroup = _swiper$params.slidesPerGroup,\n          centeredSlides = _swiper$params.centeredSlides;\n      var _swiper$params$virtua = swiper.params.virtual,\n          addSlidesBefore = _swiper$params$virtua.addSlidesBefore,\n          addSlidesAfter = _swiper$params$virtua.addSlidesAfter;\n      var _swiper$virtual = swiper.virtual,\n          previousFrom = _swiper$virtual.from,\n          previousTo = _swiper$virtual.to,\n          slides = _swiper$virtual.slides,\n          previousSlidesGrid = _swiper$virtual.slidesGrid,\n          renderSlide = _swiper$virtual.renderSlide,\n          previousOffset = _swiper$virtual.offset;\n      swiper.updateActiveIndex();\n      var activeIndex = swiper.activeIndex || 0;\n      var offsetProp;\n      if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n      var slidesAfter;\n      var slidesBefore;\n\n      if (centeredSlides) {\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      } else {\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n        slidesBefore = slidesPerGroup + addSlidesBefore;\n      }\n\n      var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n      var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n      var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n      extend(swiper.virtual, {\n        from: from,\n        to: to,\n        offset: offset,\n        slidesGrid: swiper.slidesGrid\n      });\n\n      function onRendered() {\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n\n        if (swiper.lazy && swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      }\n\n      if (previousFrom === from && previousTo === to && !force) {\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n          swiper.slides.css(offsetProp, offset + \"px\");\n        }\n\n        swiper.updateProgress();\n        return;\n      }\n\n      if (swiper.params.virtual.renderExternal) {\n        swiper.params.virtual.renderExternal.call(swiper, {\n          offset: offset,\n          from: from,\n          to: to,\n          slides: function getSlides() {\n            var slidesToRender = [];\n\n            for (var i = from; i <= to; i += 1) {\n              slidesToRender.push(slides[i]);\n            }\n\n            return slidesToRender;\n          }()\n        });\n\n        if (swiper.params.virtual.renderExternalUpdate) {\n          onRendered();\n        }\n\n        return;\n      }\n\n      var prependIndexes = [];\n      var appendIndexes = [];\n\n      if (force) {\n        swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\n      } else {\n        for (var i = previousFrom; i <= previousTo; i += 1) {\n          if (i < from || i > to) {\n            swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\").remove();\n          }\n        }\n      }\n\n      for (var _i = 0; _i < slides.length; _i += 1) {\n        if (_i >= from && _i <= to) {\n          if (typeof previousTo === 'undefined' || force) {\n            appendIndexes.push(_i);\n          } else {\n            if (_i > previousTo) appendIndexes.push(_i);\n            if (_i < previousFrom) prependIndexes.push(_i);\n          }\n        }\n      }\n\n      appendIndexes.forEach(function (index) {\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\n      });\n      prependIndexes.sort(function (a, b) {\n        return b - a;\n      }).forEach(function (index) {\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n      });\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + \"px\");\n      onRendered();\n    },\n    renderSlide: function renderSlide(slide, index) {\n      var swiper = this;\n      var params = swiper.params.virtual;\n\n      if (params.cache && swiper.virtual.cache[index]) {\n        return swiper.virtual.cache[index];\n      }\n\n      var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(\"<div class=\\\"\" + swiper.params.slideClass + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\");\n      if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n      if (params.cache) swiper.virtual.cache[index] = $slideEl;\n      return $slideEl;\n    },\n    appendSlide: function appendSlide(slides) {\n      var swiper = this;\n\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.push(slides[i]);\n        }\n      } else {\n        swiper.virtual.slides.push(slides);\n      }\n\n      swiper.virtual.update(true);\n    },\n    prependSlide: function prependSlide(slides) {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var newActiveIndex = activeIndex + 1;\n      var numberOfNewSlides = 1;\n\n      if (Array.isArray(slides)) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n        }\n\n        newActiveIndex = activeIndex + slides.length;\n        numberOfNewSlides = slides.length;\n      } else {\n        swiper.virtual.slides.unshift(slides);\n      }\n\n      if (swiper.params.virtual.cache) {\n        var cache = swiper.virtual.cache;\n        var newCache = {};\n        Object.keys(cache).forEach(function (cachedIndex) {\n          var $cachedEl = cache[cachedIndex];\n          var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n          if (cachedElIndex) {\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n          }\n\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n        });\n        swiper.virtual.cache = newCache;\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(newActiveIndex, 0);\n    },\n    removeSlide: function removeSlide(slidesIndexes) {\n      var swiper = this;\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n      var activeIndex = swiper.activeIndex;\n\n      if (Array.isArray(slidesIndexes)) {\n        for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes[i]];\n          }\n\n          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n      } else {\n        swiper.virtual.slides.splice(slidesIndexes, 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes];\n        }\n\n        if (slidesIndexes < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(activeIndex, 0);\n    },\n    removeAllSlides: function removeAllSlides() {\n      var swiper = this;\n      swiper.virtual.slides = [];\n\n      if (swiper.params.virtual.cache) {\n        swiper.virtual.cache = {};\n      }\n\n      swiper.virtual.update(true);\n      swiper.slideTo(0, 0);\n    }\n  };\n  var Virtual$1 = {\n    name: 'virtual',\n    params: {\n      virtual: {\n        enabled: false,\n        slides: [],\n        cache: true,\n        renderSlide: null,\n        renderExternal: null,\n        renderExternalUpdate: true,\n        addSlidesBefore: 0,\n        addSlidesAfter: 0\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        virtual: _extends({}, Virtual, {\n          slides: swiper.params.virtual.slides,\n          cache: {}\n        })\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\n        var overwriteParams = {\n          watchSlidesProgress: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n\n        if (!swiper.params.initialSlide) {\n          swiper.virtual.update();\n        }\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.virtual.update();\n      }\n    }\n  };\n\n  var Keyboard = {\n    handle: function handle(event) {\n      var swiper = this;\n      var window = getWindow();\n      var document = getDocument();\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      var kc = e.keyCode || e.charCode;\n      var pageUpDown = swiper.params.keyboard.pageUpDown;\n      var isPageUp = pageUpDown && kc === 33;\n      var isPageDown = pageUpDown && kc === 34;\n      var isArrowLeft = kc === 37;\n      var isArrowRight = kc === 39;\n      var isArrowUp = kc === 38;\n      var isArrowDown = kc === 40; // Directions locks\n\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n        return false;\n      }\n\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n        return false;\n      }\n\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n        return undefined;\n      }\n\n      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n        return undefined;\n      }\n\n      if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n        var inView = false; // Check that swiper should be inside of visible area of window\n\n        if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) {\n          return undefined;\n        }\n\n        var $el = swiper.$el;\n        var swiperWidth = $el[0].clientWidth;\n        var swiperHeight = $el[0].clientHeight;\n        var windowWidth = window.innerWidth;\n        var windowHeight = window.innerHeight;\n        var swiperOffset = swiper.$el.offset();\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n        var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n        for (var i = 0; i < swiperCoord.length; i += 1) {\n          var point = swiperCoord[i];\n\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n            inView = true;\n          }\n        }\n\n        if (!inView) return undefined;\n      }\n\n      if (swiper.isHorizontal()) {\n        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n        if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n      } else {\n        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n          if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        }\n\n        if (isPageDown || isArrowDown) swiper.slideNext();\n        if (isPageUp || isArrowUp) swiper.slidePrev();\n      }\n\n      swiper.emit('keyPress', kc);\n      return undefined;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var document = getDocument();\n      if (swiper.keyboard.enabled) return;\n      $(document).on('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var document = getDocument();\n      if (!swiper.keyboard.enabled) return;\n      $(document).off('keydown', swiper.keyboard.handle);\n      swiper.keyboard.enabled = false;\n    }\n  };\n  var Keyboard$1 = {\n    name: 'keyboard',\n    params: {\n      keyboard: {\n        enabled: false,\n        onlyInViewport: true,\n        pageUpDown: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        keyboard: _extends({\n          enabled: false\n        }, Keyboard)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.keyboard.enabled) {\n          swiper.keyboard.enable();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.keyboard.enabled) {\n          swiper.keyboard.disable();\n        }\n      }\n    }\n  };\n\n  function isEventSupported() {\n    var document = getDocument();\n    var eventName = 'onwheel';\n    var isSupported = (eventName in document);\n\n    if (!isSupported) {\n      var element = document.createElement('div');\n      element.setAttribute(eventName, 'return;');\n      isSupported = typeof element[eventName] === 'function';\n    }\n\n    if (!isSupported && document.implementation && document.implementation.hasFeature && // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true) {\n      // This is the only way to test support for the `wheel` event in IE9+.\n      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n    }\n\n    return isSupported;\n  }\n\n  var Mousewheel = {\n    lastScrollTime: now(),\n    lastEventBeforeSnap: undefined,\n    recentWheelEvents: [],\n    event: function event() {\n      var window = getWindow();\n      if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n      return isEventSupported() ? 'wheel' : 'mousewheel';\n    },\n    normalize: function normalize(e) {\n      // Reasonable defaults\n      var PIXEL_STEP = 10;\n      var LINE_HEIGHT = 40;\n      var PAGE_HEIGHT = 800;\n      var sX = 0;\n      var sY = 0; // spinX, spinY\n\n      var pX = 0;\n      var pY = 0; // pixelX, pixelY\n      // Legacy\n\n      if ('detail' in e) {\n        sY = e.detail;\n      }\n\n      if ('wheelDelta' in e) {\n        sY = -e.wheelDelta / 120;\n      }\n\n      if ('wheelDeltaY' in e) {\n        sY = -e.wheelDeltaY / 120;\n      }\n\n      if ('wheelDeltaX' in e) {\n        sX = -e.wheelDeltaX / 120;\n      } // side scrolling on FF with DOMMouseScroll\n\n\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n        sX = sY;\n        sY = 0;\n      }\n\n      pX = sX * PIXEL_STEP;\n      pY = sY * PIXEL_STEP;\n\n      if ('deltaY' in e) {\n        pY = e.deltaY;\n      }\n\n      if ('deltaX' in e) {\n        pX = e.deltaX;\n      }\n\n      if (e.shiftKey && !pX) {\n        // if user scrolls with shift he wants horizontal scroll\n        pX = pY;\n        pY = 0;\n      }\n\n      if ((pX || pY) && e.deltaMode) {\n        if (e.deltaMode === 1) {\n          // delta in LINE units\n          pX *= LINE_HEIGHT;\n          pY *= LINE_HEIGHT;\n        } else {\n          // delta in PAGE units\n          pX *= PAGE_HEIGHT;\n          pY *= PAGE_HEIGHT;\n        }\n      } // Fall-back if spin cannot be determined\n\n\n      if (pX && !sX) {\n        sX = pX < 1 ? -1 : 1;\n      }\n\n      if (pY && !sY) {\n        sY = pY < 1 ? -1 : 1;\n      }\n\n      return {\n        spinX: sX,\n        spinY: sY,\n        pixelX: pX,\n        pixelY: pY\n      };\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      var swiper = this;\n      swiper.mouseEntered = true;\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      var swiper = this;\n      swiper.mouseEntered = false;\n    },\n    handle: function handle(event) {\n      var e = event;\n      var disableParentSwiper = true;\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (swiper.params.cssMode) {\n        e.preventDefault();\n      }\n\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n      var delta = 0;\n      var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n      var data = Mousewheel.normalize(e);\n\n      if (params.forceToAxis) {\n        if (swiper.isHorizontal()) {\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n      } else {\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n      }\n\n      if (delta === 0) return true;\n      if (params.invert) delta = -delta; // Get the scroll positions\n\n      var positions = swiper.getTranslate() + delta * params.sensitivity;\n      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n      //     the disableParentSwiper will be true.\n      // When loop is false:\n      //     if the scroll positions is not on edge,\n      //     then the disableParentSwiper will be true.\n      //     if the scroll on edge positions,\n      //     then the disableParentSwiper will be false.\n\n      disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n      if (!swiper.params.freeMode) {\n        // Register the new event in a variable which stores the relevant data\n        var newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta),\n          raw: event\n        }; // Keep the most recent events\n\n        var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n        if (recentWheelEvents.length >= 2) {\n          recentWheelEvents.shift(); // only store the last N events\n        }\n\n        var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n        //   If direction has changed or\n        //   if the scroll is quicker than the previous one:\n        //     Animate the slider.\n        // Else (this is the first time the wheel is moved):\n        //     Animate the slider.\n\n        if (prevEvent) {\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n            swiper.mousewheel.animateSlider(newEvent);\n          }\n        } else {\n          swiper.mousewheel.animateSlider(newEvent);\n        } // If it's time to release the scroll:\n        //   Return now so you don't hit the preventDefault.\n\n\n        if (swiper.mousewheel.releaseScroll(newEvent)) {\n          return true;\n        }\n      } else {\n        // Freemode or scrollContainer:\n        // If we recently snapped after a momentum scroll, then ignore wheel events\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n        // or if it's a new scroll (larger delta or inverse sign as last event before\n        // an end-of-momentum snap).\n        var _newEvent = {\n          time: now(),\n          delta: Math.abs(delta),\n          direction: Math.sign(delta)\n        };\n        var lastEventBeforeSnap = swiper.mousewheel.lastEventBeforeSnap;\n        var ignoreWheelEvents = lastEventBeforeSnap && _newEvent.time < lastEventBeforeSnap.time + 500 && _newEvent.delta <= lastEventBeforeSnap.delta && _newEvent.direction === lastEventBeforeSnap.direction;\n\n        if (!ignoreWheelEvents) {\n          swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n          if (swiper.params.loop) {\n            swiper.loopFix();\n          }\n\n          var position = swiper.getTranslate() + delta * params.sensitivity;\n          var wasBeginning = swiper.isBeginning;\n          var wasEnd = swiper.isEnd;\n          if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n          if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n          swiper.setTransition(0);\n          swiper.setTranslate(position);\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n            swiper.updateSlidesClasses();\n          }\n\n          if (swiper.params.freeModeSticky) {\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\n            // 1. do all N events have decreasing or same (absolute value) delta?\n            // 2. did all N events arrive in the last M (M=500?) msecs?\n            // 3. does the earliest event have an (absolute value) delta that's\n            //    at least P (P=1?) larger than the most recent event's delta?\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n            // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n            // Snap immediately and ignore remaining wheel events in this scroll.\n            // See comment above for \"remaining wheel events in this scroll\" determination.\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n            clearTimeout(swiper.mousewheel.timeout);\n            swiper.mousewheel.timeout = undefined;\n            var _recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n\n            if (_recentWheelEvents.length >= 15) {\n              _recentWheelEvents.shift(); // only store the last N events\n\n            }\n\n            var _prevEvent = _recentWheelEvents.length ? _recentWheelEvents[_recentWheelEvents.length - 1] : undefined;\n\n            var firstEvent = _recentWheelEvents[0];\n\n            _recentWheelEvents.push(_newEvent);\n\n            if (_prevEvent && (_newEvent.delta > _prevEvent.delta || _newEvent.direction !== _prevEvent.direction)) {\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n              _recentWheelEvents.splice(0);\n            } else if (_recentWheelEvents.length >= 15 && _newEvent.time - firstEvent.time < 500 && firstEvent.delta - _newEvent.delta >= 1 && _newEvent.delta <= 6) {\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\n              // to wait for more events. Snap ASAP on the next tick.\n              // Also, because there's some remaining momentum we'll bias the snap in the\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\n              // if it's already scrolled more than 20% in the current direction, keep going.\n              var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n              swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n\n              _recentWheelEvents.splice(0);\n\n              swiper.mousewheel.timeout = nextTick(function () {\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 0); // no delay; move on next tick\n            }\n\n            if (!swiper.mousewheel.timeout) {\n              // if we get here, then we haven't detected the end of a momentum scroll, so\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\n              // for 500ms.\n              swiper.mousewheel.timeout = nextTick(function () {\n                var snapToThreshold = 0.5;\n                swiper.mousewheel.lastEventBeforeSnap = _newEvent;\n\n                _recentWheelEvents.splice(0);\n\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n              }, 500);\n            }\n          } // Emit event\n\n\n          if (!ignoreWheelEvents) swiper.emit('scroll', e); // Stop autoplay\n\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n        }\n      }\n\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      return false;\n    },\n    animateSlider: function animateSlider(newEvent) {\n      var swiper = this;\n      var window = getWindow();\n\n      if (this.params.mousewheel.thresholdDelta && newEvent.delta < this.params.mousewheel.thresholdDelta) {\n        // Prevent if delta of wheel scroll delta is below configured threshold\n        return false;\n      }\n\n      if (this.params.mousewheel.thresholdTime && now() - swiper.mousewheel.lastScrollTime < this.params.mousewheel.thresholdTime) {\n        // Prevent if time between scrolls is below configured threshold\n        return false;\n      } // If the movement is NOT big enough and\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n      //   Don't go any further (avoid insignificant scroll movement).\n\n\n      if (newEvent.delta >= 6 && now() - swiper.mousewheel.lastScrollTime < 60) {\n        // Return false as a default\n        return true;\n      } // If user is scrolling towards the end:\n      //   If the slider hasn't hit the latest slide or\n      //   if the slider is a loop and\n      //   if the slider isn't moving right now:\n      //     Go to next slide and\n      //     emit a scroll event.\n      // Else (the user is scrolling towards the beginning) and\n      // if the slider hasn't hit the first slide or\n      // if the slider is a loop and\n      // if the slider isn't moving right now:\n      //   Go to prev slide and\n      //   emit a scroll event.\n\n\n      if (newEvent.direction < 0) {\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n          swiper.slideNext();\n          swiper.emit('scroll', newEvent.raw);\n        }\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n        swiper.slidePrev();\n        swiper.emit('scroll', newEvent.raw);\n      } // If you got here is because an animation has been triggered so store the current time\n\n\n      swiper.mousewheel.lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n      return false;\n    },\n    releaseScroll: function releaseScroll(newEvent) {\n      var swiper = this;\n      var params = swiper.params.mousewheel;\n\n      if (newEvent.direction < 0) {\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n\n      return false;\n    },\n    enable: function enable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) return false;\n      if (swiper.mousewheel.enabled) return false;\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n      target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n      target.on(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = true;\n      return true;\n    },\n    disable: function disable() {\n      var swiper = this;\n      var event = Mousewheel.event();\n\n      if (swiper.params.cssMode) {\n        swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n        return true;\n      }\n\n      if (!event) return false;\n      if (!swiper.mousewheel.enabled) return false;\n      var target = swiper.$el;\n\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\n        target = $(swiper.params.mousewheel.eventsTarget);\n      }\n\n      target.off(event, swiper.mousewheel.handle);\n      swiper.mousewheel.enabled = false;\n      return true;\n    }\n  };\n  var Mousewheel$1 = {\n    name: 'mousewheel',\n    params: {\n      mousewheel: {\n        enabled: false,\n        releaseOnEdges: false,\n        invert: false,\n        forceToAxis: false,\n        sensitivity: 1,\n        eventsTarget: 'container',\n        thresholdDelta: null,\n        thresholdTime: null\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        mousewheel: {\n          enabled: false,\n          lastScrollTime: now(),\n          lastEventBeforeSnap: undefined,\n          recentWheelEvents: [],\n          enable: Mousewheel.enable,\n          disable: Mousewheel.disable,\n          handle: Mousewheel.handle,\n          handleMouseEnter: Mousewheel.handleMouseEnter,\n          handleMouseLeave: Mousewheel.handleMouseLeave,\n          animateSlider: Mousewheel.animateSlider,\n          releaseScroll: Mousewheel.releaseScroll\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          swiper.mousewheel.disable();\n        }\n\n        if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.cssMode) {\n          swiper.mousewheel.enable();\n        }\n\n        if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n      }\n    }\n  };\n\n  var Navigation = {\n    toggleEl: function toggleEl($el, disabled) {\n      $el[disabled ? 'addClass' : 'removeClass'](this.params.navigation.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n    },\n    update: function update() {\n      // Update Navigation Buttons\n      var swiper = this;\n      var params = swiper.params.navigation;\n      var toggleEl = swiper.navigation.toggleEl;\n      if (swiper.params.loop) return;\n      var _swiper$navigation = swiper.navigation,\n          $nextEl = _swiper$navigation.$nextEl,\n          $prevEl = _swiper$navigation.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          toggleEl($prevEl, true);\n        } else {\n          toggleEl($prevEl, false);\n        }\n\n        $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          toggleEl($nextEl, true);\n        } else {\n          toggleEl($nextEl, false);\n        }\n\n        $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    },\n    onPrevClick: function onPrevClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isBeginning && !swiper.params.loop) return;\n      swiper.slidePrev();\n    },\n    onNextClick: function onNextClick(e) {\n      var swiper = this;\n      e.preventDefault();\n      if (swiper.isEnd && !swiper.params.loop) return;\n      swiper.slideNext();\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.navigation;\n      if (!(params.nextEl || params.prevEl)) return;\n      var $nextEl;\n      var $prevEl;\n\n      if (params.nextEl) {\n        $nextEl = $(params.nextEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n          $nextEl = swiper.$el.find(params.nextEl);\n        }\n      }\n\n      if (params.prevEl) {\n        $prevEl = $(params.prevEl);\n\n        if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n          $prevEl = swiper.$el.find(params.prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        $nextEl.on('click', swiper.navigation.onNextClick);\n      }\n\n      if ($prevEl && $prevEl.length > 0) {\n        $prevEl.on('click', swiper.navigation.onPrevClick);\n      }\n\n      extend(swiper.navigation, {\n        $nextEl: $nextEl,\n        nextEl: $nextEl && $nextEl[0],\n        $prevEl: $prevEl,\n        prevEl: $prevEl && $prevEl[0]\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var _swiper$navigation2 = swiper.navigation,\n          $nextEl = _swiper$navigation2.$nextEl,\n          $prevEl = _swiper$navigation2.$prevEl;\n\n      if ($nextEl && $nextEl.length) {\n        $nextEl.off('click', swiper.navigation.onNextClick);\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        $prevEl.off('click', swiper.navigation.onPrevClick);\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\n      }\n    }\n  };\n  var Navigation$1 = {\n    name: 'navigation',\n    params: {\n      navigation: {\n        nextEl: null,\n        prevEl: null,\n        hideOnClick: false,\n        disabledClass: 'swiper-button-disabled',\n        hiddenClass: 'swiper-button-hidden',\n        lockClass: 'swiper-button-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        navigation: _extends({}, Navigation)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.navigation.init();\n        swiper.navigation.update();\n      },\n      toEdge: function toEdge(swiper) {\n        swiper.navigation.update();\n      },\n      fromEdge: function fromEdge(swiper) {\n        swiper.navigation.update();\n      },\n      destroy: function destroy(swiper) {\n        swiper.navigation.destroy();\n      },\n      click: function click(swiper, e) {\n        var _swiper$navigation3 = swiper.navigation,\n            $nextEl = _swiper$navigation3.$nextEl,\n            $prevEl = _swiper$navigation3.$prevEl;\n        var targetEl = e.target;\n\n        if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n          var isHidden;\n\n          if ($nextEl) {\n            isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n          } else if ($prevEl) {\n            isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if (isHidden === true) {\n            swiper.emit('navigationShow');\n          } else {\n            swiper.emit('navigationHide');\n          }\n\n          if ($nextEl) {\n            $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n\n          if ($prevEl) {\n            $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n          }\n        }\n      }\n    }\n  };\n\n  var Pagination = {\n    update: function update() {\n      // Render || Update Pagination bullets/items\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el; // Current/Total\n\n      var current;\n      var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.loop) {\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n          current -= slidesLength - swiper.loopedSlides * 2;\n        }\n\n        if (current > total - 1) current -= total;\n        if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n      } else if (typeof swiper.snapIndex !== 'undefined') {\n        current = swiper.snapIndex;\n      } else {\n        current = swiper.activeIndex || 0;\n      } // Types\n\n\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n        var bullets = swiper.pagination.bullets;\n        var firstIndex;\n        var lastIndex;\n        var midIndex;\n\n        if (params.dynamicBullets) {\n          swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n            swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n\n            if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\n              swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n            } else if (swiper.pagination.dynamicBulletIndex < 0) {\n              swiper.pagination.dynamicBulletIndex = 0;\n            }\n          }\n\n          firstIndex = current - swiper.pagination.dynamicBulletIndex;\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n          midIndex = (lastIndex + firstIndex) / 2;\n        }\n\n        bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n\n        if ($el.length > 1) {\n          bullets.each(function (bullet) {\n            var $bullet = $(bullet);\n            var bulletIndex = $bullet.index();\n\n            if (bulletIndex === current) {\n              $bullet.addClass(params.bulletActiveClass);\n            }\n\n            if (params.dynamicBullets) {\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                $bullet.addClass(params.bulletActiveClass + \"-main\");\n              }\n\n              if (bulletIndex === firstIndex) {\n                $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              }\n\n              if (bulletIndex === lastIndex) {\n                $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            }\n          });\n        } else {\n          var $bullet = bullets.eq(current);\n          var bulletIndex = $bullet.index();\n          $bullet.addClass(params.bulletActiveClass);\n\n          if (params.dynamicBullets) {\n            var $firstDisplayedBullet = bullets.eq(firstIndex);\n            var $lastDisplayedBullet = bullets.eq(lastIndex);\n\n            for (var i = firstIndex; i <= lastIndex; i += 1) {\n              bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n            }\n\n            if (swiper.params.loop) {\n              if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                for (var _i = params.dynamicMainBullets; _i >= 0; _i -= 1) {\n                  bullets.eq(bullets.length - _i).addClass(params.bulletActiveClass + \"-main\");\n                }\n\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\n              } else {\n                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            } else {\n              $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n              $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n            }\n          }\n        }\n\n        if (params.dynamicBullets) {\n          var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n          var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\n          var offsetProp = rtl ? 'right' : 'left';\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n        }\n      }\n\n      if (params.type === 'fraction') {\n        $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n        $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n      }\n\n      if (params.type === 'progressbar') {\n        var progressbarDirection;\n\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n\n        var scale = (current + 1) / total;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n\n        $el.find(classesToSelector(params.progressbarFillClass)).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n      }\n\n      if (params.type === 'custom' && params.renderCustom) {\n        $el.html(params.renderCustom(swiper, current + 1, total));\n        swiper.emit('paginationRender', $el[0]);\n      } else {\n        swiper.emit('paginationUpdate', $el[0]);\n      }\n\n      $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    },\n    render: function render() {\n      // Render Container\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n      var $el = swiper.pagination.$el;\n      var paginationHTML = '';\n\n      if (params.type === 'bullets') {\n        var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n        if (swiper.params.freeMode && !swiper.params.loop && numberOfBullets > slidesLength) {\n          numberOfBullets = slidesLength;\n        }\n\n        for (var i = 0; i < numberOfBullets; i += 1) {\n          if (params.renderBullet) {\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n          } else {\n            paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n          }\n        }\n\n        $el.html(paginationHTML);\n        swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n      }\n\n      if (params.type === 'fraction') {\n        if (params.renderFraction) {\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\" + ' / ' + (\"<span class=\\\"\" + params.totalClass + \"\\\"></span>\");\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type === 'progressbar') {\n        if (params.renderProgressbar) {\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n        } else {\n          paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n        }\n\n        $el.html(paginationHTML);\n      }\n\n      if (params.type !== 'custom') {\n        swiper.emit('paginationRender', swiper.pagination.$el[0]);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el) return;\n      var $el = $(params.el);\n      if ($el.length === 0) return;\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n        $el = swiper.$el.find(params.el);\n      }\n\n      if (params.type === 'bullets' && params.clickable) {\n        $el.addClass(params.clickableClass);\n      }\n\n      $el.addClass(params.modifierClass + params.type);\n\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n        swiper.pagination.dynamicBulletIndex = 0;\n\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        $el.addClass(params.progressbarOppositeClass);\n      }\n\n      if (params.clickable) {\n        $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n          e.preventDefault();\n          var index = $(this).index() * swiper.params.slidesPerGroup;\n          if (swiper.params.loop) index += swiper.loopedSlides;\n          swiper.slideTo(index);\n        });\n      }\n\n      extend(swiper.pagination, {\n        $el: $el,\n        el: $el[0]\n      });\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var params = swiper.params.pagination;\n      if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n      var $el = swiper.pagination.$el;\n      $el.removeClass(params.hiddenClass);\n      $el.removeClass(params.modifierClass + params.type);\n      if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n      if (params.clickable) {\n        $el.off('click', classesToSelector(params.bulletClass));\n      }\n    }\n  };\n  var Pagination$1 = {\n    name: 'pagination',\n    params: {\n      pagination: {\n        el: null,\n        bulletElement: 'span',\n        clickable: false,\n        hideOnClick: false,\n        renderBullet: null,\n        renderProgressbar: null,\n        renderFraction: null,\n        renderCustom: null,\n        progressbarOpposite: false,\n        type: 'bullets',\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n        dynamicBullets: false,\n        dynamicMainBullets: 1,\n        formatFractionCurrent: function formatFractionCurrent(number) {\n          return number;\n        },\n        formatFractionTotal: function formatFractionTotal(number) {\n          return number;\n        },\n        bulletClass: 'swiper-pagination-bullet',\n        bulletActiveClass: 'swiper-pagination-bullet-active',\n        modifierClass: 'swiper-pagination-',\n        // NEW\n        currentClass: 'swiper-pagination-current',\n        totalClass: 'swiper-pagination-total',\n        hiddenClass: 'swiper-pagination-hidden',\n        progressbarFillClass: 'swiper-pagination-progressbar-fill',\n        progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n        clickableClass: 'swiper-pagination-clickable',\n        // NEW\n        lockClass: 'swiper-pagination-lock'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        pagination: _extends({\n          dynamicBulletIndex: 0\n        }, Pagination)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.pagination.init();\n        swiper.pagination.render();\n        swiper.pagination.update();\n      },\n      activeIndexChange: function activeIndexChange(swiper) {\n        if (swiper.params.loop) {\n          swiper.pagination.update();\n        } else if (typeof swiper.snapIndex === 'undefined') {\n          swiper.pagination.update();\n        }\n      },\n      snapIndexChange: function snapIndexChange(swiper) {\n        if (!swiper.params.loop) {\n          swiper.pagination.update();\n        }\n      },\n      slidesLengthChange: function slidesLengthChange(swiper) {\n        if (swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      snapGridLengthChange: function snapGridLengthChange(swiper) {\n        if (!swiper.params.loop) {\n          swiper.pagination.render();\n          swiper.pagination.update();\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.pagination.destroy();\n      },\n      click: function click(swiper, e) {\n        var targetEl = e.target;\n\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n          var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n\n          if (isHidden === true) {\n            swiper.emit('paginationShow');\n          } else {\n            swiper.emit('paginationHide');\n          }\n\n          swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n      }\n    }\n  };\n\n  var Scrollbar = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar,\n          rtl = swiper.rtlTranslate,\n          progress = swiper.progress;\n      var dragSize = scrollbar.dragSize,\n          trackSize = scrollbar.trackSize,\n          $dragEl = scrollbar.$dragEl,\n          $el = scrollbar.$el;\n      var params = swiper.params.scrollbar;\n      var newSize = dragSize;\n      var newPos = (trackSize - dragSize) * progress;\n\n      if (rtl) {\n        newPos = -newPos;\n\n        if (newPos > 0) {\n          newSize = dragSize - newPos;\n          newPos = 0;\n        } else if (-newPos + dragSize > trackSize) {\n          newSize = trackSize + newPos;\n        }\n      } else if (newPos < 0) {\n        newSize = dragSize + newPos;\n        newPos = 0;\n      } else if (newPos + dragSize > trackSize) {\n        newSize = trackSize - newPos;\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n        $dragEl[0].style.width = newSize + \"px\";\n      } else {\n        $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n        $dragEl[0].style.height = newSize + \"px\";\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.timeout);\n        $el[0].style.opacity = 1;\n        swiper.scrollbar.timeout = setTimeout(function () {\n          $el[0].style.opacity = 0;\n          $el.transition(400);\n        }, 1000);\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      swiper.scrollbar.$dragEl.transition(duration);\n    },\n    updateSize: function updateSize() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar;\n      var $dragEl = scrollbar.$dragEl,\n          $el = scrollbar.$el;\n      $dragEl[0].style.width = '';\n      $dragEl[0].style.height = '';\n      var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n      var divider = swiper.size / swiper.virtualSize;\n      var moveDivider = divider * (trackSize / swiper.size);\n      var dragSize;\n\n      if (swiper.params.scrollbar.dragSize === 'auto') {\n        dragSize = trackSize * divider;\n      } else {\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n      }\n\n      if (swiper.isHorizontal()) {\n        $dragEl[0].style.width = dragSize + \"px\";\n      } else {\n        $dragEl[0].style.height = dragSize + \"px\";\n      }\n\n      if (divider >= 1) {\n        $el[0].style.display = 'none';\n      } else {\n        $el[0].style.display = '';\n      }\n\n      if (swiper.params.scrollbar.hide) {\n        $el[0].style.opacity = 0;\n      }\n\n      extend(scrollbar, {\n        trackSize: trackSize,\n        divider: divider,\n        moveDivider: moveDivider,\n        dragSize: dragSize\n      });\n      scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    },\n    getPointerPosition: function getPointerPosition(e) {\n      var swiper = this;\n\n      if (swiper.isHorizontal()) {\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n      }\n\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n    },\n    setDragPosition: function setDragPosition(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar,\n          rtl = swiper.rtlTranslate;\n      var $el = scrollbar.$el,\n          dragSize = scrollbar.dragSize,\n          trackSize = scrollbar.trackSize,\n          dragStartPos = scrollbar.dragStartPos;\n      var positionRatio;\n      positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n      if (rtl) {\n        positionRatio = 1 - positionRatio;\n      }\n\n      var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n      swiper.updateProgress(position);\n      swiper.setTranslate(position);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    },\n    onDragStart: function onDragStart(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el,\n          $dragEl = scrollbar.$dragEl;\n      swiper.scrollbar.isTouched = true;\n      swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n      e.preventDefault();\n      e.stopPropagation();\n      $wrapperEl.transition(100);\n      $dragEl.transition(100);\n      scrollbar.setDragPosition(e);\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      $el.transition(0);\n\n      if (params.hide) {\n        $el.css('opacity', 1);\n      }\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\n      }\n\n      swiper.emit('scrollbarDragStart', e);\n    },\n    onDragMove: function onDragMove(e) {\n      var swiper = this;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el,\n          $dragEl = scrollbar.$dragEl;\n      if (!swiper.scrollbar.isTouched) return;\n      if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      scrollbar.setDragPosition(e);\n      $wrapperEl.transition(0);\n      $el.transition(0);\n      $dragEl.transition(0);\n      swiper.emit('scrollbarDragMove', e);\n    },\n    onDragEnd: function onDragEnd(e) {\n      var swiper = this;\n      var params = swiper.params.scrollbar;\n      var scrollbar = swiper.scrollbar,\n          $wrapperEl = swiper.$wrapperEl;\n      var $el = scrollbar.$el;\n      if (!swiper.scrollbar.isTouched) return;\n      swiper.scrollbar.isTouched = false;\n\n      if (swiper.params.cssMode) {\n        swiper.$wrapperEl.css('scroll-snap-type', '');\n        $wrapperEl.transition('');\n      }\n\n      if (params.hide) {\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        swiper.scrollbar.dragTimeout = nextTick(function () {\n          $el.css('opacity', 0);\n          $el.transition(400);\n        }, 1000);\n      }\n\n      swiper.emit('scrollbarDragEnd', e);\n\n      if (params.snapOnRelease) {\n        swiper.slideToClosest();\n      }\n    },\n    enableDraggable: function enableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var document = getDocument();\n      var scrollbar = swiper.scrollbar,\n          touchEventsTouch = swiper.touchEventsTouch,\n          touchEventsDesktop = swiper.touchEventsDesktop,\n          params = swiper.params,\n          support = swiper.support;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n\n      if (!support.touch) {\n        target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    disableDraggable: function disableDraggable() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var document = getDocument();\n      var scrollbar = swiper.scrollbar,\n          touchEventsTouch = swiper.touchEventsTouch,\n          touchEventsDesktop = swiper.touchEventsDesktop,\n          params = swiper.params,\n          support = swiper.support;\n      var $el = scrollbar.$el;\n      var target = $el[0];\n      var activeListener = support.passiveListener && params.passiveListeners ? {\n        passive: false,\n        capture: false\n      } : false;\n      var passiveListener = support.passiveListener && params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      if (!target) return;\n\n      if (!support.touch) {\n        target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n      } else {\n        target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      if (!swiper.params.scrollbar.el) return;\n      var scrollbar = swiper.scrollbar,\n          $swiperEl = swiper.$el;\n      var params = swiper.params.scrollbar;\n      var $el = $(params.el);\n\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n        $el = $swiperEl.find(params.el);\n      }\n\n      var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n\n      if ($dragEl.length === 0) {\n        $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n        $el.append($dragEl);\n      }\n\n      extend(scrollbar, {\n        $el: $el,\n        el: $el[0],\n        $dragEl: $dragEl,\n        dragEl: $dragEl[0]\n      });\n\n      if (params.draggable) {\n        scrollbar.enableDraggable();\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      swiper.scrollbar.disableDraggable();\n    }\n  };\n  var Scrollbar$1 = {\n    name: 'scrollbar',\n    params: {\n      scrollbar: {\n        el: null,\n        dragSize: 'auto',\n        hide: false,\n        draggable: false,\n        snapOnRelease: true,\n        lockClass: 'swiper-scrollbar-lock',\n        dragClass: 'swiper-scrollbar-drag'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        scrollbar: _extends({\n          isTouched: false,\n          timeout: null,\n          dragTimeout: null\n        }, Scrollbar)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        swiper.scrollbar.init();\n        swiper.scrollbar.updateSize();\n        swiper.scrollbar.setTranslate();\n      },\n      update: function update(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      resize: function resize(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        swiper.scrollbar.updateSize();\n      },\n      setTranslate: function setTranslate(swiper) {\n        swiper.scrollbar.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        swiper.scrollbar.setTransition(duration);\n      },\n      destroy: function destroy(swiper) {\n        swiper.scrollbar.destroy();\n      }\n    }\n  };\n\n  var Parallax = {\n    setTransform: function setTransform(el, progress) {\n      var swiper = this;\n      var rtl = swiper.rtl;\n      var $el = $(el);\n      var rtlFactor = rtl ? -1 : 1;\n      var p = $el.attr('data-swiper-parallax') || '0';\n      var x = $el.attr('data-swiper-parallax-x');\n      var y = $el.attr('data-swiper-parallax-y');\n      var scale = $el.attr('data-swiper-parallax-scale');\n      var opacity = $el.attr('data-swiper-parallax-opacity');\n\n      if (x || y) {\n        x = x || '0';\n        y = y || '0';\n      } else if (swiper.isHorizontal()) {\n        x = p;\n        y = '0';\n      } else {\n        y = p;\n        x = '0';\n      }\n\n      if (x.indexOf('%') >= 0) {\n        x = parseInt(x, 10) * progress * rtlFactor + \"%\";\n      } else {\n        x = x * progress * rtlFactor + \"px\";\n      }\n\n      if (y.indexOf('%') >= 0) {\n        y = parseInt(y, 10) * progress + \"%\";\n      } else {\n        y = y * progress + \"px\";\n      }\n\n      if (typeof opacity !== 'undefined' && opacity !== null) {\n        var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n        $el[0].style.opacity = currentOpacity;\n      }\n\n      if (typeof scale === 'undefined' || scale === null) {\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\n      } else {\n        var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n        $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\n      }\n    },\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el,\n          slides = swiper.slides,\n          progress = swiper.progress,\n          snapGrid = swiper.snapGrid;\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\n        swiper.parallax.setTransform(el, progress);\n      });\n      slides.each(function (slideEl, slideIndex) {\n        var slideProgress = slideEl.progress;\n\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n        }\n\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (el) {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n      });\n    },\n    setTransition: function setTransition(duration) {\n      if (duration === void 0) {\n        duration = this.params.speed;\n      }\n\n      var swiper = this;\n      var $el = swiper.$el;\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (parallaxEl) {\n        var $parallaxEl = $(parallaxEl);\n        var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n    }\n  };\n  var Parallax$1 = {\n    name: 'parallax',\n    params: {\n      parallax: {\n        enabled: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        parallax: _extends({}, Parallax)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      init: function init(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTranslate();\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.parallax.setTransition(duration);\n      }\n    }\n  };\n\n  var Zoom = {\n    // Calc Scale From Multi-touches\n    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n      if (e.targetTouches.length < 2) return 1;\n      var x1 = e.targetTouches[0].pageX;\n      var y1 = e.targetTouches[0].pageY;\n      var x2 = e.targetTouches[1].pageX;\n      var y2 = e.targetTouches[1].pageY;\n      var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n      return distance;\n    },\n    // Events\n    onGestureStart: function onGestureStart(e) {\n      var swiper = this;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = true;\n        gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\n        gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n        if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n        if (gesture.$imageWrapEl.length === 0) {\n          gesture.$imageEl = undefined;\n          return;\n        }\n      }\n\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transition(0);\n      }\n\n      swiper.zoom.isScaling = true;\n    },\n    onGestureChange: function onGestureChange(e) {\n      var swiper = this;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!support.gestures) {\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n          return;\n        }\n\n        zoom.fakeGestureMoved = true;\n        gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n        if (e.type === 'gesturechange') zoom.onGestureStart(e);\n        return;\n      }\n\n      if (support.gestures) {\n        zoom.scale = e.scale * zoom.currentScale;\n      } else {\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\n      }\n\n      if (zoom.scale > gesture.maxRatio) {\n        zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n      }\n\n      if (zoom.scale < params.minRatio) {\n        zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n      }\n\n      gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    onGestureEnd: function onGestureEnd(e) {\n      var swiper = this;\n      var device = swiper.device;\n      var support = swiper.support;\n      var params = swiper.params.zoom;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (!support.gestures) {\n        if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n          return;\n        }\n\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n          return;\n        }\n\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n      gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      zoom.currentScale = zoom.scale;\n      zoom.isScaling = false;\n      if (zoom.scale === 1) gesture.$slideEl = undefined;\n    },\n    onTouchStart: function onTouchStart(e) {\n      var swiper = this;\n      var device = swiper.device;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      if (image.isTouched) return;\n      if (device.android && e.cancelable) e.preventDefault();\n      image.isTouched = true;\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n    },\n    onTouchMove: function onTouchMove(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image,\n          velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      swiper.allowClick = false;\n      if (!image.isTouched || !gesture.$slideEl) return;\n\n      if (!image.isMoved) {\n        image.width = gesture.$imageEl[0].offsetWidth;\n        image.height = gesture.$imageEl[0].offsetHeight;\n        image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n        image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n        gesture.$imageWrapEl.transition(0);\n\n        if (swiper.rtl) {\n          image.startX = -image.startX;\n          image.startY = -image.startY;\n        }\n      } // Define if we need image drag\n\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n      if (!image.isMoved && !zoom.isScaling) {\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n          image.isTouched = false;\n          return;\n        }\n\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n          image.isTouched = false;\n          return;\n        }\n      }\n\n      if (e.cancelable) {\n        e.preventDefault();\n      }\n\n      e.stopPropagation();\n      image.isMoved = true;\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n      if (image.currentX < image.minX) {\n        image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n      }\n\n      if (image.currentX > image.maxX) {\n        image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n      }\n\n      if (image.currentY < image.minY) {\n        image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n      }\n\n      if (image.currentY > image.maxY) {\n        image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n      } // Velocity\n\n\n      if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n      if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n      if (!velocity.prevTime) velocity.prevTime = Date.now();\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n      velocity.prevPositionX = image.touchesCurrent.x;\n      velocity.prevPositionY = image.touchesCurrent.y;\n      velocity.prevTime = Date.now();\n      gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTouchEnd: function onTouchEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image,\n          velocity = zoom.velocity;\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n      if (!image.isTouched || !image.isMoved) {\n        image.isTouched = false;\n        image.isMoved = false;\n        return;\n      }\n\n      image.isTouched = false;\n      image.isMoved = false;\n      var momentumDurationX = 300;\n      var momentumDurationY = 300;\n      var momentumDistanceX = velocity.x * momentumDurationX;\n      var newPositionX = image.currentX + momentumDistanceX;\n      var momentumDistanceY = velocity.y * momentumDurationY;\n      var newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n      if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n      if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n      var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n      image.currentX = newPositionX;\n      image.currentY = newPositionY; // Define if we need image drag\n\n      var scaledWidth = image.width * zoom.scale;\n      var scaledHeight = image.height * zoom.scale;\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n      image.maxX = -image.minX;\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n      image.maxY = -image.minY;\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n      gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var gesture = zoom.gesture;\n\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n        if (gesture.$imageEl) {\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n        }\n\n        if (gesture.$imageWrapEl) {\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n        }\n\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$slideEl = undefined;\n        gesture.$imageEl = undefined;\n        gesture.$imageWrapEl = undefined;\n      }\n    },\n    // Toggle Zoom\n    toggle: function toggle(e) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n\n      if (zoom.scale && zoom.scale !== 1) {\n        // Zoom Out\n        zoom.out();\n      } else {\n        // Zoom In\n        zoom.in(e);\n      }\n    },\n    in: function _in(e) {\n      var swiper = this;\n      var window = getWindow();\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture,\n          image = zoom.image;\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n      var touchX;\n      var touchY;\n      var offsetX;\n      var offsetY;\n      var diffX;\n      var diffY;\n      var translateX;\n      var translateY;\n      var imageWidth;\n      var imageHeight;\n      var scaledWidth;\n      var scaledHeight;\n      var translateMinX;\n      var translateMinY;\n      var translateMaxX;\n      var translateMaxY;\n      var slideWidth;\n      var slideHeight;\n\n      if (typeof image.touchesStart.x === 'undefined' && e) {\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n      } else {\n        touchX = image.touchesStart.x;\n        touchY = image.touchesStart.y;\n      }\n\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (e) {\n        slideWidth = gesture.$slideEl[0].offsetWidth;\n        slideHeight = gesture.$slideEl[0].offsetHeight;\n        offsetX = gesture.$slideEl.offset().left + window.scrollX;\n        offsetY = gesture.$slideEl.offset().top + window.scrollY;\n        diffX = offsetX + slideWidth / 2 - touchX;\n        diffY = offsetY + slideHeight / 2 - touchY;\n        imageWidth = gesture.$imageEl[0].offsetWidth;\n        imageHeight = gesture.$imageEl[0].offsetHeight;\n        scaledWidth = imageWidth * zoom.scale;\n        scaledHeight = imageHeight * zoom.scale;\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n        translateMaxX = -translateMinX;\n        translateMaxY = -translateMinY;\n        translateX = diffX * zoom.scale;\n        translateY = diffY * zoom.scale;\n\n        if (translateX < translateMinX) {\n          translateX = translateMinX;\n        }\n\n        if (translateX > translateMaxX) {\n          translateX = translateMaxX;\n        }\n\n        if (translateY < translateMinY) {\n          translateY = translateMinY;\n        }\n\n        if (translateY > translateMaxY) {\n          translateY = translateMaxY;\n        }\n      } else {\n        translateX = 0;\n        translateY = 0;\n      }\n\n      gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n      gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n    },\n    out: function out() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var params = swiper.params.zoom;\n      var gesture = zoom.gesture;\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(\".\" + swiper.params.slideActiveClass);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n\n        gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n        gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n      }\n\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n      gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n      gesture.$slideEl = undefined;\n    },\n    toggleGestures: function toggleGestures(method) {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      var selector = zoom.slideSelector,\n          passive = zoom.passiveListener;\n      swiper.$wrapperEl[method]('gesturestart', selector, zoom.onGestureStart, passive);\n      swiper.$wrapperEl[method]('gesturechange', selector, zoom.onGestureChange, passive);\n      swiper.$wrapperEl[method]('gestureend', selector, zoom.onGestureEnd, passive);\n    },\n    enableGestures: function enableGestures() {\n      if (this.zoom.gesturesEnabled) return;\n      this.zoom.gesturesEnabled = true;\n      this.zoom.toggleGestures('on');\n    },\n    disableGestures: function disableGestures() {\n      if (!this.zoom.gesturesEnabled) return;\n      this.zoom.gesturesEnabled = false;\n      this.zoom.toggleGestures('off');\n    },\n    // Attach/Detach Events\n    enable: function enable() {\n      var swiper = this;\n      var support = swiper.support;\n      var zoom = swiper.zoom;\n      if (zoom.enabled) return;\n      zoom.enabled = true;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass;\n      swiper.zoom.passiveListener = passiveListener;\n      swiper.zoom.slideSelector = slideSelector; // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    },\n    disable: function disable() {\n      var swiper = this;\n      var zoom = swiper.zoom;\n      if (!zoom.enabled) return;\n      var support = swiper.support;\n      swiper.zoom.enabled = false;\n      var passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n        passive: true,\n        capture: false\n      } : false;\n      var activeListenerWithCapture = support.passiveListener ? {\n        passive: false,\n        capture: true\n      } : true;\n      var slideSelector = \".\" + swiper.params.slideClass; // Scale image\n\n      if (support.gestures) {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, swiper.zoom.enableGestures, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, swiper.zoom.disableGestures, passiveListener);\n      } else if (swiper.touchEvents.start === 'touchstart') {\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n\n        if (swiper.touchEvents.cancel) {\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n        }\n      } // Move image\n\n\n      swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n    }\n  };\n  var Zoom$1 = {\n    name: 'zoom',\n    params: {\n      zoom: {\n        enabled: false,\n        maxRatio: 3,\n        minRatio: 1,\n        toggle: true,\n        containerClass: 'swiper-zoom-container',\n        zoomedSlideClass: 'swiper-slide-zoomed'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        zoom: _extends({\n          enabled: false,\n          scale: 1,\n          currentScale: 1,\n          isScaling: false,\n          gesture: {\n            $slideEl: undefined,\n            slideWidth: undefined,\n            slideHeight: undefined,\n            $imageEl: undefined,\n            $imageWrapEl: undefined,\n            maxRatio: 3\n          },\n          image: {\n            isTouched: undefined,\n            isMoved: undefined,\n            currentX: undefined,\n            currentY: undefined,\n            minX: undefined,\n            minY: undefined,\n            maxX: undefined,\n            maxY: undefined,\n            width: undefined,\n            height: undefined,\n            startX: undefined,\n            startY: undefined,\n            touchesStart: {},\n            touchesCurrent: {}\n          },\n          velocity: {\n            x: undefined,\n            y: undefined,\n            prevPositionX: undefined,\n            prevPositionY: undefined,\n            prevTime: undefined\n          }\n        }, Zoom)\n      });\n      var scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get: function get() {\n          return scale;\n        },\n        set: function set(value) {\n          if (scale !== value) {\n            var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n            var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n            swiper.emit('zoomChange', value, imageEl, slideEl);\n          }\n\n          scale = value;\n        }\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.zoom.enabled) {\n          swiper.zoom.enable();\n        }\n      },\n      destroy: function destroy(swiper) {\n        swiper.zoom.disable();\n      },\n      touchStart: function touchStart(swiper, e) {\n        if (!swiper.zoom.enabled) return;\n        swiper.zoom.onTouchStart(e);\n      },\n      touchEnd: function touchEnd(swiper, e) {\n        if (!swiper.zoom.enabled) return;\n        swiper.zoom.onTouchEnd(e);\n      },\n      doubleTap: function doubleTap(swiper, e) {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          swiper.zoom.toggle(e);\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          swiper.zoom.onTransitionEnd();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          swiper.zoom.onTransitionEnd();\n        }\n      }\n    }\n  };\n\n  var Lazy = {\n    loadInSlide: function loadInSlide(index, loadInDuplicate) {\n      if (loadInDuplicate === void 0) {\n        loadInDuplicate = true;\n      }\n\n      var swiper = this;\n      var params = swiper.params.lazy;\n      if (typeof index === 'undefined') return;\n      if (swiper.slides.length === 0) return;\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\") : swiper.slides.eq(index);\n      var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\n\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n        $images.push($slideEl[0]);\n      }\n\n      if ($images.length === 0) return;\n      $images.each(function (imageEl) {\n        var $imageEl = $(imageEl);\n        $imageEl.addClass(params.loadingClass);\n        var background = $imageEl.attr('data-background');\n        var src = $imageEl.attr('data-src');\n        var srcset = $imageEl.attr('data-srcset');\n        var sizes = $imageEl.attr('data-sizes');\n        var $pictureEl = $imageEl.parent('picture');\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n          if (background) {\n            $imageEl.css('background-image', \"url(\\\"\" + background + \"\\\")\");\n            $imageEl.removeAttr('data-background');\n          } else {\n            if (srcset) {\n              $imageEl.attr('srcset', srcset);\n              $imageEl.removeAttr('data-srcset');\n            }\n\n            if (sizes) {\n              $imageEl.attr('sizes', sizes);\n              $imageEl.removeAttr('data-sizes');\n            }\n\n            if ($pictureEl.length) {\n              $pictureEl.children('source').each(function (sourceEl) {\n                var $source = $(sourceEl);\n\n                if ($source.attr('data-srcset')) {\n                  $source.attr('srcset', $source.attr('data-srcset'));\n                  $source.removeAttr('data-srcset');\n                }\n              });\n            }\n\n            if (src) {\n              $imageEl.attr('src', src);\n              $imageEl.removeAttr('data-src');\n            }\n          }\n\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n          $slideEl.find(\".\" + params.preloaderClass).remove();\n\n          if (swiper.params.loop && loadInDuplicate) {\n            var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n              var originalSlide = swiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + swiper.params.slideDuplicateClass + \")\");\n              swiper.lazy.loadInSlide(originalSlide.index(), false);\n            } else {\n              var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\");\n              swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n            }\n          }\n\n          swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        });\n        swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n      });\n    },\n    load: function load() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl,\n          swiperParams = swiper.params,\n          slides = swiper.slides,\n          activeIndex = swiper.activeIndex;\n      var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n      var params = swiperParams.lazy;\n      var slidesPerView = swiperParams.slidesPerView;\n\n      if (slidesPerView === 'auto') {\n        slidesPerView = 0;\n      }\n\n      function slideExist(index) {\n        if (isVirtual) {\n          if ($wrapperEl.children(\".\" + swiperParams.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\").length) {\n            return true;\n          }\n        } else if (slides[index]) return true;\n\n        return false;\n      }\n\n      function slideIndex(slideEl) {\n        if (isVirtual) {\n          return $(slideEl).attr('data-swiper-slide-index');\n        }\n\n        return $(slideEl).index();\n      }\n\n      if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n\n      if (swiper.params.watchSlidesVisibility) {\n        $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function (slideEl) {\n          var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n          swiper.lazy.loadInSlide(index);\n        });\n      } else if (slidesPerView > 1) {\n        for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        swiper.lazy.loadInSlide(activeIndex);\n      }\n\n      if (params.loadPrevNext) {\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n          var amount = params.loadPrevNextAmount;\n          var spv = slidesPerView;\n          var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n          var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n          for (var _i = activeIndex + slidesPerView; _i < maxIndex; _i += 1) {\n            if (slideExist(_i)) swiper.lazy.loadInSlide(_i);\n          } // Prev Slides\n\n\n          for (var _i2 = minIndex; _i2 < activeIndex; _i2 += 1) {\n            if (slideExist(_i2)) swiper.lazy.loadInSlide(_i2);\n          }\n        } else {\n          var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\n          if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n          var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\n          if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n        }\n      }\n    },\n    checkInViewOnLoad: function checkInViewOnLoad() {\n      var window = getWindow();\n      var swiper = this;\n      if (!swiper || swiper.destroyed) return;\n      var $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n      var isWindow = $scrollElement[0] === window;\n      var scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n      var scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n      var swiperOffset = swiper.$el.offset();\n      var rtl = swiper.rtlTranslate;\n      var inView = false;\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n      for (var i = 0; i < swiperCoord.length; i += 1) {\n        var point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      if (inView) {\n        swiper.lazy.load();\n        $scrollElement.off('scroll', swiper.lazy.checkInViewOnLoad);\n      } else if (!swiper.lazy.scrollHandlerAttached) {\n        swiper.lazy.scrollHandlerAttached = true;\n        $scrollElement.on('scroll', swiper.lazy.checkInViewOnLoad);\n      }\n    }\n  };\n  var Lazy$1 = {\n    name: 'lazy',\n    params: {\n      lazy: {\n        checkInView: false,\n        enabled: false,\n        loadPrevNext: false,\n        loadPrevNextAmount: 1,\n        loadOnTransitionStart: false,\n        scrollingElement: '',\n        elementClass: 'swiper-lazy',\n        loadingClass: 'swiper-lazy-loading',\n        loadedClass: 'swiper-lazy-loaded',\n        preloaderClass: 'swiper-lazy-preloader'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        lazy: _extends({\n          initialImageLoaded: false\n        }, Lazy)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n          swiper.params.preloadImages = false;\n        }\n      },\n      init: function init(swiper) {\n        if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n          if (swiper.params.lazy.checkInView) {\n            swiper.lazy.checkInViewOnLoad();\n          } else {\n            swiper.lazy.load();\n          }\n        }\n      },\n      scroll: function scroll(swiper) {\n        if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n          swiper.lazy.load();\n        }\n      },\n      'scrollbarDragMove resize _freeModeNoMomentumRelease': function lazyLoad(swiper) {\n        if (swiper.params.lazy.enabled) {\n          swiper.lazy.load();\n        }\n      },\n      transitionStart: function transitionStart(swiper) {\n        if (swiper.params.lazy.enabled) {\n          if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {\n            swiper.lazy.load();\n          }\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n          swiper.lazy.load();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n          swiper.lazy.load();\n        }\n      }\n    }\n  };\n\n  var Controller = {\n    LinearSpline: function LinearSpline(x, y) {\n      var binarySearch = function search() {\n        var maxIndex;\n        var minIndex;\n        var guess;\n        return function (array, val) {\n          minIndex = -1;\n          maxIndex = array.length;\n\n          while (maxIndex - minIndex > 1) {\n            guess = maxIndex + minIndex >> 1;\n\n            if (array[guess] <= val) {\n              minIndex = guess;\n            } else {\n              maxIndex = guess;\n            }\n          }\n\n          return maxIndex;\n        };\n      }();\n\n      this.x = x;\n      this.y = y;\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n      // (x1,y1) is the known point before given value,\n      // (x3,y3) is the known point after given value.\n\n      var i1;\n      var i3;\n\n      this.interpolate = function interpolate(x2) {\n        if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n        i3 = binarySearch(this.x, x2);\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n      };\n\n      return this;\n    },\n    // xxx: for now i will just save one spline function to to\n    getInterpolateFunction: function getInterpolateFunction(c) {\n      var swiper = this;\n\n      if (!swiper.controller.spline) {\n        swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n    },\n    setTranslate: function setTranslate(_setTranslate, byController) {\n      var swiper = this;\n      var controlled = swiper.controller.control;\n      var multiplier;\n      var controlledTranslate;\n      var Swiper = swiper.constructor;\n\n      function setControlledTranslate(c) {\n        // this will create an Interpolate function based on the snapGrids\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\n        // it makes sense to create this only once and recall it for the interpolation\n        // the function does a lot of value caching for performance\n        var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n        if (swiper.params.controller.by === 'slide') {\n          swiper.controller.getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n          // but it did not work out\n\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n        }\n\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n        }\n\n        if (swiper.params.controller.inverse) {\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\n        }\n\n        c.updateProgress(controlledTranslate);\n        c.setTranslate(controlledTranslate, swiper);\n        c.updateActiveIndex();\n        c.updateSlidesClasses();\n      }\n\n      if (Array.isArray(controlled)) {\n        for (var i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTranslate(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTranslate(controlled);\n      }\n    },\n    setTransition: function setTransition(duration, byController) {\n      var swiper = this;\n      var Swiper = swiper.constructor;\n      var controlled = swiper.controller.control;\n      var i;\n\n      function setControlledTransition(c) {\n        c.setTransition(duration, swiper);\n\n        if (duration !== 0) {\n          c.transitionStart();\n\n          if (c.params.autoHeight) {\n            nextTick(function () {\n              c.updateAutoHeight();\n            });\n          }\n\n          c.$wrapperEl.transitionEnd(function () {\n            if (!controlled) return;\n\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\n              c.loopFix();\n            }\n\n            c.transitionEnd();\n          });\n        }\n      }\n\n      if (Array.isArray(controlled)) {\n        for (i = 0; i < controlled.length; i += 1) {\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n            setControlledTransition(controlled[i]);\n          }\n        }\n      } else if (controlled instanceof Swiper && byController !== controlled) {\n        setControlledTransition(controlled);\n      }\n    }\n  };\n  var Controller$1 = {\n    name: 'controller',\n    params: {\n      controller: {\n        control: undefined,\n        inverse: false,\n        by: 'slide' // or 'container'\n\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        controller: _extends({\n          control: swiper.params.controller.control\n        }, Controller)\n      });\n    },\n    on: {\n      update: function update(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      resize: function resize(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        if (!swiper.controller.control) return;\n\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      },\n      setTranslate: function setTranslate(swiper, translate, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTranslate(translate, byController);\n      },\n      setTransition: function setTransition(swiper, duration, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTransition(duration, byController);\n      }\n    }\n  };\n\n  var A11y = {\n    getRandomNumber: function getRandomNumber(size) {\n      if (size === void 0) {\n        size = 16;\n      }\n\n      var randomChar = function randomChar() {\n        return Math.round(16 * Math.random()).toString(16);\n      };\n\n      return 'x'.repeat(size).replace(/x/g, randomChar);\n    },\n    makeElFocusable: function makeElFocusable($el) {\n      $el.attr('tabIndex', '0');\n      return $el;\n    },\n    makeElNotFocusable: function makeElNotFocusable($el) {\n      $el.attr('tabIndex', '-1');\n      return $el;\n    },\n    addElRole: function addElRole($el, role) {\n      $el.attr('role', role);\n      return $el;\n    },\n    addElRoleDescription: function addElRoleDescription($el, description) {\n      $el.attr('aria-roledescription', description);\n      return $el;\n    },\n    addElControls: function addElControls($el, controls) {\n      $el.attr('aria-controls', controls);\n      return $el;\n    },\n    addElLabel: function addElLabel($el, label) {\n      $el.attr('aria-label', label);\n      return $el;\n    },\n    addElId: function addElId($el, id) {\n      $el.attr('id', id);\n      return $el;\n    },\n    addElLive: function addElLive($el, live) {\n      $el.attr('aria-live', live);\n      return $el;\n    },\n    disableEl: function disableEl($el) {\n      $el.attr('aria-disabled', true);\n      return $el;\n    },\n    enableEl: function enableEl($el) {\n      $el.attr('aria-disabled', false);\n      return $el;\n    },\n    onEnterOrSpaceKey: function onEnterOrSpaceKey(e) {\n      if (e.keyCode !== 13 && e.keyCode !== 32) return;\n      var swiper = this;\n      var params = swiper.params.a11y;\n      var $targetEl = $(e.target);\n\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n        if (!(swiper.isEnd && !swiper.params.loop)) {\n          swiper.slideNext();\n        }\n\n        if (swiper.isEnd) {\n          swiper.a11y.notify(params.lastSlideMessage);\n        } else {\n          swiper.a11y.notify(params.nextSlideMessage);\n        }\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\n          swiper.slidePrev();\n        }\n\n        if (swiper.isBeginning) {\n          swiper.a11y.notify(params.firstSlideMessage);\n        } else {\n          swiper.a11y.notify(params.prevSlideMessage);\n        }\n      }\n\n      if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n        $targetEl[0].click();\n      }\n    },\n    notify: function notify(message) {\n      var swiper = this;\n      var notification = swiper.a11y.liveRegion;\n      if (notification.length === 0) return;\n      notification.html('');\n      notification.html(message);\n    },\n    updateNavigation: function updateNavigation() {\n      var swiper = this;\n      if (swiper.params.loop || !swiper.navigation) return;\n      var _swiper$navigation = swiper.navigation,\n          $nextEl = _swiper$navigation.$nextEl,\n          $prevEl = _swiper$navigation.$prevEl;\n\n      if ($prevEl && $prevEl.length > 0) {\n        if (swiper.isBeginning) {\n          swiper.a11y.disableEl($prevEl);\n          swiper.a11y.makeElNotFocusable($prevEl);\n        } else {\n          swiper.a11y.enableEl($prevEl);\n          swiper.a11y.makeElFocusable($prevEl);\n        }\n      }\n\n      if ($nextEl && $nextEl.length > 0) {\n        if (swiper.isEnd) {\n          swiper.a11y.disableEl($nextEl);\n          swiper.a11y.makeElNotFocusable($nextEl);\n        } else {\n          swiper.a11y.enableEl($nextEl);\n          swiper.a11y.makeElFocusable($nextEl);\n        }\n      }\n    },\n    updatePagination: function updatePagination() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.bullets.each(function (bulletEl) {\n          var $bulletEl = $(bulletEl);\n          swiper.a11y.makeElFocusable($bulletEl);\n\n          if (!swiper.params.pagination.renderBullet) {\n            swiper.a11y.addElRole($bulletEl, 'button');\n            swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n          }\n        });\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var params = swiper.params.a11y;\n      swiper.$el.append(swiper.a11y.liveRegion); // Container\n\n      var $containerEl = swiper.$el;\n\n      if (params.containerRoleDescriptionMessage) {\n        swiper.a11y.addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n      }\n\n      if (params.containerMessage) {\n        swiper.a11y.addElLabel($containerEl, params.containerMessage);\n      } // Wrapper\n\n\n      var $wrapperEl = swiper.$wrapperEl;\n      var wrapperId = $wrapperEl.attr('id') || \"swiper-wrapper-\" + swiper.a11y.getRandomNumber(16);\n      var live;\n      swiper.a11y.addElId($wrapperEl, wrapperId);\n\n      if (swiper.params.autoplay && swiper.params.autoplay.enabled) {\n        live = 'off';\n      } else {\n        live = 'polite';\n      }\n\n      swiper.a11y.addElLive($wrapperEl, live); // Slide\n\n      if (params.itemRoleDescriptionMessage) {\n        swiper.a11y.addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n      }\n\n      swiper.a11y.addElRole($(swiper.slides), params.slideRole);\n      swiper.slides.each(function (slideEl) {\n        var $slideEl = $(slideEl);\n        var ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, $slideEl.index() + 1).replace(/\\{\\{slidesLength\\}\\}/, swiper.slides.length);\n        swiper.a11y.addElLabel($slideEl, ariaLabelMessage);\n      }); // Navigation\n\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl && $nextEl.length) {\n        swiper.a11y.makeElFocusable($nextEl);\n\n        if ($nextEl[0].tagName !== 'BUTTON') {\n          swiper.a11y.addElRole($nextEl, 'button');\n          $nextEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n        }\n\n        swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n        swiper.a11y.addElControls($nextEl, wrapperId);\n      }\n\n      if ($prevEl && $prevEl.length) {\n        swiper.a11y.makeElFocusable($prevEl);\n\n        if ($prevEl[0].tagName !== 'BUTTON') {\n          swiper.a11y.addElRole($prevEl, 'button');\n          $prevEl.on('keydown', swiper.a11y.onEnterOrSpaceKey);\n        }\n\n        swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n        swiper.a11y.addElControls($prevEl, wrapperId);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n      var $nextEl;\n      var $prevEl;\n\n      if (swiper.navigation && swiper.navigation.$nextEl) {\n        $nextEl = swiper.navigation.$nextEl;\n      }\n\n      if (swiper.navigation && swiper.navigation.$prevEl) {\n        $prevEl = swiper.navigation.$prevEl;\n      }\n\n      if ($nextEl) {\n        $nextEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n      }\n\n      if ($prevEl) {\n        $prevEl.off('keydown', swiper.a11y.onEnterOrSpaceKey);\n      } // Pagination\n\n\n      if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n        swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), swiper.a11y.onEnterOrSpaceKey);\n      }\n    }\n  };\n  var A11y$1 = {\n    name: 'a11y',\n    params: {\n      a11y: {\n        enabled: true,\n        notificationClass: 'swiper-notification',\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n        firstSlideMessage: 'This is the first slide',\n        lastSlideMessage: 'This is the last slide',\n        paginationBulletMessage: 'Go to slide {{index}}',\n        slideLabelMessage: '{{index}} / {{slidesLength}}',\n        containerMessage: null,\n        containerRoleDescriptionMessage: null,\n        itemRoleDescriptionMessage: null,\n        slideRole: 'group'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        a11y: _extends({}, A11y, {\n          liveRegion: $(\"<span class=\\\"\" + swiper.params.a11y.notificationClass + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")\n        })\n      });\n    },\n    on: {\n      afterInit: function afterInit(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.init();\n        swiper.a11y.updateNavigation();\n      },\n      toEdge: function toEdge(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updateNavigation();\n      },\n      fromEdge: function fromEdge(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updateNavigation();\n      },\n      paginationUpdate: function paginationUpdate(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.updatePagination();\n      },\n      destroy: function destroy(swiper) {\n        if (!swiper.params.a11y.enabled) return;\n        swiper.a11y.destroy();\n      }\n    }\n  };\n\n  var History = {\n    init: function init() {\n      var swiper = this;\n      var window = getWindow();\n      if (!swiper.params.history) return;\n\n      if (!window.history || !window.history.pushState) {\n        swiper.params.history.enabled = false;\n        swiper.params.hashNavigation.enabled = true;\n        return;\n      }\n\n      var history = swiper.history;\n      history.initialized = true;\n      history.paths = History.getPathValues(swiper.params.url);\n      if (!history.paths.key && !history.paths.value) return;\n      history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var window = getWindow();\n\n      if (!swiper.params.history.replaceState) {\n        window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n      }\n    },\n    setHistoryPopState: function setHistoryPopState() {\n      var swiper = this;\n      swiper.history.paths = History.getPathValues(swiper.params.url);\n      swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n    },\n    getPathValues: function getPathValues(urlOverride) {\n      var window = getWindow();\n      var location;\n\n      if (urlOverride) {\n        location = new URL(urlOverride);\n      } else {\n        location = window.location;\n      }\n\n      var pathArray = location.pathname.slice(1).split('/').filter(function (part) {\n        return part !== '';\n      });\n      var total = pathArray.length;\n      var key = pathArray[total - 2];\n      var value = pathArray[total - 1];\n      return {\n        key: key,\n        value: value\n      };\n    },\n    setHistory: function setHistory(key, index) {\n      var swiper = this;\n      var window = getWindow();\n      if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n      var location;\n\n      if (swiper.params.url) {\n        location = new URL(swiper.params.url);\n      } else {\n        location = window.location;\n      }\n\n      var slide = swiper.slides.eq(index);\n      var value = History.slugify(slide.attr('data-history'));\n\n      if (swiper.params.history.root.length > 0) {\n        var root = swiper.params.history.root;\n        if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n        value = root + \"/\" + key + \"/\" + value;\n      } else if (!location.pathname.includes(key)) {\n        value = key + \"/\" + value;\n      }\n\n      var currentState = window.history.state;\n\n      if (currentState && currentState.value === value) {\n        return;\n      }\n\n      if (swiper.params.history.replaceState) {\n        window.history.replaceState({\n          value: value\n        }, null, value);\n      } else {\n        window.history.pushState({\n          value: value\n        }, null, value);\n      }\n    },\n    slugify: function slugify(text) {\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n    },\n    scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n      var swiper = this;\n\n      if (value) {\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHistory = History.slugify(slide.attr('data-history'));\n\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, runCallbacks);\n          }\n        }\n      } else {\n        swiper.slideTo(0, speed, runCallbacks);\n      }\n    }\n  };\n  var History$1 = {\n    name: 'history',\n    params: {\n      history: {\n        enabled: false,\n        root: '',\n        replaceState: false,\n        key: 'slides'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        history: _extends({}, History)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.history.enabled) {\n          swiper.history.init();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.history.enabled) {\n          swiper.history.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.history.initialized) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.history.initialized && swiper.params.cssMode) {\n          swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      }\n    }\n  };\n\n  var HashNavigation = {\n    onHashCange: function onHashCange() {\n      var swiper = this;\n      var document = getDocument();\n      swiper.emit('hashChange');\n      var newHash = document.location.hash.replace('#', '');\n      var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n      if (newHash !== activeSlideHash) {\n        var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-hash=\\\"\" + newHash + \"\\\"]\").index();\n        if (typeof newIndex === 'undefined') return;\n        swiper.slideTo(newIndex);\n      }\n    },\n    setHash: function setHash() {\n      var swiper = this;\n      var window = getWindow();\n      var document = getDocument();\n      if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n\n      if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n        window.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || '');\n        swiper.emit('hashSet');\n      } else {\n        var slide = swiper.slides.eq(swiper.activeIndex);\n        var hash = slide.attr('data-hash') || slide.attr('data-history');\n        document.location.hash = hash || '';\n        swiper.emit('hashSet');\n      }\n    },\n    init: function init() {\n      var swiper = this;\n      var document = getDocument();\n      var window = getWindow();\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n      swiper.hashNavigation.initialized = true;\n      var hash = document.location.hash.replace('#', '');\n\n      if (hash) {\n        var speed = 0;\n\n        for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n          var slide = swiper.slides.eq(i);\n          var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n            var index = slide.index();\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n          }\n        }\n      }\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    },\n    destroy: function destroy() {\n      var swiper = this;\n      var window = getWindow();\n\n      if (swiper.params.hashNavigation.watchState) {\n        $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n      }\n    }\n  };\n  var HashNavigation$1 = {\n    name: 'hash-navigation',\n    params: {\n      hashNavigation: {\n        enabled: false,\n        replaceState: false,\n        watchState: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        hashNavigation: _extends({\n          initialized: false\n        }, HashNavigation)\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.init();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.params.hashNavigation.enabled) {\n          swiper.hashNavigation.destroy();\n        }\n      },\n      transitionEnd: function transitionEnd(swiper) {\n        if (swiper.hashNavigation.initialized) {\n          swiper.hashNavigation.setHash();\n        }\n      },\n      slideChange: function slideChange(swiper) {\n        if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n          swiper.hashNavigation.setHash();\n        }\n      }\n    }\n  };\n\n  var Autoplay = {\n    run: function run() {\n      var swiper = this;\n      var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n      var delay = swiper.params.autoplay.delay;\n\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n      }\n\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = nextTick(function () {\n        var autoplayResult;\n\n        if (swiper.params.autoplay.reverseDirection) {\n          if (swiper.params.loop) {\n            swiper.loopFix();\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isBeginning) {\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n        } else if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isEnd) {\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n\n        if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();else if (autoplayResult === false) {\n          swiper.autoplay.run();\n        }\n      }, delay);\n    },\n    start: function start() {\n      var swiper = this;\n      if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n      if (swiper.autoplay.running) return false;\n      swiper.autoplay.running = true;\n      swiper.emit('autoplayStart');\n      swiper.autoplay.run();\n      return true;\n    },\n    stop: function stop() {\n      var swiper = this;\n      if (!swiper.autoplay.running) return false;\n      if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n      if (swiper.autoplay.timeout) {\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = undefined;\n      }\n\n      swiper.autoplay.running = false;\n      swiper.emit('autoplayStop');\n      return true;\n    },\n    pause: function pause(speed) {\n      var swiper = this;\n      if (!swiper.autoplay.running) return;\n      if (swiper.autoplay.paused) return;\n      if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.paused = true;\n\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n        swiper.autoplay.paused = false;\n        swiper.autoplay.run();\n      } else {\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      }\n    },\n    onVisibilityChange: function onVisibilityChange() {\n      var swiper = this;\n      var document = getDocument();\n\n      if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n        swiper.autoplay.pause();\n      }\n\n      if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n        swiper.autoplay.run();\n        swiper.autoplay.paused = false;\n      }\n    },\n    onTransitionEnd: function onTransitionEnd(e) {\n      var swiper = this;\n      if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n      if (e.target !== swiper.$wrapperEl[0]) return;\n      swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n      swiper.autoplay.paused = false;\n\n      if (!swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      } else {\n        swiper.autoplay.run();\n      }\n    }\n  };\n  var Autoplay$1 = {\n    name: 'autoplay',\n    params: {\n      autoplay: {\n        enabled: false,\n        delay: 3000,\n        waitForTransition: true,\n        disableOnInteraction: true,\n        stopOnLastSlide: false,\n        reverseDirection: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        autoplay: _extends({}, Autoplay, {\n          running: false,\n          paused: false\n        })\n      });\n    },\n    on: {\n      init: function init(swiper) {\n        if (swiper.params.autoplay.enabled) {\n          swiper.autoplay.start();\n          var document = getDocument();\n          document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        }\n      },\n      beforeTransitionStart: function beforeTransitionStart(swiper, speed, internal) {\n        if (swiper.autoplay.running) {\n          if (internal || !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.pause(speed);\n          } else {\n            swiper.autoplay.stop();\n          }\n        }\n      },\n      sliderFirstMove: function sliderFirstMove(swiper) {\n        if (swiper.autoplay.running) {\n          if (swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.pause();\n          }\n        }\n      },\n      touchEnd: function touchEnd(swiper) {\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.run();\n        }\n      },\n      destroy: function destroy(swiper) {\n        if (swiper.autoplay.running) {\n          swiper.autoplay.stop();\n        }\n\n        var document = getDocument();\n        document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    }\n  };\n\n  var Fade = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = swiper.slides.eq(i);\n        var offset = $slideEl[0].swiperSlideOffset;\n        var tx = -offset;\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n        $slideEl.css({\n          opacity: slideOpacity\n        }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides,\n          $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        slides.transitionEnd(function () {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return;\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFade = {\n    name: 'effect-fade',\n    params: {\n      fadeEffect: {\n        crossFade: false\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        fadeEffect: _extends({}, Fade)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.fadeEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'fade') return;\n        swiper.fadeEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Cube = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var $el = swiper.$el,\n          $wrapperEl = swiper.$wrapperEl,\n          slides = swiper.slides,\n          swiperWidth = swiper.width,\n          swiperHeight = swiper.height,\n          rtl = swiper.rtlTranslate,\n          swiperSize = swiper.size,\n          browser = swiper.browser;\n      var params = swiper.params.cubeEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      var wrapperRotate = 0;\n      var $cubeShadowEl;\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $wrapperEl.append($cubeShadowEl);\n          }\n\n          $cubeShadowEl.css({\n            height: swiperWidth + \"px\"\n          });\n        } else {\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n          if ($cubeShadowEl.length === 0) {\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n            $el.append($cubeShadowEl);\n          }\n        }\n      }\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideIndex = i;\n\n        if (isVirtual) {\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n        }\n\n        var slideAngle = slideIndex * 90;\n        var round = Math.floor(slideAngle / 360);\n\n        if (rtl) {\n          slideAngle = -slideAngle;\n          round = Math.floor(-slideAngle / 360);\n        }\n\n        var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        var tx = 0;\n        var ty = 0;\n        var tz = 0;\n\n        if (slideIndex % 4 === 0) {\n          tx = -round * 4 * swiperSize;\n          tz = 0;\n        } else if ((slideIndex - 1) % 4 === 0) {\n          tx = 0;\n          tz = -round * 4 * swiperSize;\n        } else if ((slideIndex - 2) % 4 === 0) {\n          tx = swiperSize + round * 4 * swiperSize;\n          tz = swiperSize;\n        } else if ((slideIndex - 3) % 4 === 0) {\n          tx = -swiperSize;\n          tz = 3 * swiperSize + swiperSize * 4 * round;\n        }\n\n        if (rtl) {\n          tx = -tx;\n        }\n\n        if (!isHorizontal) {\n          ty = tx;\n          tx = 0;\n        }\n\n        var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n\n        if (progress <= 1 && progress > -1) {\n          wrapperRotate = slideIndex * 90 + progress * 90;\n          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n        }\n\n        $slideEl.transform(transform);\n\n        if (params.slideShadows) {\n          // Set shadows\n          var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n      }\n\n      $wrapperEl.css({\n        '-webkit-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-moz-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        '-ms-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n        'transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\"\n      });\n\n      if (params.shadow) {\n        if (isHorizontal) {\n          $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\n        } else {\n          var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n          var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n          var scale1 = params.shadowScale;\n          var scale2 = params.shadowScale / multiplier;\n          var offset = params.shadowOffset;\n          $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\n        }\n      }\n\n      var zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n      $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var $el = swiper.$el,\n          slides = swiper.slides;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n        $el.find('.swiper-cube-shadow').transition(duration);\n      }\n    }\n  };\n  var EffectCube = {\n    name: 'effect-cube',\n    params: {\n      cubeEffect: {\n        slideShadows: true,\n        shadow: true,\n        shadowOffset: 20,\n        shadowScale: 0.94\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        cubeEffect: _extends({}, Cube)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.cubeEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'cube') return;\n        swiper.cubeEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Flip = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var slides = swiper.slides,\n          rtl = swiper.rtlTranslate;\n\n      for (var i = 0; i < slides.length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var progress = $slideEl[0].progress;\n\n        if (swiper.params.flipEffect.limitRotation) {\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n        }\n\n        var offset = $slideEl[0].swiperSlideOffset;\n        var rotate = -180 * progress;\n        var rotateY = rotate;\n        var rotateX = 0;\n        var tx = -offset;\n        var ty = 0;\n\n        if (!swiper.isHorizontal()) {\n          ty = tx;\n          tx = 0;\n          rotateX = -rotateY;\n          rotateY = 0;\n        } else if (rtl) {\n          rotateY = -rotateY;\n        }\n\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n        if (swiper.params.flipEffect.slideShadows) {\n          // Set shadows\n          var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if (shadowBefore.length === 0) {\n            shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append(shadowBefore);\n          }\n\n          if (shadowAfter.length === 0) {\n            shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append(shadowAfter);\n          }\n\n          if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n          if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n        }\n\n        $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      var slides = swiper.slides,\n          activeIndex = swiper.activeIndex,\n          $wrapperEl = swiper.$wrapperEl;\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false; // eslint-disable-next-line\n\n        slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n          if (eventTriggered) return;\n          if (!swiper || swiper.destroyed) return; // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n\n          eventTriggered = true;\n          swiper.animating = false;\n          var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n          for (var i = 0; i < triggerEvents.length; i += 1) {\n            $wrapperEl.trigger(triggerEvents[i]);\n          }\n        });\n      }\n    }\n  };\n  var EffectFlip = {\n    name: 'effect-flip',\n    params: {\n      flipEffect: {\n        slideShadows: true,\n        limitRotation: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        flipEffect: _extends({}, Flip)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        var overwriteParams = {\n          slidesPerView: 1,\n          slidesPerColumn: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: true\n        };\n        extend(swiper.params, overwriteParams);\n        extend(swiper.originalParams, overwriteParams);\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.flipEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'flip') return;\n        swiper.flipEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Coverflow = {\n    setTranslate: function setTranslate() {\n      var swiper = this;\n      var swiperWidth = swiper.width,\n          swiperHeight = swiper.height,\n          slides = swiper.slides,\n          slidesSizesGrid = swiper.slidesSizesGrid;\n      var params = swiper.params.coverflowEffect;\n      var isHorizontal = swiper.isHorizontal();\n      var transform = swiper.translate;\n      var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n      var rotate = isHorizontal ? params.rotate : -params.rotate;\n      var translate = params.depth; // Each slide offset from center\n\n      for (var i = 0, length = slides.length; i < length; i += 1) {\n        var $slideEl = slides.eq(i);\n        var slideSize = slidesSizesGrid[i];\n        var slideOffset = $slideEl[0].swiperSlideOffset;\n        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n        var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n        var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n        var translateZ = -translate * Math.abs(offsetMultiplier);\n        var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\n        }\n\n        var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n        var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n        var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n        if (Math.abs(translateX) < 0.001) translateX = 0;\n        if (Math.abs(translateY) < 0.001) translateY = 0;\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        if (Math.abs(scale) < 0.001) scale = 0;\n        var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg) scale(\" + scale + \")\";\n        $slideEl.transform(slideTransform);\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n        if (params.slideShadows) {\n          // Set shadows\n          var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n          var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n          if ($shadowBeforeEl.length === 0) {\n            $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n            $slideEl.append($shadowBeforeEl);\n          }\n\n          if ($shadowAfterEl.length === 0) {\n            $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n            $slideEl.append($shadowAfterEl);\n          }\n\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n        }\n      }\n    },\n    setTransition: function setTransition(duration) {\n      var swiper = this;\n      swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    }\n  };\n  var EffectCoverflow = {\n    name: 'effect-coverflow',\n    params: {\n      coverflowEffect: {\n        rotate: 50,\n        stretch: 0,\n        depth: 100,\n        scale: 1,\n        modifier: 1,\n        slideShadows: true\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        coverflowEffect: _extends({}, Coverflow)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n        swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      },\n      setTranslate: function setTranslate(swiper) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.coverflowEffect.setTranslate();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        if (swiper.params.effect !== 'coverflow') return;\n        swiper.coverflowEffect.setTransition(duration);\n      }\n    }\n  };\n\n  var Thumbs = {\n    init: function init() {\n      var swiper = this;\n      var thumbsParams = swiper.params.thumbs;\n      if (swiper.thumbs.initialized) return false;\n      swiper.thumbs.initialized = true;\n      var SwiperClass = swiper.constructor;\n\n      if (thumbsParams.swiper instanceof SwiperClass) {\n        swiper.thumbs.swiper = thumbsParams.swiper;\n        extend(swiper.thumbs.swiper.originalParams, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n        extend(swiper.thumbs.swiper.params, {\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        });\n      } else if (isObject(thumbsParams.swiper)) {\n        swiper.thumbs.swiper = new SwiperClass(extend({}, thumbsParams.swiper, {\n          watchSlidesVisibility: true,\n          watchSlidesProgress: true,\n          slideToClickedSlide: false\n        }));\n        swiper.thumbs.swiperCreated = true;\n      }\n\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n      swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n      return true;\n    },\n    onThumbClick: function onThumbClick() {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      var clickedIndex = thumbsSwiper.clickedIndex;\n      var clickedSlide = thumbsSwiper.clickedSlide;\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n      var slideToIndex;\n\n      if (thumbsSwiper.params.loop) {\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n      } else {\n        slideToIndex = clickedIndex;\n      }\n\n      if (swiper.params.loop) {\n        var currentIndex = swiper.activeIndex;\n\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n          swiper.loopFix(); // eslint-disable-next-line\n\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n          currentIndex = swiper.activeIndex;\n        }\n\n        var prevIndex = swiper.slides.eq(currentIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n        var nextIndex = swiper.slides.eq(currentIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n        if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n      }\n\n      swiper.slideTo(slideToIndex);\n    },\n    update: function update(initial) {\n      var swiper = this;\n      var thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n      var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n      var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n        var currentThumbsIndex = thumbsSwiper.activeIndex;\n        var newThumbsIndex;\n        var direction;\n\n        if (thumbsSwiper.params.loop) {\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n            currentThumbsIndex = thumbsSwiper.activeIndex;\n          } // Find actual thumbs index to slide to\n\n\n          var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n          var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n          if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;else newThumbsIndex = prevThumbsIndex;\n          direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n        } else {\n          newThumbsIndex = swiper.realIndex;\n          direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n        }\n\n        if (useOffset) {\n          newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n        }\n\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n          if (thumbsSwiper.params.centeredSlides) {\n            if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n            } else {\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n            }\n          } else if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n          }\n\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n        }\n      } // Activate thumbs\n\n\n      var thumbsToActivate = 1;\n      var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n        thumbsToActivate = swiper.params.slidesPerView;\n      }\n\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\n        thumbsToActivate = 1;\n      }\n\n      thumbsToActivate = Math.floor(thumbsToActivate);\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n        for (var i = 0; i < thumbsToActivate; i += 1) {\n          thumbsSwiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\").addClass(thumbActiveClass);\n        }\n      } else {\n        for (var _i = 0; _i < thumbsToActivate; _i += 1) {\n          thumbsSwiper.slides.eq(swiper.realIndex + _i).addClass(thumbActiveClass);\n        }\n      }\n    }\n  };\n  var Thumbs$1 = {\n    name: 'thumbs',\n    params: {\n      thumbs: {\n        swiper: null,\n        multipleActiveThumbs: true,\n        autoScrollOffset: 0,\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\n        thumbsContainerClass: 'swiper-container-thumbs'\n      }\n    },\n    create: function create() {\n      var swiper = this;\n      bindModuleMethods(swiper, {\n        thumbs: _extends({\n          swiper: null,\n          initialized: false\n        }, Thumbs)\n      });\n    },\n    on: {\n      beforeInit: function beforeInit(swiper) {\n        var thumbs = swiper.params.thumbs;\n        if (!thumbs || !thumbs.swiper) return;\n        swiper.thumbs.init();\n        swiper.thumbs.update(true);\n      },\n      slideChange: function slideChange(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      update: function update(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      resize: function resize(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      observerUpdate: function observerUpdate(swiper) {\n        if (!swiper.thumbs.swiper) return;\n        swiper.thumbs.update();\n      },\n      setTransition: function setTransition(swiper, duration) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n        thumbsSwiper.setTransition(duration);\n      },\n      beforeDestroy: function beforeDestroy(swiper) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) return;\n\n        if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n          thumbsSwiper.destroy();\n        }\n      }\n    }\n  };\n\n  // Swiper Class\n  var components = [Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y$1, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];\n  Swiper.use(components);\n\n  return Swiper;\n\n})));\n//# sourceMappingURL=swiper-bundle.js.map\n"]}